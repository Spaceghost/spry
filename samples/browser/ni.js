/* Generated by the Nim Compiler v0.13.1 */
/*   (c) 2015 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI43054 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43056 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43052 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3460 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3426 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39072 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI43049 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43058 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39089 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39087 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39084 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39091 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39107 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39109 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39103 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39115 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39117 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39111 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39099 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39119 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39004 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39124 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI39122 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI39121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39064 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI43041 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43010 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI43037 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39129 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI39132 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39159 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39155 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39135 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI43004 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43032 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39096 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39101 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39105 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39144 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39146 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39142 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39127 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39138 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39140 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39148 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39191 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI39161 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39194 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39074 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI39151 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI39150 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39157 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39068 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI39093 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39016 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI29002 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI39173 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI39170 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI39167 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3485 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3436 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
var NNI3436 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3436.node = NNI3436;
NTI3485.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3485, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3436.base = NTI3424;
NTI3440.base = NTI3436;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3438.base = NTI3436;
var NNI39157 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39157.node = NNI39157;
NTI39151.base = NTI39016;
var NNI39150 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodes_39152", len: 0, typ: NTI39151, name: "nodes", sons: null}, 
{kind: 1, offset: "pos_39153", len: 0, typ: NTI104, name: "pos", sons: null}]};
NTI39150.node = NNI39150;
NTI39150.base = NTI39093;
NTI39157.base = NTI39150;
NTI39068.base = NTI39157;
var NNI39093 = {kind: 1, offset: "tags_39094", len: 0, typ: NTI39068, name: "tags", sons: null};
NTI39093.node = NNI39093;
NTI39093.base = NTI3408;
NTI39016.base = NTI39093;
var NNI39194 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key_39195", len: 0, typ: NTI39016, name: "key", sons: null}, 
{kind: 1, offset: "val_39196", len: 0, typ: NTI39016, name: "val", sons: null}]};
NTI39194.node = NNI39194;
NTI39194.base = NTI39093;
NTI39074.base = NTI39194;
var NNI39173 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI29002, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI39016, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI39074, name: "Field3", sons: null}]};
NTI39173.node = NNI39173;
NTI39170.base = NTI39173;
var NNI39167 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data_39183", len: 0, typ: NTI39170, name: "data", sons: null}, 
{kind: 1, offset: "counter_39186", len: 0, typ: NTI104, name: "counter", sons: null}, 
{kind: 1, offset: "first_39188", len: 0, typ: NTI104, name: "first", sons: null}, 
{kind: 1, offset: "last_39190", len: 0, typ: NTI104, name: "last", sons: null}]};
NTI39167.node = NNI39167;
NTI39191.base = NTI39167;
var NNI39161 = {kind: 1, offset: "bindings_39192", len: 0, typ: NTI39191, name: "bindings", sons: null};
NTI39161.node = NNI39161;
var NNI39148 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39148.node = NNI39148;
NTI39148.base = NTI39093;
NTI39161.base = NTI39148;
var NNI39140 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39140.node = NNI39140;
var NNI39138 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39138.node = NNI39138;
var NNI39127 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39127.node = NNI39127;
NTI39127.base = NTI39093;
NTI39138.base = NTI39127;
NTI39140.base = NTI39138;
var NNI39142 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39142.node = NNI39142;
NTI39142.base = NTI39138;
var NNI39146 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39146.node = NNI39146;
NTI39146.base = NTI39127;
var NNI39144 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39144.node = NNI39144;
NTI39144.base = NTI39127;
var NNI39105 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39105.node = NNI39105;
var NNI39101 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39101.node = NNI39101;
var NNI39096 = {kind: 1, offset: "word_39097", len: 0, typ: NTI138, name: "word", sons: null};
NTI39096.node = NNI39096;
NTI39096.base = NTI39093;
NTI39101.base = NTI39096;
NTI39105.base = NTI39101;
var NNI43032 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "prok_43033", len: 0, typ: NTI43004, name: "prok", sons: null}, 
{kind: 1, offset: "infix_43034", len: 0, typ: NTI130, name: "infix", sons: null}, 
{kind: 1, offset: "arity_43035", len: 0, typ: NTI104, name: "arity", sons: null}]};
NTI43032.node = NNI43032;
NTI43032.base = NTI39093;
var NNI39076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39076.node = NNI39076;
NTI39076.base = NTI3424;
var NNI39135 = {kind: 1, offset: "value_39136", len: 0, typ: NTI138, name: "value", sons: null};
NTI39135.node = NNI39135;
NTI39135.base = NTI39127;
var NNI39155 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39155.node = NNI39155;
NTI39155.base = NTI39150;
var NNI39159 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39159.node = NNI39159;
NTI39159.base = NTI39150;
var NNI39132 = {kind: 1, offset: "value_39133", len: 0, typ: NTI124, name: "value", sons: null};
NTI39132.node = NNI39132;
NTI39132.base = NTI39127;
var NNI39129 = {kind: 1, offset: "value_39130", len: 0, typ: NTI104, name: "value", sons: null};
NTI39129.node = NNI39129;
NTI39129.base = NTI39127;
var NNI3448 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3448.node = NNI3448;
var NNI3446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3446.node = NNI3446;
NTI3446.base = NTI3424;
NTI3448.base = NTI3446;
NTI39064.base = NTI39150;
var NNI43041 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "last_43042", len: 0, typ: NTI39016, name: "last", sons: null}, 
{kind: 1, offset: "infixarg_43043", len: 0, typ: NTI39016, name: "infixArg", sons: null}, 
{kind: 1, offset: "returned_43044", len: 0, typ: NTI130, name: "returned", sons: null}, 
{kind: 1, offset: "parent_43045", len: 0, typ: NTI43010, name: "parent", sons: null}, 
{kind: 1, offset: "pos_43046", len: 0, typ: NTI104, name: "pos", sons: null}, 
{kind: 1, offset: "body_43047", len: 0, typ: NTI39064, name: "body", sons: null}]};
NTI43041.node = NNI43041;
NTI43041.base = NTI39093;
NTI43010.base = NTI43041;
var NNI43037 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "infix_43038", len: 0, typ: NTI130, name: "infix", sons: null}, 
{kind: 1, offset: "parent_43039", len: 0, typ: NTI43010, name: "parent", sons: null}]};
NTI43037.node = NNI43037;
NTI43037.base = NTI39157;
NTI39122.base = NTI138;
NTI39124.base = NTI39016;
var NNI39121 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "keys_39123", len: 0, typ: NTI39122, name: "keys", sons: null}, 
{kind: 1, offset: "args_39125", len: 0, typ: NTI39124, name: "args", sons: null}]};
NTI39121.node = NNI39121;
NTI39121.base = NTI39093;
var NNI39004 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39004.node = NNI39004;
NTI39004.base = NTI3424;
var NNI39119 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39119.node = NNI39119;
var NNI39099 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39099.node = NNI39099;
NTI39099.base = NTI39096;
NTI39119.base = NTI39099;
var NNI39111 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39111.node = NNI39111;
NTI39111.base = NTI39101;
var NNI39117 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39117.node = NNI39117;
NTI39117.base = NTI39099;
var NNI39115 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39115.node = NNI39115;
NTI39115.base = NTI39099;
var NNI39113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39113.node = NNI39113;
NTI39113.base = NTI39099;
var NNI39103 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39103.node = NNI39103;
NTI39103.base = NTI39096;
var NNI39109 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39109.node = NNI39109;
NTI39109.base = NTI39101;
var NNI39107 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39107.node = NNI39107;
NTI39107.base = NTI39101;
var NNI39091 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39091.node = NNI39091;
var NNI39084 = {kind: 1, offset: "token_39085", len: 0, typ: NTI138, name: "token", sons: null};
NTI39084.node = NNI39084;
NTI39084.base = NTI3408;
NTI39091.base = NTI39084;
var NNI39087 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39087.node = NNI39087;
NTI39087.base = NTI39084;
var NNI39089 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39089.node = NNI39089;
NTI39089.base = NTI39084;
var NNI43058 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI43058.node = NNI43058;
NTI39072.base = NTI39161;
var NNI43049 = {kind: 1, offset: "locals_43050", len: 0, typ: NTI39072, name: "locals", sons: null};
NTI43049.node = NNI43049;
NTI43049.base = NTI43041;
NTI43058.base = NTI43049;
var NNI3428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3428.node = NNI3428;
var NNI3426 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3426.node = NNI3426;
NTI3426.base = NTI3424;
NTI3428.base = NTI3426;
var NNI3460 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3460.node = NNI3460;
NTI3460.base = NTI3424;
var NNI43052 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI43052.node = NNI43052;
NTI43052.base = NTI43049;
var NNI43056 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI43056.node = NNI43056;
NTI43056.base = NTI43049;
var NNI43054 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI43054.node = NNI43054;
NTI43054.base = NTI43041;
var nimvm_5551 = false;
var nim_program_result = 0;
var globalraisehook_9813 = [null];
var localraisehook_9818 = [null];
var outofmemhook_9821 = [null];
function makeNimstrLit(c_12291) {
  var ln = c_12291.length;
  var result = new Array(ln + 1);
  var i = 0;
  for (; i < ln; ++i) {
    result[i] = c_12291.charCodeAt(i);
  }
  result[i] = 0; // terminating zero
  return result;
  }
function eqStrings(a_12351, b_12352) {
    if (a_12351 == b_12352) return true;
    if ((!a_12351) || (!b_12352)) return false;
    var alen = a_12351.length;
    if (alen != b_12352.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_12351[i] != b_12352[i]) return false;
    return true;
  }
function add_9836(x_9839, x_9839_Idx, y_9840) {
      var len = x_9839[0].length-1;
      for (var i = 0; i < y_9840.length; ++i) {
        x_9839[0][len] = y_9840.charCodeAt(i);
        ++len;
      }
      x_9839[0][len] = 0
    }
function toJSStr(s_12299) {
    var len = s_12299.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = s_12299[i].toString(16);
      }
      else if (s_12299[i] < 128)
        asciiPart[i] = fcc(s_12299[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  }
function unhandledException(e_11658) {
var Tmp1;
var buf_11801 = /**/[makeNimstrLit("")];
if (!!(eqStrings(e_11658.message, null))) Tmp1 = false; else {Tmp1 = !((e_11658.message[0] == 0)); }if (Tmp1) {
if (buf_11801[0] != null) { buf_11801[0] = (buf_11801[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_11801[0] = makeNimstrLit("Error: unhandled exception: ");};
if (buf_11801[0] != null) { buf_11801[0] = (buf_11801[0].slice(0, -1)).concat(e_11658.message); } else { buf_11801[0] = e_11658.message;};
}
else {
if (buf_11801[0] != null) { buf_11801[0] = (buf_11801[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_11801[0] = makeNimstrLit("Error: unhandled exception");};
}

if (buf_11801[0] != null) { buf_11801[0] = (buf_11801[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_11801[0] = makeNimstrLit(" [");};
add_9836(buf_11801, 0, e_11658.name);
if (buf_11801[0] != null) { buf_11801[0] = (buf_11801[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_11801[0] = makeNimstrLit("]\x0A");};
alert(toJSStr(buf_11801[0]));
}
function raiseException(e_11806, ename_11807) {
e_11806.name = ename_11807;
if ((excHandler == 0)) {
unhandledException(e_11806);
}

throw e_11806;}
function raiseOverflow() {
var e_12211 = null;
e_12211 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_12211.message = makeNimstrLit("over- or underflow");
raiseException(e_12211, "OverflowError");
}
function raiseDivByZero() {
var e_12227 = null;
e_12227 = {m_type: NTI3438, parent: null, name: null, message: null, trace: null};
e_12227.message = makeNimstrLit("division by zero");
raiseException(e_12227, "DivByZeroError");
}
var objectid_29233 = /**/[0];
function newseq_39388(len_39392) {
var result_39394 = null;
result_39394 = new Array(len_39392); for (var i=0;i<len_39392;++i) {result_39394[i]=null;}return result_39394;
}
var parserexts_39413 = /**/[newseq_39388(0)];
function initorderedtable_40134(initialsize_40139) {
var result_40141 = {data_39183: null, counter_39186: 0, first_39188: 0, last_39190: 0};
result_40141.counter_39186 = 0;
result_40141.first_39188 = -1;
result_40141.last_39190 = -1;
result_40141.data_39183 = new Array(initialsize_40139); for (var i=0;i<initialsize_40139;++i) {result_40141.data_39183[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}return result_40141;
}
function SetConstr() {
    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  }
function isfatpointer_12697(ti_12699) {
var result_12700 = false;
BeforeRet: do {
result_12700 = !((SetConstr(17, 16, 4, 18, 27, 19, 23, 22, 21)[ti_12699.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_12700;
}
function nimCopyAux(dest_12719, src_12720, n_12722) {
switch (n_12722.kind) {
case 0: 
break;
case 1:       dest_12719[n_12722.offset] = nimCopy(dest_12719[n_12722.offset], src_12720[n_12722.offset], n_12722.typ);
    
break;
case 2: L1: do {
var i_13015 = 0;
var HEX3Atmp_13017 = 0;
HEX3Atmp_13017 = (n_12722.len - 1);
var res_13020 = 0;
L2: do {
L3: while (true) {
if (!(res_13020 <= HEX3Atmp_13017)) break L3;
i_13015 = res_13020;
nimCopyAux(dest_12719, src_12720, n_12722.sons[i_13015]);
res_13020 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_12719[n_12722.offset] = nimCopy(dest_12719[n_12722.offset], src_12720[n_12722.offset], n_12722.typ);
      for (var i = 0; i < n_12722.sons.length; ++i) {
        nimCopyAux(dest_12719, src_12720, n_12722.sons[i][1]);
      }
    
break;
}
}
function nimCopy(dest_12714, src_12715, ti_12716) {
var result_13029 = null;
switch (ti_12716.kind) {
case 21: case 22: case 23: case 5: if (!(isfatpointer_12697(ti_12716))) {
result_13029 = src_12715;
}
else {
result_13029 = [src_12715[0], src_12715[1]];}


break;
case 19:       if (dest_12714 === null || dest_12714 === undefined) {
        dest_12714 = {};
      }
      else {
        for (var key in dest_12714) { delete dest_12714[key]; }
      }
      for (var key in src_12715) { dest_12714[key] = src_12715[key]; }
      result_13029 = dest_12714;
    
break;
case 18: case 17: if (!((ti_12716.base == null))) {
result_13029 = nimCopy(dest_12714, src_12715, ti_12716.base);
}
else {
if ((ti_12716.kind == 17)) {
result_13029 = (dest_12714 === null || dest_12714 === undefined) ? {m_type: ti_12716} : dest_12714;}
else {
result_13029 = (dest_12714 === null || dest_12714 === undefined) ? {} : dest_12714;}
}
nimCopyAux(result_13029, src_12715, ti_12716.node);

break;
case 24: case 4: case 27: case 16:       if (src_12715 === null) {
        result_13029 = null;
      }
      else {
        if (dest_12714 === null || dest_12714 === undefined) {
          dest_12714 = new Array(src_12715.length);
        }
        else {
          dest_12714.length = src_12715.length;
        }
        result_13029 = dest_12714;
        for (var i = 0; i < src_12715.length; ++i) {
          result_13029[i] = nimCopy(result_13029[i], src_12715[i], ti_12716.base);
        }
      }
    
break;
case 28:       if (src_12715 !== null) {
        result_13029 = src_12715.slice(0);
      }
    
break;
default: 
result_13029 = src_12715;
break;
}
return result_13029;
}
function neworderedtable_40117(initialsize_40122) {
var result_40124 = null;
result_40124 = {data_39183: null, counter_39186: 0, first_39188: 0, last_39190: 0};
nimCopy(result_40124, initorderedtable_40134(64), NTI39167);
return result_40124;
}
function newmap_40093() {
var result_40095 = null;
result_40095 = {bindings_39192: neworderedtable_40117(64), m_type: NTI39161, tags_39094: null};
return result_40095;
}
function newvalue_40527(v_40529) {
var Tmp1;
var result_40530 = null;
if (v_40529) {
Tmp1 = {m_type: NTI39140, tags_39094: null};
}
else {
Tmp1 = {m_type: NTI39142, tags_39094: null};
}

result_40530 = Tmp1;
return result_40530;
}
function newnilval_40534() {
var result_40536 = null;
result_40536 = {m_type: NTI39146, tags_39094: null};
return result_40536;
}
function newundefval_40538() {
var result_40540 = null;
result_40540 = {m_type: NTI39144, tags_39094: null};
return result_40540;
}
function isfilled_35263(hcode_35265) {
var result_35266 = false;
result_35266 = !((hcode_35265 == 0));
return result_35266;
}
function nexttry_35401(h_35403, maxhash_35404) {
var result_35405 = 0;
result_35405 = ((h_35403 + 1) & maxhash_35404);
return result_35405;
}
function rawget_39919(t_39925, key_39927, hc_39929, hc_39929_Idx) {
var Tmp3;
var result_39930 = 0;
BeforeRet: do {
hc_39929[hc_39929_Idx] = hash_39220(key_39927);
if ((hc_39929[hc_39929_Idx] == 0)) {
hc_39929[hc_39929_Idx] = 314159265;
}

var h_39932 = (hc_39929[hc_39929_Idx] & (t_39925.data_39183 != null ? (t_39925.data_39183.length-1) : -1));
L1: do {
L2: while (true) {
if (!isfilled_35263(t_39925.data_39183[h_39932].Field0)) break L2;
if (!(t_39925.data_39183[h_39932].Field0 == hc_39929[hc_39929_Idx])) Tmp3 = false; else {Tmp3 = HEX3DHEX3D_39230(t_39925.data_39183[h_39932].Field2, key_39927); }if (Tmp3) {
result_39930 = h_39932;
break BeforeRet;
}

h_39932 = nexttry_35401(h_39932, (t_39925.data_39183 != null ? (t_39925.data_39183.length-1) : -1));
}
} while(false);
result_39930 = (-1 - h_39932);
} while (false); 
return result_39930;
}
function mustrehash_35268(length_35270, counter_35271) {
var result_35272 = false;
result_35272 = (((length_35270 * 2) < (counter_35271 * 3)) || ((length_35270 - counter_35271) < 4));
return result_35272;
}
function rawgetknownhc_39989(t_39995, key_39997, hc_39999) {
var result_40000 = 0;
BeforeRet: do {
var h_40001 = (hc_39999 & (t_39995.data_39183 != null ? (t_39995.data_39183.length-1) : -1));
L1: do {
L2: while (true) {
if (!isfilled_35263(t_39995.data_39183[h_40001].Field0)) break L2;
if (((t_39995.data_39183[h_40001].Field0 == hc_39999) && HEX3DHEX3D_39230(t_39995.data_39183[h_40001].Field2, key_39997))) {
result_40000 = h_40001;
break BeforeRet;
}

h_40001 = nexttry_35401(h_40001, (t_39995.data_39183 != null ? (t_39995.data_39183.length-1) : -1));
}
} while(false);
result_40000 = (-1 - h_40001);
} while (false); 
return result_40000;
}
function rawinsert_40006(t_40013, data_40017, data_40017_Idx, key_40019, val_40021, hc_40023, h_40025) {
data_40017[data_40017_Idx][h_40025].Field2 = key_40019;
data_40017[data_40017_Idx][h_40025].Field3 = val_40021;
data_40017[data_40017_Idx][h_40025].Field0 = hc_40023;
data_40017[data_40017_Idx][h_40025].Field1 = -1;
if ((t_40013.first_39188 < 0)) {
t_40013.first_39188 = h_40025;
}

if ((0 <= t_40013.last_39190)) {
data_40017[data_40017_Idx][t_40013.last_39190].Field1 = h_40025;
}

t_40013.last_39190 = h_40025;
}
function enlarge_39946(t_39953) {
var n_39957 = null;
n_39957 = new Array(((t_39953.data_39183 != null ? t_39953.data_39183.length : 0) * 2)); for (var i=0;i<((t_39953.data_39183 != null ? t_39953.data_39183.length : 0) * 2);++i) {n_39957[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}var h_39976 = t_39953.first_39188;
t_39953.first_39188 = -1;
t_39953.last_39190 = -1;
var Tmp1 = t_39953.data_39183; t_39953.data_39183 = n_39957; n_39957 = Tmp1;L2: do {
L3: while (true) {
if (!(0 <= h_39976)) break L3;
var nxt_39987 = n_39957[h_39976].Field1;
if (isfilled_35263(n_39957[h_39976].Field0)) {
var j_40004 = (-1 - rawgetknownhc_39989(t_39953, n_39957[h_39976].Field2, n_39957[h_39976].Field0));
rawinsert_40006(t_39953, t_39953, "data_39183", n_39957[h_39976].Field2, n_39957[h_39976].Field3, n_39957[h_39976].Field0, j_40004);
}

h_39976 = nxt_39987;
}
} while(false);
}
function HEX5BHEX5DHEX3D_39905(t_39912, key_39914, val_39916) {
var hc_39917 = [0];
var index_39936 = rawget_39919(t_39912, key_39914, hc_39917, 0);
if ((0 <= index_39936)) {
t_39912.data_39183[index_39936].Field3 = val_39916;
}
else {
if (mustrehash_35268((t_39912.data_39183 != null ? t_39912.data_39183.length : 0), t_39912.counter_39186)) {
enlarge_39946(t_39912);
index_39936 = rawgetknownhc_39989(t_39912, key_39914, hc_39917[0]);
}

index_39936 = (-1 - index_39936);
rawinsert_40006(t_39912, t_39912, "data_39183", key_39914, val_39916, hc_39917[0], index_39936);
t_39912.counter_39186 += 1;
}

}
function HEX5BHEX5DHEX3D_39893(t_39899, key_39901, val_39903) {
HEX5BHEX5DHEX3D_39905(t_39899, key_39901, val_39903);
}
function makebinding_39886(self_39888, key_39889, val_39890) {
var result_39891 = null;
result_39891 = {key_39195: key_39889, val_39196: val_39890, m_type: NTI39194, tags_39094: null};
HEX5BHEX5DHEX3D_39893(self_39888.bindings_39192, key_39889, result_39891);
return result_39891;
}
function newevalword_40273(s_40275) {
var result_40276 = null;
result_40276 = {word_39097: s_40275, m_type: NTI39105, tags_39094: null};
return result_40276;
}
function makeword_44067(self_44069, word_44070, value_44071) {
makebinding_39886(self_44069.root_43024, newevalword_40273(word_44070), value_44071);
}
function newnimproc_43468(prok_43470, infix_43471, arity_43472) {
var result_43473 = null;
result_43473 = {prok_43033: prok_43470, infix_43034: infix_43471, arity_43035: arity_43472, m_type: NTI43032, tags_39094: null};
return result_43473;
}
function getlocals_43521(self_43523) {
var result_43524 = null;
if ((self_43523.locals_43050 === null)) {
self_43523.locals_43050 = newmap_40093();
}

result_43524 = self_43523.locals_43050;
return result_43524;
}
function len_43456(self_43458) {
var result_43459 = 0;
result_43459 = (self_43458.body_43047.nodes_39152 != null ? self_43458.body_43047.nodes_39152.length : 0);
return result_43459;
}
function atend_43863(self_43865) {
var result_43866 = false;
result_43866 = (self_43865.pos_43046 == len_43456(self_43865));
return result_43866;
}
function raiseruntimeexception_39198(msg_39200) {
var e_39204 = null;
e_39204 = {m_type: NTI39076, parent: null, name: null, message: null, trace: null};
e_39204.message = msg_39200;
raiseException(e_39204, "RuntimeException");
}
function HEX5BHEX5D_43451(self_43453, i_43454) {
var result_43455 = null;
result_43455 = self_43453.body_43047.nodes_39152[i_43454];
return result_43455;
}
function next_43867(self_43869) {
var result_43870 = null;
if (atend_43863(self_43869)) {
raiseruntimeexception_39198(makeNimstrLit("End of current block, too few arguments?"));
}
else {
result_43870 = HEX5BHEX5D_43451(self_43869, self_43869.pos_43046);
self_43869.pos_43046 += 1;
}

return result_43870;
}
function evalarg_44063(ni_44065) {
var result_44066 = null;
result_44066 = eval_43070(next_43867(ni_44065.currentactivation_43022), ni_44065);
return result_44066;
}
function newseq_40372(len_40376) {
var result_40378 = null;
result_40378 = new Array(len_40376); for (var i=0;i<len_40376;++i) {result_40378[i]=null;}return result_40378;
}
function newblok_40404() {
var result_40406 = null;
result_40406 = {nodes_39152: newseq_40372(0), m_type: NTI39157, pos_39153: 0, tags_39094: null};
return result_40406;
}
function add_40542(self_40544, n_40545) {
if (self_40544.nodes_39152 != null) { self_40544.nodes_39152.push(n_40545); } else { self_40544.nodes_39152 = [n_40545]; };
}
function boolval_44072(val_44074, ni_44075) {
var result_44076 = null;
if (val_44074) {
result_44076 = ni_44075.trueval_43025;
}
else {
result_44076 = ni_44075.falseval_43026;
}

return result_44076;
}
function find_40634(a_40639, item_40641) {
var result_40642 = 0;
BeforeRet: do {
L1: do {
var i_40668 = null;
var i_40681 = 0;
L2: do {
L3: while (true) {
if (!(i_40681 < (a_40639 != null ? a_40639.length : 0))) break L3;
i_40668 = a_40639[i_40681];
if (HEX3DHEX3D_39230(i_40668, item_40641)) {
break BeforeRet;
}

result_40642 += 1;
i_40681 += 1;
}
} while(false);
} while(false);
result_40642 = -1;
} while (false); 
return result_40642;
}
function contains_40624(a_40629, item_40631) {
var result_40632 = false;
BeforeRet: do {
result_40632 = (0 <= find_40634(a_40629, item_40631));
break BeforeRet;
} while (false); 
return result_40632;
}
function contains_40617(self_40619, n_40620) {
var result_40621 = false;
result_40621 = contains_40624(self_40619.nodes_39152, n_40620);
return result_40621;
}
function isObj(obj_13139, subclass_13140) {
var result_13141 = false;
BeforeRet: do {
var x_13142 = obj_13139;
if ((x_13142 == subclass_13140)) {
result_13141 = true;
break BeforeRet;
}

L1: do {
L2: while (true) {
if (!!((x_13142 == subclass_13140))) break L2;
if ((x_13142 == null)) {
result_13141 = false;
break BeforeRet;
}

x_13142 = x_13142.base;
}
} while(false);
result_13141 = true;
break BeforeRet;
} while (false); 
return result_13141;
}
function lookup_43924(ni_43926, key_43927) {
var result_43928 = null;
BeforeRet: do {
L1: do {
var activation_43929 = null;
var HEX3Atmp_43941 = null;
HEX3Atmp_43941 = ni_43926.currentactivation_43022;
var activation_43945 = HEX3Atmp_43941;
L2: do {
L3: while (true) {
if (!!((activation_43945 === null))) break L3;
L4: do {
L5: while (true) {
if (!!(haslocals_43538(activation_43945))) break L5;
activation_43945 = outer_43551(activation_43945);
}
} while(false);
activation_43929 = activation_43945;
var hit_43930 = lookup_43906(activation_43929, key_43927);
if (!((hit_43930 === null))) {
result_43928 = hit_43930;
break BeforeRet;
}

activation_43945 = outer_43551(activation_43945);
}
} while(false);
} while(false);
} while (false); 
return result_43928;
}
function makebinding_43981(ni_43983, key_43984, val_43985) {
var result_43986 = null;
BeforeRet: do {
L1: do {
var activation_43987 = null;
var HEX3Atmp_43989 = null;
HEX3Atmp_43989 = ni_43983.currentactivation_43022;
var activation_43993 = HEX3Atmp_43989;
L2: do {
L3: while (true) {
if (!!((activation_43993 === null))) break L3;
L4: do {
L5: while (true) {
if (!!(haslocals_43538(activation_43993))) break L5;
activation_43993 = outer_43551(activation_43993);
}
} while(false);
activation_43987 = activation_43993;
result_43986 = makebinding_43971(activation_43987, key_43984, val_43985);
break BeforeRet;
activation_43993 = outer_43551(activation_43993);
}
} while(false);
} while(false);
} while (false); 
return result_43986;
}
function setbinding_43994(ni_43996, key_43997, value_43998) {
var result_43999 = null;
result_43999 = lookup_43924(ni_43996, key_43997);
if (!((result_43999 === null))) {
result_43999.val_39196 = value_43998;
}
else {
result_43999 = makebinding_43981(ni_43996, key_43997, value_43998);
}

return result_43999;
}
function arginfix_44047(ni_44049) {
var result_44050 = null;
result_44050 = ni_44049.currentactivation_43022.last_43042;
return result_44050;
}
function arg_44056(ni_44058) {
var result_44059 = null;
result_44059 = next_43867(ni_44058.currentactivation_43022);
return result_44059;
}
function newvalue_40517(v_40519) {
var result_40520 = null;
result_40520 = {value_39133: v_40519, m_type: NTI39132, tags_39094: null};
return result_40520;
}
function newvalue_40512(v_40514) {
var result_40515 = null;
result_40515 = {value_39130: v_40514, m_type: NTI39129, tags_39094: null};
return result_40515;
}
function HEX5BHEX5D_43416(self_43418, key_43419) {
var result_43420 = null;
result_43420 = self_43418.nodes_39152[key_43419.value_39130];
return result_43420;
}
function haskey_43222(t_43228, key_43230) {
var result_43231 = false;
var hc_43232 = [0];
result_43231 = (0 <= rawget_39919(t_43228, key_43230, hc_43232, 0));
return result_43231;
}
function haskey_43211(t_43217, key_43219) {
var result_43220 = false;
result_43220 = haskey_43222(t_43217, key_43219);
return result_43220;
}
function rawget_39869(t_39874, key_39876, hc_39878, hc_39878_Idx) {
var Tmp3;
var result_39879 = 0;
BeforeRet: do {
hc_39878[hc_39878_Idx] = hash_39220(key_39876);
if ((hc_39878[hc_39878_Idx] == 0)) {
hc_39878[hc_39878_Idx] = 314159265;
}

var h_39881 = (hc_39878[hc_39878_Idx] & (t_39874.data_39183 != null ? (t_39874.data_39183.length-1) : -1));
L1: do {
L2: while (true) {
if (!isfilled_35263(t_39874.data_39183[h_39881].Field0)) break L2;
if (!(t_39874.data_39183[h_39881].Field0 == hc_39878[hc_39878_Idx])) Tmp3 = false; else {Tmp3 = HEX3DHEX3D_39230(t_39874.data_39183[h_39881].Field2, key_39876); }if (Tmp3) {
result_39879 = h_39881;
break BeforeRet;
}

h_39881 = nexttry_35401(h_39881, (t_39874.data_39183 != null ? (t_39874.data_39183.length-1) : -1));
}
} while(false);
result_39879 = (-1 - h_39881);
} while (false); 
return result_39879;
}
function HEX5BHEX5D_43261(t_43268, key_43270) {
var result_43272 = [null, 0];
var hc_43274 = [0];
var index_43276 = rawget_39869(t_43268, key_43270, hc_43274, 0);
if ((0 <= index_43276)) {
result_43272 = t_43268.data_39183[index_43276]; result_43272_Idx = "Field3";
}
else {
var e_43403 = null;
e_43403 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null};
e_43403.message = (makeNimstrLit("key not found: ").slice(0,-1)).concat(HEX24_39604(key_43270));
raiseException(e_43403, "KeyError");
}

return [result_43272, result_43272_Idx];
}
function HEX5BHEX5D_43249(t_43255, key_43257) {
var result_43259 = [null, 0];
var Tmp1 = HEX5BHEX5D_43261(t_43255, key_43257); result_43259 = Tmp1[0]; result_43259_Idx = Tmp1[1];
return [result_43259, result_43259_Idx];
}
function HEX5BHEX5D_43205(self_43207, key_43208) {
var Tmp1;
var result_43209 = null;
BeforeRet: do {
if (haskey_43211(self_43207.bindings_39192, key_43208)) {
result_43209 = (Tmp1 = HEX5BHEX5D_43249(self_43207.bindings_39192, key_43208), Tmp1[0][Tmp1[1]]).val_39196;
break BeforeRet;
}

} while (false); 
return result_43209;
}
function HEX5BHEX5DHEX3D_43436(self_43438, key_43439, val_43440) {
self_43438.nodes_39152[key_43439.value_39130] = val_43440;
}
function HEX5BHEX5DHEX3D_43431(self_43433, key_43434, val_43435) {
makebinding_39886(self_43433, key_43434, val_43435);
}
function HEX5BHEX5D_43426(self_43428, key_43429) {
var result_43430 = null;
result_43430 = self_43428.nodes_39152[key_43429];
return result_43430;
}
function HEX5BHEX5DHEX3D_43446(self_43448, key_43449, val_43450) {
self_43448.nodes_39152[key_43449] = val_43450;
}
function delete_41078(x_41084, x_41084_Idx, i_41086) {
x_41084[x_41084_Idx].splice(i_41086, 1);}
function removelast_41074(self_41076) {
delete_41078(self_41076, "nodes_39152", (self_41076.nodes_39152 != null ? (self_41076.nodes_39152.length-1) : -1));
}
function newfunk_43475(body_43477, infix_43478, parent_43479) {
var result_43480 = null;
result_43480 = {nodes_39152: body_43477.nodes_39152, infix_43038: infix_43478, parent_43039: parent_43479, m_type: NTI43037, pos_39153: 0, tags_39094: null};
return result_43480;
}
function funk_43060(ni_43062, body_43063, infix_43064) {
var result_44543 = null;
result_44543 = newfunk_43475(body_43063, infix_43064, ni_43062.currentactivation_43022);
return result_44543;
}
function currentkeyword_42137(self_42139) {
var result_42140 = null;
BeforeRet: do {
if (isObj(self_42139.stack_39080[(self_42139.stack_39080 != null ? (self_42139.stack_39080.length-1) : -1)].m_type, NTI39121)) {
result_42140 = self_42139.stack_39080[(self_42139.stack_39080 != null ? (self_42139.stack_39080.length-1) : -1)];
break BeforeRet;
}
else {
result_42140 = null;
break BeforeRet;
}

} while (false); 
return result_42140;
}
function inbalance_42057(self_42059) {
var result_42060 = false;
BeforeRet: do {
result_42060 = ((self_42059.args_39125 != null ? self_42059.args_39125.length : 0) == (self_42059.keys_39123 != null ? self_42059.keys_39123.length : 0));
break BeforeRet;
} while (false); 
return result_42060;
}
function pop_42159(s_42165, s_42165_Idx) {
var result_42166 = null;
var L_42175 = ((s_42165[s_42165_Idx] != null ? s_42165[s_42165_Idx].length : 0) - 1);
result_42166 = s_42165[s_42165_Idx][L_42175];
s_42165[s_42165_Idx].length = L_42175;
return result_42166;
}
function mnewString(len_12303) {
    var result = new Array(len_12303+1);
    result[0] = 0;
    result[len_12303] = 0;
    return result;
  }
function nsuJoin(a_23651) {
var result_23652 = null;
if ((0 < (a_23651 != null ? a_23651.length : 0))) {
var L_23660 = 0;
L1: do {
var i_23670 = 0;
var HEX3Atmp_23691 = 0;
HEX3Atmp_23691 = (a_23651 != null ? (a_23651.length-1) : -1);
var res_23694 = 0;
L2: do {
L3: while (true) {
if (!(res_23694 <= HEX3Atmp_23691)) break L3;
i_23670 = res_23694;
L_23660 += (a_23651[i_23670] != null ? a_23651[i_23670].length-1 : 0);
res_23694 += 1;
}
} while(false);
} while(false);
result_23652 = mnewString(0);
L4: do {
var i_23689 = 0;
var HEX3Atmp_23699 = 0;
HEX3Atmp_23699 = (a_23651 != null ? (a_23651.length-1) : -1);
var res_23702 = 0;
L5: do {
L6: while (true) {
if (!(res_23702 <= HEX3Atmp_23699)) break L6;
i_23689 = res_23702;
if (result_23652 != null) { result_23652 = (result_23652.slice(0, -1)).concat(a_23651[i_23689]); } else { result_23652 = a_23651[i_23689];};
res_23702 += 1;
}
} while(false);
} while(false);
}
else {
result_23652 = makeNimstrLit("");
}

return result_23652;
}
function add_40562(x_40568, x_40568_Idx, y_40571) {
var xl_40580 = (x_40568[x_40568_Idx] != null ? x_40568[x_40568_Idx].length : 0);
x_40568[x_40568_Idx].length = (xl_40580 + (y_40571 != null ? y_40571.length : 0));
L1: do {
var i_40607 = 0;
var HEX3Atmp_40609 = 0;
HEX3Atmp_40609 = (y_40571 != null ? (y_40571.length-1) : -1);
var res_40612 = 0;
L2: do {
L3: while (true) {
if (!(res_40612 <= HEX3Atmp_40609)) break L3;
i_40607 = res_40612;
x_40568[x_40568_Idx][(xl_40580 + i_40607)] = y_40571[i_40607];
res_40612 += 1;
}
} while(false);
} while(false);
}
function producenodes_42077(self_42079) {
var result_42081 = [null];
result_42081[0] = newseq_40372(0);
if (result_42081[0] != null) { result_42081[0].push(newevalword_40273(nsuJoin(self_42079.keys_39123))); } else { result_42081[0] = [newevalword_40273(nsuJoin(self_42079.keys_39123))]; };
add_40562(result_42081, 0, self_42079.args_39125);
return result_42081[0];
}
function add_40556(self_40558, n_40560) {
add_40562(self_40558, "nodes_39152", n_40560);
}
function closekeyword_42143(self_42145) {
var keyword_42193 = currentkeyword_42137(self_42145);
pop_42159(self_42145, "stack_39080");
var nodes_42204 = producenodes_42077(keyword_42193);
removelast_41074(self_42145.stack_39080[(self_42145.stack_39080 != null ? (self_42145.stack_39080.length-1) : -1)]);
add_40556(self_42145.stack_39080[(self_42145.stack_39080 != null ? (self_42145.stack_39080.length-1) : -1)], nodes_42204);
}
function doaddnode_42205(self_42207, node_42208) {
var keyword_42209 = currentkeyword_42137(self_42207);
if ((keyword_42209 === null)) {
add_40542(self_42207.stack_39080[(self_42207.stack_39080 != null ? (self_42207.stack_39080.length-1) : -1)], node_42208);
}
else {
if (inbalance_42057(keyword_42209)) {
closekeyword_42143(self_42207);
doaddnode_42205(self_42207, node_42208);
}
else {
if (keyword_42209.args_39125 != null) { keyword_42209.args_39125.push(node_42208); } else { keyword_42209.args_39125 = [node_42208]; };
}

}

}
function push_42228(self_42230, n_42231) {
if (!(((self_42230.stack_39080 != null ? self_42230.stack_39080.length : 0) == 0))) {
doaddnode_42205(self_42230, n_42231);
}

if (self_42230.stack_39080 != null) { self_42230.stack_39080.push(n_42231); } else { self_42230.stack_39080 = [n_42231]; };
}
function raiseparseexception_40076(msg_40078) {
var e_40082 = null;
e_40082 = {m_type: NTI39004, parent: null, name: null, message: null, trace: null};
e_40082.message = msg_40078;
raiseException(e_40082, "ParseException");
}
function newgetargword_40313(s_40315) {
var result_40316 = null;
result_40316 = {word_39097: s_40315, m_type: NTI39119, tags_39094: null};
return result_40316;
}
function HEX5BHEX5D_13847(s_13849, x_13859) {
var result_13860 = null;
result_13860 = (s_13849.slice(x_13859.a_13856, (x_13859.b_13858)+1).concat(0));
return result_13860;
}
function HEX2EHEX2E_25611(a_25615, b_25617) {
var result_25619 = {a_13856: 0, b_13858: 0};
result_25619.a_13856 = a_25615;
result_25619.b_13858 = b_25617;
return result_25619;
}
function newevalargword_40308(s_40310) {
var result_40311 = null;
result_40311 = {word_39097: s_40310, m_type: NTI39111, tags_39094: null};
return result_40311;
}
function newgetouterword_40298(s_40300) {
var result_40301 = null;
result_40301 = {word_39097: s_40300, m_type: NTI39117, tags_39094: null};
return result_40301;
}
function newgetselfword_40293(s_40295) {
var result_40296 = null;
result_40296 = {word_39097: s_40295, m_type: NTI39115, tags_39094: null};
return result_40296;
}
function newgetword_40288(s_40290) {
var result_40291 = null;
result_40291 = {word_39097: s_40290, m_type: NTI39113, tags_39094: null};
return result_40291;
}
function newlitword_40303(s_40305) {
var result_40306 = null;
result_40306 = {word_39097: s_40305, m_type: NTI39103, tags_39094: null};
return result_40306;
}
function newseq_40334(len_40338) {
var result_40340 = null;
result_40340 = new Array(len_40338); for (var i=0;i<len_40338;++i) {result_40340[i]=null;}return result_40340;
}
function newkeyword_40318() {
var result_40320 = null;
result_40320 = {keys_39123: newseq_40334(0), args_39125: newseq_40372(0), m_type: NTI39121, tags_39094: null};
return result_40320;
}
function addkey_42029(self_42031, key_42032) {
if (self_42031.keys_39123 != null) { self_42031.keys_39123.push(key_42032); } else { self_42031.keys_39123 = [key_42032]; };
}
function newevalouterword_40283(s_40285) {
var result_40286 = null;
result_40286 = {word_39097: s_40285, m_type: NTI39109, tags_39094: null};
return result_40286;
}
function newevalselfword_40278(s_40280) {
var result_40281 = null;
result_40281 = {word_39097: s_40280, m_type: NTI39107, tags_39094: null};
return result_40281;
}
function newword_42251(self_42253, token_42254) {
var Tmp1;
var Tmp2;
var Tmp3;
var result_42255 = null;
BeforeRet: do {
var len_42256 = (token_42254 != null ? token_42254.length-1 : 0);
var first_42257 = token_42254[0];
if (!(first_42257 == 58)) Tmp1 = false; else {Tmp1 = (1 < len_42256); }if (Tmp1) {
if ((token_42254[1] == 94)) {
if (((token_42254 != null ? token_42254.length-1 : 0) < 3)) {
raiseparseexception_40076(makeNimstrLit("Malformed get argword, missing at least 1 character"));
}

result_42255 = newgetargword_40313(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(2, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}
else {
result_42255 = newevalargword_40308(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(1, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}

}

if (!(first_42257 == 94)) Tmp2 = false; else {Tmp2 = (1 < len_42256); }if (Tmp2) {
if ((token_42254[1] == 46)) {
if ((2 < len_42256)) {
if ((token_42254[2] == 46)) {
if ((3 < len_42256)) {
result_42255 = newgetouterword_40298(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(3, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}
else {
raiseparseexception_40076(makeNimstrLit("Malformed parent lookup word, missing at least 1 character"));
}

}
else {
result_42255 = newgetselfword_40293(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(2, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}

}
else {
raiseparseexception_40076(makeNimstrLit("Malformed local lookup word, missing at least 1 character"));
}

}
else {
result_42255 = newgetword_40288(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(1, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}

}

if ((first_42257 == 39)) {
if ((len_42256 < 2)) {
raiseparseexception_40076(makeNimstrLit("Malformed literal word, missing at least 1 character"));
}
else {
result_42255 = newlitword_40303(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(1, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}

}

if (!(1 < len_42256)) Tmp3 = false; else {Tmp3 = (token_42254[((token_42254 != null ? token_42254.length-1 : 0) - 1)] == 58); }if (Tmp3) {
if ((self_42253 === null)) {
result_42255 = newevalword_40273(token_42254);
break BeforeRet;
}
else {
if ((currentkeyword_42137(self_42253) === null)) {
push_42228(self_42253, newkeyword_40318());
}

if (inbalance_42057(currentkeyword_42137(self_42253))) {
addkey_42029(currentkeyword_42137(self_42253), token_42254);
}
else {
raiseparseexception_40076(makeNimstrLit("Malformed keyword syntax, expecting an argument"));
}

result_42255 = null;
break BeforeRet;
}

}

if ((first_42257 == 46)) {
if ((1 < len_42256)) {
if ((token_42254[1] == 46)) {
if ((2 < len_42256)) {
result_42255 = newevalouterword_40283(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(2, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}
else {
raiseparseexception_40076(makeNimstrLit("Malformed parent eval word, missing at least 1 character"));
}

}
else {
result_42255 = newevalselfword_40278(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(1, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}

}
else {
raiseparseexception_40076(makeNimstrLit("Malformed local eval word, missing at least 1 character"));
}

}
else {
result_42255 = newevalword_40273(token_42254);
break BeforeRet;
}

} while (false); 
return result_42255;
}
function newwordorvalue_42357(self_42359) {
var result_42360 = null;
BeforeRet: do {
var token_42361 = self_42359.token_39078;
self_42359.token_39078 = makeNimstrLit("");
L1: do {
var p_42402 = null;
var HEX3Atmp_42414 = null;
HEX3Atmp_42414 = self_42359.valueparsers_39082;
var i_42417 = 0;
var L_42419 = (HEX3Atmp_42414 != null ? HEX3Atmp_42414.length : 0);
L2: do {
L3: while (true) {
if (!(i_42417 < L_42419)) break L3;
p_42402 = HEX3Atmp_42414[i_42417];
var valueornil_42403 = parsevalue_41616(p_42402, token_42361);
if (!((valueornil_42403 === null))) {
result_42360 = valueornil_42403;
break BeforeRet;
}

i_42417 += 1;
}
} while(false);
} while(false);
result_42360 = newword_42251(self_42359, token_42361);
break BeforeRet;
} while (false); 
return result_42360;
}
function addnode_42187(self_42189) {
if ((0 < (self_42189.token_39078 != null ? self_42189.token_39078.length-1 : 0))) {
var node_42423 = newwordorvalue_42357(self_42189);
if (!((node_42423 === null))) {
doaddnode_42205(self_42189, node_42423);
}

}

}
function addChar(x_13180, c_13181) {
    x_13180[x_13180.length-1] = c_13181; x_13180.push(0);
  }
function newparen_40442() {
var result_40444 = null;
result_40444 = {nodes_39152: newseq_40372(0), m_type: NTI39155, pos_39153: 0, tags_39094: null};
return result_40444;
}
function newcurly_40480() {
var result_40482 = null;
result_40482 = {nodes_39152: newseq_40372(0), m_type: NTI39159, pos_39153: 0, tags_39094: null};
return result_40482;
}
function pop_42146(self_42148) {
if (!((currentkeyword_42137(self_42148) === null))) {
closekeyword_42143(self_42148);
}

pop_42159(self_42148, "stack_39080");
}
function parse_42433(self_42435, str_42436) {
var Tmp6;
var Tmp9;
var result_42437 = null;
var ch_42438 = 0;
var currentvalueparser_42439 = null;
var pos_42440 = 0;
self_42435.stack_39080 = [];
self_42435.token_39078 = makeNimstrLit("");
push_42228(self_42435, newblok_40404());
L1: do {
L2: while (true) {
if (!(pos_42440 < (str_42436 != null ? str_42436.length-1 : 0))) break L2;
ch_42438 = str_42436[pos_42440];
pos_42440 += 1;
if (!((currentvalueparser_42439 === null))) {
var found_42475 = tokenready_41651(currentvalueparser_42439, self_42435.token_39078, ch_42438);
if (!((found_42475 === null))) {
self_42435.token_39078 = found_42475;
addnode_42187(self_42435);
currentvalueparser_42439 = null;
}
else {
if (self_42435.token_39078 != null) { addChar(self_42435.token_39078, ch_42438); } else { self_42435.token_39078 = [ch_42438, 0]; };
}

}
else {
if (((currentvalueparser_42439 === null) && (SetConstr(32, 9, 11, 13, 10, 12)[ch_42438] != undefined))) {
addnode_42187(self_42435);
}
else {
var tokenlen_42495 = ((self_42435.token_39078 != null ? self_42435.token_39078.length-1 : 0) + 1);
if (((currentvalueparser_42439 === null) && (tokenlen_42495 < 5))) {
L3: do {
var p_42513 = null;
var HEX3Atmp_42544 = null;
HEX3Atmp_42544 = self_42435.valueparsers_39082;
var i_42547 = 0;
var L_42549 = (HEX3Atmp_42544 != null ? HEX3Atmp_42544.length : 0);
L4: do {
L5: while (true) {
if (!(i_42547 < L_42549)) break L5;
p_42513 = HEX3Atmp_42544[i_42547];
if (!(prefixlength_41640(p_42513) == tokenlen_42495)) Tmp6 = false; else {Tmp6 = tokenstart_41662(p_42513, self_42435.token_39078, ch_42438); }if (Tmp6) {
currentvalueparser_42439 = p_42513;
break L3;
}

i_42547 += 1;
}
} while(false);
} while(false);
}

if ((currentvalueparser_42439 === null)) {
switch (ch_42438) {
case 35: addnode_42187(self_42435);
L7: do {
L8: while (true) {
if (!(pos_42440 < (str_42436 != null ? str_42436.length-1 : 0))) Tmp9 = false; else {Tmp9 = !((str_42436[pos_42440] == 10)); }if (!Tmp9) break L8;
pos_42440 += 1;
}
} while(false);

break;
case 40: addnode_42187(self_42435);
push_42228(self_42435, newparen_40442());

break;
case 91: addnode_42187(self_42435);
push_42228(self_42435, newblok_40404());

break;
case 123: addnode_42187(self_42435);
push_42228(self_42435, newcurly_40480());

break;
case 41: addnode_42187(self_42435);
pop_42146(self_42435);

break;
case 93: addnode_42187(self_42435);
pop_42146(self_42435);

break;
case 125: addnode_42187(self_42435);
pop_42146(self_42435);

break;
default: 
if (self_42435.token_39078 != null) { addChar(self_42435.token_39078, ch_42438); } else { self_42435.token_39078 = [ch_42438, 0]; };
break;
}
}
else {
if (self_42435.token_39078 != null) { addChar(self_42435.token_39078, ch_42438); } else { self_42435.token_39078 = [ch_42438, 0]; };
}

}

}

}
} while(false);
addnode_42187(self_42435);
if (!((currentkeyword_42137(self_42435) === null))) {
closekeyword_42143(self_42435);
}

result_42437 = self_42435.stack_39080[(self_42435.stack_39080 != null ? (self_42435.stack_39080.length-1) : -1)];
return result_42437;
}
function newseq_41726(len_41730) {
var result_41732 = null;
result_41732 = new Array(len_41730); for (var i=0;i<len_41730;++i) {result_41732[i]=null;}return result_41732;
}
function newparser_41682() {
var result_41684 = null;
result_41684 = {stack_39080: newseq_40372(0), valueparsers_39082: newseq_41726(0), token_39078: null};
if (result_41684.valueparsers_39082 != null) { result_41684.valueparsers_39082.push({m_type: NTI39091, token_39085: null}); } else { result_41684.valueparsers_39082 = [{m_type: NTI39091, token_39085: null}]; };
if (result_41684.valueparsers_39082 != null) { result_41684.valueparsers_39082.push({m_type: NTI39087, token_39085: null}); } else { result_41684.valueparsers_39082 = [{m_type: NTI39087, token_39085: null}]; };
if (result_41684.valueparsers_39082 != null) { result_41684.valueparsers_39082.push({m_type: NTI39089, token_39085: null}); } else { result_41684.valueparsers_39082 = [{m_type: NTI39089, token_39085: null}]; };
L1: do {
var ex_42002 = null;
var i_42010 = 0;
var L_42012 = (parserexts_39413[0] != null ? parserexts_39413[0].length : 0);
L2: do {
L3: while (true) {
if (!(i_42010 < L_42012)) break L3;
ex_42002 = parserexts_39413[0][i_42010];
ex_42002(result_41684);
i_42010 += 1;
}
} while(false);
} while(false);
return result_41684;
}
function newrootactivation_43482(root_43484) {
var result_43485 = null;
result_43485 = {body_43047: newblok_40404(), locals_43050: root_43484, m_type: NTI43058, last_43042: null, infixarg_43043: null, returned_43044: false, parent_43045: null, pos_43046: 0, tags_39094: null};
return result_43485;
}
function newinterpreter_44083() {
function HEX3Aanonymous_44087(ni_44089) {
var result_44090 = null;
result_44090 = ni_44089.currentactivation_43022;
return result_44090;
}
function HEX3Aanonymous_44091(ni_44093) {
var result_44094 = null;
BeforeRet: do {
L1: do {
var activation_44095 = null;
var HEX3Atmp_44097 = null;
HEX3Atmp_44097 = ni_44093.currentactivation_43022;
var activation_44101 = HEX3Atmp_44097;
L2: do {
L3: while (true) {
if (!!((activation_44101 === null))) break L3;
L4: do {
L5: while (true) {
if (!!(haslocals_43538(activation_44101))) break L5;
activation_44101 = outer_43551(activation_44101);
}
} while(false);
activation_44095 = activation_44101;
result_44094 = getlocals_43521(activation_44095);
break BeforeRet;
activation_44101 = outer_43551(activation_44101);
}
} while(false);
} while(false);
} while (false); 
return result_44094;
}
function HEX3Aanonymous_44102(ni_44104) {
var result_44105 = null;
result_44105 = ni_44104.undefval_43027;
return result_44105;
}
function HEX3Aanonymous_44106(ni_44108) {
var result_44109 = null;
result_44109 = ni_44108.undefval_43027;
return result_44109;
}
function HEX3Aanonymous_44110(ni_44112) {
var result_44113 = null;
result_44113 = eval_43070(ni_44112.currentactivation_43022.last_43042, ni_44112);
var tag_44114 = evalarg_44063(ni_44112);
if ((result_44113.tags_39094 === null)) {
result_44113.tags_39094 = newblok_40404();
}

add_40542(result_44113.tags_39094, tag_44114);
return result_44113;
}
function HEX3Aanonymous_44123(ni_44125) {
var result_44126 = null;
BeforeRet: do {
var node_44127 = eval_43070(ni_44125.currentactivation_43022.last_43042, ni_44125);
var tag_44128 = evalarg_44063(ni_44125);
if ((node_44127.tags_39094 === null)) {
result_44126 = ni_44125.falseval_43026;
break BeforeRet;
}

result_44126 = boolval_44072(contains_40617(node_44127.tags_39094, tag_44128), ni_44125);
break BeforeRet;
} while (false); 
return result_44126;
}
function HEX3Aanonymous_44137(ni_44139) {
var result_44140 = null;
BeforeRet: do {
var node_44141 = eval_43070(ni_44139.currentactivation_43022.last_43042, ni_44139);
if ((node_44141.tags_39094 === null)) {
result_44140 = ni_44139.falseval_43026;
break BeforeRet;
}

result_44140 = node_44141.tags_39094;
break BeforeRet;
} while (false); 
return result_44140;
}
function HEX3Aanonymous_44150(ni_44152) {
var result_44153 = null;
result_44153 = eval_43070(ni_44152.currentactivation_43022.last_43042, ni_44152);
result_44153.tags_39094 = evalarg_44063(ni_44152);
return result_44153;
}
function HEX3Aanonymous_44154(ni_44156) {
var result_44157 = null;
var val_44158 = eval_43070(ni_44156.currentactivation_43022.last_43042, ni_44156);
result_44157 = newvalue_40527(!(isObj(val_44158.m_type, NTI39144)));
return result_44157;
}
function HEX3Aanonymous_44161(ni_44163) {
var result_44164 = null;
result_44164 = evalarg_44063(ni_44163);
setbinding_43994(ni_44163, arginfix_44047(ni_44163), result_44164);
return result_44164;
}
function HEX3Aanonymous_44165(ni_44167) {
var result_44168 = null;
result_44168 = HEX2B_43596(eval_43070(ni_44167.currentactivation_43022.last_43042, ni_44167), evalarg_44063(ni_44167));
return result_44168;
}
function HEX3Aanonymous_44169(ni_44171) {
var result_44172 = null;
result_44172 = HEX2D_43628(eval_43070(ni_44171.currentactivation_43022.last_43042, ni_44171), evalarg_44063(ni_44171));
return result_44172;
}
function HEX3Aanonymous_44173(ni_44175) {
var result_44176 = null;
result_44176 = HEX2A_43660(eval_43070(ni_44175.currentactivation_43022.last_43042, ni_44175), evalarg_44063(ni_44175));
return result_44176;
}
function HEX3Aanonymous_44177(ni_44179) {
var result_44180 = null;
result_44180 = HEX2F_43692(eval_43070(ni_44179.currentactivation_43022.last_43042, ni_44179), evalarg_44063(ni_44179));
return result_44180;
}
function HEX3Aanonymous_44181(ni_44183) {
var result_44184 = null;
result_44184 = HEX3C_43724(eval_43070(ni_44183.currentactivation_43022.last_43042, ni_44183), evalarg_44063(ni_44183));
return result_44184;
}
function HEX3Aanonymous_44185(ni_44187) {
var result_44188 = null;
result_44188 = HEX3C_43724(evalarg_44063(ni_44187), eval_43070(ni_44187.currentactivation_43022.last_43042, ni_44187));
return result_44188;
}
function HEX3Aanonymous_44189(ni_44191) {
var result_44192 = null;
result_44192 = HEX3CHEX3D_43761(eval_43070(ni_44191.currentactivation_43022.last_43042, ni_44191), evalarg_44063(ni_44191));
return result_44192;
}
function HEX3Aanonymous_44193(ni_44195) {
var result_44196 = null;
result_44196 = HEX3CHEX3D_43761(evalarg_44063(ni_44195), eval_43070(ni_44195.currentactivation_43022.last_43042, ni_44195));
return result_44196;
}
function HEX3Aanonymous_44197(ni_44199) {
var result_44200 = null;
result_44200 = HEX3DHEX3D_43798(eval_43070(ni_44199.currentactivation_43022.last_43042, ni_44199), evalarg_44063(ni_44199));
return result_44200;
}
function HEX3Aanonymous_44201(ni_44203) {
var result_44204 = null;
result_44204 = newvalue_40527(!(value_39295(HEX3DHEX3D_43798(eval_43070(ni_44203.currentactivation_43022.last_43042, ni_44203), evalarg_44063(ni_44203)))));
return result_44204;
}
function HEX3Aanonymous_44205(ni_44207) {
var result_44208 = null;
result_44208 = newvalue_40527(!(value_39295(evalarg_44063(ni_44207))));
return result_44208;
}
function HEX3Aanonymous_44209(ni_44211) {
var Tmp1;
var result_44212 = null;
var arg1_44213 = value_39295(eval_43070(ni_44211.currentactivation_43022.last_43042, ni_44211));
var arg2_44214 = arg_44056(ni_44211);
if (!arg1_44213) Tmp1 = false; else {Tmp1 = value_39295(eval_43070(arg2_44214, ni_44211)); }result_44212 = newvalue_40527(Tmp1);
return result_44212;
}
function HEX3Aanonymous_44215(ni_44217) {
var Tmp1;
var result_44218 = null;
var arg1_44219 = value_39295(eval_43070(ni_44217.currentactivation_43022.last_43042, ni_44217));
var arg2_44220 = arg_44056(ni_44217);
if (arg1_44219) Tmp1 = true; else {Tmp1 = value_39295(eval_43070(arg2_44220, ni_44217)); }result_44218 = newvalue_40527(Tmp1);
return result_44218;
}
function HEX3Aanonymous_44221(ni_44223) {
var result_44224 = null;
BeforeRet: do {
var val_44225 = eval_43070(ni_44223.currentactivation_43022.last_43042, ni_44223);
if (isObj(val_44225.m_type, NTI39135)) {
result_44224 = HEX26_43840(val_44225, evalarg_44063(ni_44223));
break BeforeRet;
}
else {
if (isObj(val_44225.m_type, NTI39157)) {
result_44224 = concat_40689(val_44225, evalarg_44063(ni_44223).nodes_39152);
break BeforeRet;
}
else {
if (isObj(val_44225.m_type, NTI39155)) {
result_44224 = concat_40689(val_44225, evalarg_44063(ni_44223).nodes_39152);
break BeforeRet;
}
else {
if (isObj(val_44225.m_type, NTI39159)) {
result_44224 = concat_40689(val_44225, evalarg_44063(ni_44223).nodes_39152);
break BeforeRet;
}
}}}
} while (false); 
return result_44224;
}
function HEX3Aanonymous_44234(ni_44236) {
var result_44237 = null;
BeforeRet: do {
var val_44238 = eval_43070(ni_44236.currentactivation_43022.last_43042, ni_44236);
if (isObj(val_44238.m_type, NTI39132)) {
result_44237 = val_44238;
break BeforeRet;
}
else {
if (isObj(val_44238.m_type, NTI39129)) {
result_44237 = newvalue_40517(val_44238.value_39130);
break BeforeRet;
}
else {
raiseruntimeexception_39198(makeNimstrLit("Can not convert to float"));
}
}
} while (false); 
return result_44237;
}
function HEX3Aanonymous_44243(ni_44245) {
var result_44246 = null;
BeforeRet: do {
var val_44247 = eval_43070(ni_44245.currentactivation_43022.last_43042, ni_44245);
if (isObj(val_44247.m_type, NTI39129)) {
result_44246 = val_44247;
break BeforeRet;
}
else {
if (isObj(val_44247.m_type, NTI39132)) {
result_44246 = newvalue_40512(Math.floor(val_44247.value_39133));
break BeforeRet;
}
else {
raiseruntimeexception_39198(makeNimstrLit("Can not convert to int"));
}
}
} while (false); 
return result_44246;
}
function HEX3Aanonymous_44252(ni_44254) {
var result_44255 = null;
result_44255 = newvalue_40512((eval_43070(ni_44254.currentactivation_43022.last_43042, ni_44254).nodes_39152 != null ? eval_43070(ni_44254.currentactivation_43022.last_43042, ni_44254).nodes_39152.length : 0));
return result_44255;
}
function HEX3Aanonymous_44264(ni_44266) {
var result_44267 = null;
BeforeRet: do {
var comp_44268 = eval_43070(ni_44266.currentactivation_43022.last_43042, ni_44266);
if (isObj(comp_44268.m_type, NTI39150)) {
result_44267 = HEX5BHEX5D_43416(comp_44268, evalarg_44063(ni_44266));
break BeforeRet;
}
else {
if (isObj(comp_44268.m_type, NTI39161)) {
result_44267 = HEX5BHEX5D_43205(comp_44268, evalarg_44063(ni_44266));
break BeforeRet;
}
}
} while (false); 
return result_44267;
}
function HEX3Aanonymous_44273(ni_44275) {
var result_44276 = null;
BeforeRet: do {
var comp_44277 = eval_43070(ni_44275.currentactivation_43022.last_43042, ni_44275);
var key_44278 = evalarg_44063(ni_44275);
var val_44279 = evalarg_44063(ni_44275);
if (isObj(comp_44277.m_type, NTI39150)) {
HEX5BHEX5DHEX3D_43436(comp_44277, key_44278, val_44279);
}
else {
if (isObj(comp_44277.m_type, NTI39161)) {
HEX5BHEX5DHEX3D_43431(comp_44277, key_44278, val_44279);
}
}
result_44276 = comp_44277;
break BeforeRet;
} while (false); 
return result_44276;
}
function HEX3Aanonymous_44284(ni_44286) {
var result_44287 = null;
var comp_44288 = eval_43070(ni_44286.currentactivation_43022.last_43042, ni_44286);
result_44287 = HEX5BHEX5D_43426(comp_44288, comp_44288.pos_39153);
return result_44287;
}
function HEX3Aanonymous_44289(ni_44291) {
var result_44292 = null;
result_44292 = eval_43070(ni_44291.currentactivation_43022.last_43042, ni_44291);
var comp_44293 = result_44292;
HEX5BHEX5DHEX3D_43446(comp_44293, comp_44293.pos_39153, evalarg_44063(ni_44291));
return result_44292;
}
function HEX3Aanonymous_44294(ni_44296) {
var result_44297 = null;
result_44297 = eval_43070(ni_44296.currentactivation_43022.last_43042, ni_44296);
var comp_44298 = result_44297;
add_40542(comp_44298, evalarg_44063(ni_44296));
return result_44297;
}
function HEX3Aanonymous_44299(ni_44301) {
var result_44302 = null;
result_44302 = eval_43070(ni_44301.currentactivation_43022.last_43042, ni_44301);
var comp_44303 = result_44302;
removelast_41074(comp_44303);
return result_44302;
}
function HEX3Aanonymous_44304(ni_44306) {
var result_44307 = null;
var comp_44308 = eval_43070(ni_44306.currentactivation_43022.last_43042, ni_44306);
result_44307 = newvalue_40527(contains_40617(comp_44308, evalarg_44063(ni_44306)));
return result_44307;
}
function HEX3Aanonymous_44309(ni_44311) {
var result_44312 = null;
eval_43070(ni_44311.currentactivation_43022.last_43042, ni_44311).pos_39153 = 0;
return result_44312;
}
function HEX3Aanonymous_44313(ni_44315) {
var result_44316 = null;
result_44316 = newvalue_40512(eval_43070(ni_44315.currentactivation_43022.last_43042, ni_44315).pos_39153);
return result_44316;
}
function HEX3Aanonymous_44317(ni_44319) {
var result_44320 = null;
result_44320 = eval_43070(ni_44319.currentactivation_43022.last_43042, ni_44319);
var comp_44321 = result_44320;
comp_44321.pos_39153 = evalarg_44063(ni_44319).value_39130;
return result_44320;
}
function HEX3Aanonymous_44322(ni_44324) {
var result_44325 = null;
BeforeRet: do {
var comp_44326 = eval_43070(ni_44324.currentactivation_43022.last_43042, ni_44324);
if ((comp_44326.pos_39153 == (comp_44326.nodes_39152 != null ? comp_44326.nodes_39152.length : 0))) {
result_44325 = ni_44324.undefval_43027;
break BeforeRet;
}

result_44325 = HEX5BHEX5D_43426(comp_44326, comp_44326.pos_39153);
comp_44326.pos_39153 += 1;
} while (false); 
return result_44325;
}
function HEX3Aanonymous_44344(ni_44346) {
var result_44347 = null;
BeforeRet: do {
var comp_44348 = eval_43070(ni_44346.currentactivation_43022.last_43042, ni_44346);
if ((comp_44348.pos_39153 == 0)) {
result_44347 = ni_44346.undefval_43027;
break BeforeRet;
}

comp_44348.pos_39153 -= 1;
result_44347 = HEX5BHEX5D_43426(comp_44348, comp_44348.pos_39153);
} while (false); 
return result_44347;
}
function HEX3Aanonymous_44358(ni_44360) {
var result_44361 = null;
var comp_44362 = eval_43070(ni_44360.currentactivation_43022.last_43042, ni_44360);
result_44361 = newvalue_40527((comp_44362.pos_39153 == (comp_44362.nodes_39152 != null ? comp_44362.nodes_39152.length : 0)));
return result_44361;
}
function HEX3Aanonymous_44371(ni_44373) {
var result_44374 = null;
result_44374 = HEX5BHEX5D_43426(eval_43070(ni_44373.currentactivation_43022.last_43042, ni_44373), 0);
return result_44374;
}
function HEX3Aanonymous_44375(ni_44377) {
var result_44378 = null;
result_44378 = HEX5BHEX5D_43426(eval_43070(ni_44377.currentactivation_43022.last_43042, ni_44377), 1);
return result_44378;
}
function HEX3Aanonymous_44379(ni_44381) {
var result_44382 = null;
result_44382 = HEX5BHEX5D_43426(eval_43070(ni_44381.currentactivation_43022.last_43042, ni_44381), 2);
return result_44382;
}
function HEX3Aanonymous_44383(ni_44385) {
var result_44386 = null;
result_44386 = HEX5BHEX5D_43426(eval_43070(ni_44385.currentactivation_43022.last_43042, ni_44385), 3);
return result_44386;
}
function HEX3Aanonymous_44387(ni_44389) {
var result_44390 = null;
result_44390 = HEX5BHEX5D_43426(eval_43070(ni_44389.currentactivation_43022.last_43042, ni_44389), 4);
return result_44390;
}
function HEX3Aanonymous_44391(ni_44393) {
var result_44394 = null;
var nodes_44395 = eval_43070(ni_44393.currentactivation_43022.last_43042, ni_44393).nodes_39152;
result_44394 = nodes_44395[(nodes_44395 != null ? (nodes_44395.length-1) : -1)];
return result_44394;
}
function HEX3Aanonymous_44396(ni_44398) {
var result_44399 = null;
result_44399 = funk_43060(ni_44398, evalarg_44063(ni_44398), false);
return result_44399;
}
function HEX3Aanonymous_44400(ni_44402) {
var result_44403 = null;
result_44403 = funk_43060(ni_44402, evalarg_44063(ni_44402), true);
return result_44403;
}
function HEX3Aanonymous_44404(ni_44406) {
var result_44407 = null;
result_44407 = evaldo_43077(evalarg_44063(ni_44406), ni_44406);
return result_44407;
}
function HEX3Aanonymous_44408(ni_44410) {
var result_44411 = null;
result_44411 = arg_44056(ni_44410);
return result_44411;
}
function HEX3Aanonymous_44412(ni_44414) {
var result_44415 = null;
result_44415 = evalarg_44063(ni_44414);
return result_44415;
}
function HEX3Aanonymous_44416(ni_44418) {
var result_44419 = null;
result_44419 = eval_43070(evalarg_44063(ni_44418), ni_44418);
return result_44419;
}
function HEX3Aanonymous_44420(ni_44422) {
var result_44423 = null;
result_44423 = parse_42433(newparser_41682(), evalarg_44063(ni_44422).value_39136);
return result_44423;
}
function HEX3Aanonymous_44424(ni_44426) {
var result_44427 = null;
ni_44426.currentactivation_43022.returned_43044 = true;
result_44427 = evalarg_44063(ni_44426);
return result_44427;
}
function HEX3Aanonymous_44428(ni_44430) {
var result_44431 = null;
BeforeRet: do {
if (value_39295(evalarg_44063(ni_44430))) {
result_44431 = evaldo_43077(evalarg_44063(ni_44430), ni_44430);
break BeforeRet;
}
else {
arg_44056(ni_44430);
result_44431 = ni_44430.nilval_43028;
break BeforeRet;
}

} while (false); 
return result_44431;
}
function HEX3Aanonymous_44432(ni_44434) {
var result_44435 = null;
BeforeRet: do {
if (value_39295(evalarg_44063(ni_44434))) {
var res_44436 = evaldo_43077(evalarg_44063(ni_44434), ni_44434);
arg_44056(ni_44434);
result_44435 = res_44436;
break BeforeRet;
}
else {
arg_44056(ni_44434);
result_44435 = evaldo_43077(evalarg_44063(ni_44434), ni_44434);
break BeforeRet;
}

} while (false); 
return result_44435;
}
function HEX3Aanonymous_44437(ni_44439) {
var result_44440 = null;
BeforeRet: do {
var times_44441 = eval_43070(ni_44439.currentactivation_43022.last_43042, ni_44439).value_39130;
var fn_44442 = evalarg_44063(ni_44439);
L1: do {
var i_44452 = 0;
var res_44456 = 1;
L2: do {
L3: while (true) {
if (!(res_44456 <= times_44441)) break L3;
i_44452 = res_44456;
result_44440 = evaldo_43077(fn_44442, ni_44439);
if (ni_44439.currentactivation_43022.returned_43044) {
break BeforeRet;
}

res_44456 += 1;
}
} while(false);
} while(false);
} while (false); 
return result_44440;
}
function HEX3Aanonymous_44460(ni_44462) {
var result_44463 = null;
BeforeRet: do {
var blk1_44464 = eval_43070(ni_44462.currentactivation_43022.last_43042, ni_44462);
var blk2_44465 = evalarg_44063(ni_44462);
L1: do {
L2: while (true) {
if (!value_39295(evaldo_43077(blk1_44464, ni_44462))) break L2;
result_44463 = evaldo_43077(blk2_44465, ni_44462);
if (ni_44462.currentactivation_43022.returned_43044) {
break BeforeRet;
}

}
} while(false);
} while (false); 
return result_44463;
}
function HEX3Aanonymous_44467(ni_44469) {
var result_44470 = null;
BeforeRet: do {
var blk1_44471 = eval_43070(ni_44469.currentactivation_43022.last_43042, ni_44469);
var blk2_44472 = evalarg_44063(ni_44469);
L1: do {
L2: while (true) {
if (!!(value_39295(evaldo_43077(blk1_44471, ni_44469)))) break L2;
result_44470 = evaldo_43077(blk2_44472, ni_44469);
if (ni_44469.currentactivation_43022.returned_43044) {
break BeforeRet;
}

}
} while(false);
} while (false); 
return result_44470;
}
function HEX3Aanonymous_44474(ni_44476) {
var result_44477 = null;
exit(evalarg_44063(ni_44476).value_39130);
return result_44477;
}
var result_44085 = null;
var ni_44086 = {root_43024: newmap_40093(), currentactivation_43022: null, rootactivation_43023: null, trueval_43025: null, falseval_43026: null, undefval_43027: null, nilval_43028: null};
result_44085 = ni_44086;
ni_44086.trueval_43025 = newvalue_40527(true);
ni_44086.falseval_43026 = newvalue_40527(false);
ni_44086.nilval_43028 = newnilval_40534();
ni_44086.undefval_43027 = newundefval_40538();
makeword_44067(ni_44086, makeNimstrLit("false"), ni_44086.falseval_43026);
makeword_44067(ni_44086, makeNimstrLit("true"), ni_44086.trueval_43025);
makeword_44067(ni_44086, makeNimstrLit("undef"), ni_44086.undefval_43027);
makeword_44067(ni_44086, makeNimstrLit("nil"), ni_44086.nilval_43028);
makeword_44067(ni_44086, makeNimstrLit("activation"), newnimproc_43468(HEX3Aanonymous_44087, false, 0));
makeword_44067(ni_44086, makeNimstrLit("locals"), newnimproc_43468(HEX3Aanonymous_44091, false, 0));
makeword_44067(ni_44086, makeNimstrLit("self"), newnimproc_43468(HEX3Aanonymous_44102, false, 0));
makeword_44067(ni_44086, makeNimstrLit("object"), newnimproc_43468(HEX3Aanonymous_44106, false, 1));
makeword_44067(ni_44086, makeNimstrLit("tag:"), newnimproc_43468(HEX3Aanonymous_44110, true, 2));
makeword_44067(ni_44086, makeNimstrLit("tag?"), newnimproc_43468(HEX3Aanonymous_44123, true, 2));
makeword_44067(ni_44086, makeNimstrLit("tags"), newnimproc_43468(HEX3Aanonymous_44137, true, 1));
makeword_44067(ni_44086, makeNimstrLit("tags:"), newnimproc_43468(HEX3Aanonymous_44150, true, 2));
makeword_44067(ni_44086, makeNimstrLit("?"), newnimproc_43468(HEX3Aanonymous_44154, true, 1));
makeword_44067(ni_44086, makeNimstrLit("="), newnimproc_43468(HEX3Aanonymous_44161, true, 2));
makeword_44067(ni_44086, makeNimstrLit("+"), newnimproc_43468(HEX3Aanonymous_44165, true, 2));
makeword_44067(ni_44086, makeNimstrLit("-"), newnimproc_43468(HEX3Aanonymous_44169, true, 2));
makeword_44067(ni_44086, makeNimstrLit("*"), newnimproc_43468(HEX3Aanonymous_44173, true, 2));
makeword_44067(ni_44086, makeNimstrLit("/"), newnimproc_43468(HEX3Aanonymous_44177, true, 2));
makeword_44067(ni_44086, makeNimstrLit("<"), newnimproc_43468(HEX3Aanonymous_44181, true, 2));
makeword_44067(ni_44086, makeNimstrLit(">"), newnimproc_43468(HEX3Aanonymous_44185, true, 2));
makeword_44067(ni_44086, makeNimstrLit("<="), newnimproc_43468(HEX3Aanonymous_44189, true, 2));
makeword_44067(ni_44086, makeNimstrLit(">="), newnimproc_43468(HEX3Aanonymous_44193, true, 2));
makeword_44067(ni_44086, makeNimstrLit("=="), newnimproc_43468(HEX3Aanonymous_44197, true, 2));
makeword_44067(ni_44086, makeNimstrLit("!="), newnimproc_43468(HEX3Aanonymous_44201, true, 2));
makeword_44067(ni_44086, makeNimstrLit("not"), newnimproc_43468(HEX3Aanonymous_44205, false, 1));
makeword_44067(ni_44086, makeNimstrLit("and"), newnimproc_43468(HEX3Aanonymous_44209, true, 2));
makeword_44067(ni_44086, makeNimstrLit("or"), newnimproc_43468(HEX3Aanonymous_44215, true, 2));
makeword_44067(ni_44086, makeNimstrLit(","), newnimproc_43468(HEX3Aanonymous_44221, true, 2));
makeword_44067(ni_44086, makeNimstrLit("asFloat"), newnimproc_43468(HEX3Aanonymous_44234, true, 1));
makeword_44067(ni_44086, makeNimstrLit("asInt"), newnimproc_43468(HEX3Aanonymous_44243, true, 1));
makeword_44067(ni_44086, makeNimstrLit("size"), newnimproc_43468(HEX3Aanonymous_44252, true, 1));
makeword_44067(ni_44086, makeNimstrLit("at:"), newnimproc_43468(HEX3Aanonymous_44264, true, 2));
makeword_44067(ni_44086, makeNimstrLit("at:put:"), newnimproc_43468(HEX3Aanonymous_44273, true, 3));
makeword_44067(ni_44086, makeNimstrLit("read"), newnimproc_43468(HEX3Aanonymous_44284, true, 1));
makeword_44067(ni_44086, makeNimstrLit("write:"), newnimproc_43468(HEX3Aanonymous_44289, true, 2));
makeword_44067(ni_44086, makeNimstrLit("add:"), newnimproc_43468(HEX3Aanonymous_44294, true, 2));
makeword_44067(ni_44086, makeNimstrLit("removeLast"), newnimproc_43468(HEX3Aanonymous_44299, true, 1));
makeword_44067(ni_44086, makeNimstrLit("contains:"), newnimproc_43468(HEX3Aanonymous_44304, true, 2));
makeword_44067(ni_44086, makeNimstrLit("reset"), newnimproc_43468(HEX3Aanonymous_44309, true, 1));
makeword_44067(ni_44086, makeNimstrLit("pos"), newnimproc_43468(HEX3Aanonymous_44313, true, 1));
makeword_44067(ni_44086, makeNimstrLit("pos:"), newnimproc_43468(HEX3Aanonymous_44317, true, 2));
makeword_44067(ni_44086, makeNimstrLit("next"), newnimproc_43468(HEX3Aanonymous_44322, true, 1));
makeword_44067(ni_44086, makeNimstrLit("prev"), newnimproc_43468(HEX3Aanonymous_44344, true, 1));
makeword_44067(ni_44086, makeNimstrLit("end?"), newnimproc_43468(HEX3Aanonymous_44358, true, 1));
makeword_44067(ni_44086, makeNimstrLit("first"), newnimproc_43468(HEX3Aanonymous_44371, true, 1));
makeword_44067(ni_44086, makeNimstrLit("second"), newnimproc_43468(HEX3Aanonymous_44375, true, 1));
makeword_44067(ni_44086, makeNimstrLit("third"), newnimproc_43468(HEX3Aanonymous_44379, true, 1));
makeword_44067(ni_44086, makeNimstrLit("fourth"), newnimproc_43468(HEX3Aanonymous_44383, true, 1));
makeword_44067(ni_44086, makeNimstrLit("fifth"), newnimproc_43468(HEX3Aanonymous_44387, true, 1));
makeword_44067(ni_44086, makeNimstrLit("last"), newnimproc_43468(HEX3Aanonymous_44391, true, 1));
makeword_44067(ni_44086, makeNimstrLit("func"), newnimproc_43468(HEX3Aanonymous_44396, false, 1));
makeword_44067(ni_44086, makeNimstrLit("funci"), newnimproc_43468(HEX3Aanonymous_44400, false, 1));
makeword_44067(ni_44086, makeNimstrLit("do"), newnimproc_43468(HEX3Aanonymous_44404, false, 1));
makeword_44067(ni_44086, makeNimstrLit("^"), newnimproc_43468(HEX3Aanonymous_44408, false, 1));
makeword_44067(ni_44086, makeNimstrLit("eva"), newnimproc_43468(HEX3Aanonymous_44412, false, 1));
makeword_44067(ni_44086, makeNimstrLit("eval"), newnimproc_43468(HEX3Aanonymous_44416, false, 1));
makeword_44067(ni_44086, makeNimstrLit("parse"), newnimproc_43468(HEX3Aanonymous_44420, false, 1));
makeword_44067(ni_44086, makeNimstrLit("return"), newnimproc_43468(HEX3Aanonymous_44424, false, 1));
makeword_44067(ni_44086, makeNimstrLit("if"), newnimproc_43468(HEX3Aanonymous_44428, false, 2));
makeword_44067(ni_44086, makeNimstrLit("ifelse"), newnimproc_43468(HEX3Aanonymous_44432, false, 3));
makeword_44067(ni_44086, makeNimstrLit("timesRepeat:"), newnimproc_43468(HEX3Aanonymous_44437, true, 2));
makeword_44067(ni_44086, makeNimstrLit("whileTrue:"), newnimproc_43468(HEX3Aanonymous_44460, true, 2));
makeword_44067(ni_44086, makeNimstrLit("whileFalse:"), newnimproc_43468(HEX3Aanonymous_44467, true, 2));
makeword_44067(ni_44086, makeNimstrLit("quit"), newnimproc_43468(HEX3Aanonymous_44474, false, 1));
ni_44086.rootactivation_43023 = newrootactivation_43482(ni_44086.root_43024);
ni_44086.rootactivation_43023.parent_43045 = ni_44086.currentactivation_43022;
ni_44086.currentactivation_43022 = ni_44086.rootactivation_43023;
return result_44085;
}
var vm_46001 = /**/[newinterpreter_44083()];
function rawEcho() {
var node_12430 = null;
node_12430 = document.getElementsByTagName('body')[0];if ((node_12430 === null)) {
var e_12442 = null;
e_12442 = {m_type: NTI3428, parent: null, name: null, message: null, trace: null};
e_12442.message = makeNimstrLit("<body> element does not exist yet!");
raiseException(e_12442, "IOError");
}

    for (var i = 0; i < arguments.length; ++i) {
      var x = toJSStr(arguments[i]);
      node_12430.appendChild(document.createTextNode(x));
    }
    node_12430.appendChild(document.createElement("br"));
    }
function dump_45055(ni_45057) {
rawEcho(makeNimstrLit("STACK:"));
L1: do {
var a_45060 = null;
var activation_45068 = ni_45057.currentactivation_43022;
L2: do {
L3: while (true) {
if (!!((activation_45068 === null))) break L3;
a_45060 = activation_45068;
dump_45013(a_45060);
rawEcho(makeNimstrLit("-----------------------------"));
activation_45068 = activation_45068.parent_43045;
}
} while(false);
} while(false);
rawEcho(makeNimstrLit("========================================"));
}
function adddebug_45069(ni_45071) {
function HEX3Aanonymous_45072(ni_45074) {
var result_45075 = null;
dump_45055(ni_45074);
return result_45075;
}
makeword_44067(ni_45071, makeNimstrLit("dump"), newnimproc_43468(HEX3Aanonymous_45072, false, 0));
}
adddebug_45069(vm_46001[0]);
function eval_44750(current_44752, ni_44753) {
var result_44754 = null;
BeforeRet: do {
current_44752.parent_43045 = ni_44753.currentactivation_43022;
ni_44753.currentactivation_43022 = current_44752;
L1: do {
L2: while (true) {
if (!!(atend_43863(current_44752))) break L2;
var next_44755 = next_43867(current_44752);
if (caneval_44550(next_44755, ni_44753)) {
current_44752.last_43042 = eval_43070(next_44755, ni_44753);
if (current_44752.returned_43044) {
doreturn_43894(ni_44753.currentactivation_43022, ni_44753);
result_44754 = current_44752.last_43042;
break BeforeRet;
}

}
else {
current_44752.last_43042 = next_44755;
}

}
} while(false);
if (isObj(current_44752.last_43042.m_type, NTI39194)) {
current_44752.last_43042 = current_44752.last_43042.val_39196;
}

ni_44753.currentactivation_43022 = ni_44753.currentactivation_43022.parent_43045;
result_44754 = current_44752.last_43042;
break BeforeRet;
} while (false); 
return result_44754;
}
function evalrootdo_44795(self_44797, ni_44798) {
var result_44799 = null;
ni_44798.currentactivation_43022 = ni_44798.currentactivation_43022.parent_43045;
ni_44798.rootactivation_43023.body_43047 = self_44797;
ni_44798.rootactivation_43023.pos_43046 = 0;
result_44799 = eval_44750(ni_44798.rootactivation_43023, ni_44798);
ni_44798.rootactivation_43023.parent_43045 = ni_44798.currentactivation_43022;
ni_44798.currentactivation_43022 = ni_44798.rootactivation_43023;
return result_44799;
}
function evalroot_44825(ni_44827, code_44828) {
var result_44829 = null;
result_44829 = evalrootdo_44795(parse_42433(newparser_41682(), code_44828), ni_44827);
return result_44829;
}
function cstrToNimstr(c_12295) {
  var ln = c_12295.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_12295.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function nieval(code_46004) {
var result_46005 = null;
result_46005 = toJSStr(HEX24_39604(evalroot_44825(vm_46001[0], cstrToNimstr(code_46004))));
return result_46005;
}
function hash_30202(x_30204) {
var result_30205 = 0;
var y_30206 = /**/[(x_30204 + 1.0000000000000000e+00)];
result_30205 = y_30206[0];
return result_30205;
}
function hash_39258(self_39260) {
var result_39261 = 0;
result_39261 = hash_30202(self_39260.value_39133);
return result_39261;
}
function hash_29801(x_29803) {
var result_29804 = 0;
result_29804 = x_29803;
return result_29804;
}
function hash_39247(self_39249) {
var result_39250 = 0;
result_39250 = hash_29801(self_39249.value_39130);
return result_39250;
}
function HEX21HEX26_29004(h_29006, val_29007) {
var result_29008 = 0;
result_29008 = ((h_29006 + val_29007) >>> 0);
result_29008 = ((result_29008 + (result_29008 << 10)) >>> 0);
result_29008 = (result_29008 ^ ((result_29008 >>> 0) >>> 6));
return result_29008;
}
function HEX21HEX24_29027(h_29029) {
var result_29030 = 0;
result_29030 = ((h_29029 + (h_29029 << 3)) >>> 0);
result_29030 = (result_29030 ^ ((result_29030 >>> 0) >>> 11));
result_29030 = ((result_29030 + (result_29030 << 15)) >>> 0);
return result_29030;
}
function hash_29827(x_29829) {
var result_29830 = 0;
var h_29831 = 0;
L1: do {
var i_29841 = 0;
var HEX3Atmp_29852 = 0;
HEX3Atmp_29852 = ((x_29829 != null ? x_29829.length-1 : 0) - 1);
var res_29855 = 0;
L2: do {
L3: while (true) {
if (!(res_29855 <= HEX3Atmp_29852)) break L3;
i_29841 = res_29855;
h_29831 = HEX21HEX26_29004(h_29831, x_29829[i_29841]);
res_29855 += 1;
}
} while(false);
} while(false);
result_29830 = HEX21HEX24_29027(h_29831);
return result_29830;
}
function hash_39234(self_39236) {
var result_39237 = 0;
result_39237 = hash_29827(self_39236.word_39097);
return result_39237;
}
function hash_39269(self_39271) {
var result_39272 = 0;
result_39272 = hash_29827(self_39271.value_39136);
return result_39272;
}
function hash_39323(self_39325) {
var result_39326 = 0;
result_39326 = hash_29801(1);
return result_39326;
}
function hash_39286(self_39288) {
var result_39289 = 0;
result_39289 = hash_29801(0);
return result_39289;
}
function hash_39282(self_39284) {
var result_39285 = 0;
result_39285 = hash_29801(1);
return result_39285;
}
function hash_39334(self_39336) {
var result_39337 = 0;
result_39337 = hash_29801(2);
return result_39337;
}
function hash_39215(self_39217) {
var result_39218 = 0;
raiseruntimeexception_39198(makeNimstrLit("Nodes need to implement hash"));
return result_39218;
}
function hash_39220(self_39217) {
var result_39223 = 0;
BeforeRet: do {
if (isObj(self_39217.m_type, NTI39132)) {
result_39223 = hash_39258(self_39217);
break BeforeRet;
}
else {
if (isObj(self_39217.m_type, NTI39129)) {
result_39223 = hash_39247(self_39217);
break BeforeRet;
}
else {
if (isObj(self_39217.m_type, NTI39096)) {
result_39223 = hash_39234(self_39217);
break BeforeRet;
}
else {
if (isObj(self_39217.m_type, NTI39135)) {
result_39223 = hash_39269(self_39217);
break BeforeRet;
}
else {
if (isObj(self_39217.m_type, NTI39146)) {
result_39223 = hash_39323(self_39217);
break BeforeRet;
}
else {
if (isObj(self_39217.m_type, NTI39142)) {
result_39223 = hash_39286(self_39217);
break BeforeRet;
}
else {
if (isObj(self_39217.m_type, NTI39140)) {
result_39223 = hash_39282(self_39217);
break BeforeRet;
}
else {
if (isObj(self_39217.m_type, NTI39144)) {
result_39223 = hash_39334(self_39217);
break BeforeRet;
}
else {
if (isObj(self_39217.m_type, NTI39093)) {
result_39223 = hash_39215(self_39217);
break BeforeRet;
}
}}}}}}}}
} while (false); 
return result_39223;
}
function HEX3DHEX3D_39313(self_39315, other_39316) {
var result_39317 = false;
result_39317 = false;
return result_39317;
}
function HEX3DHEX3D_39308(self_39310, other_39311) {
var result_39312 = false;
result_39312 = true;
return result_39312;
}
function HEX3DHEX3D_39303(self_39305, other_39306) {
var result_39307 = false;
result_39307 = true;
return result_39307;
}
function HEX3DHEX3D_39318(self_39320, other_39321) {
var result_39322 = false;
result_39322 = false;
return result_39322;
}
function HEX3DHEX3D_39251(self_39253, other_39254) {
var Tmp1;
var result_39255 = false;
if (!isObj(other_39254.m_type, NTI39129)) Tmp1 = false; else {Tmp1 = (self_39253.value_39130 == other_39254.value_39130); }result_39255 = Tmp1;
return result_39255;
}
function HEX3DHEX3D_39240(self_39242, other_39243) {
var Tmp1;
var result_39244 = false;
if (!isObj(other_39243.m_type, NTI39096)) Tmp1 = false; else {Tmp1 = eqStrings(self_39242.word_39097, other_39243.word_39097); }result_39244 = Tmp1;
return result_39244;
}
function HEX3DHEX3D_39262(self_39264, other_39265) {
var Tmp1;
var result_39266 = false;
if (!isObj(other_39265.m_type, NTI39132)) Tmp1 = false; else {Tmp1 = (self_39264.value_39133 == other_39265.value_39133); }result_39266 = Tmp1;
return result_39266;
}
function HEX3DHEX3D_39338(self_39340, other_39341) {
var result_39342 = false;
result_39342 = isObj(other_39341.m_type, NTI39144);
return result_39342;
}
function HEX3DHEX3D_39327(self_39329, other_39330) {
var result_39331 = false;
result_39331 = isObj(other_39330.m_type, NTI39146);
return result_39331;
}
function HEX3DHEX3D_39275(self_39277, other_39278) {
var Tmp1;
var result_39279 = false;
if (!isObj(other_39278.m_type, NTI39135)) Tmp1 = false; else {Tmp1 = eqStrings(self_39277.value_39136, other_39278.value_39136); }result_39279 = Tmp1;
return result_39279;
}
function HEX3DHEX3D_39224(self_39226, other_39227) {
var result_39228 = false;
raiseruntimeexception_39198(makeNimstrLit("Nodes need to implement =="));
return result_39228;
}
function HEX3DHEX3D_39230(self_39226, other_39227) {
var result_39233 = false;
BeforeRet: do {
if ((isObj(self_39226.m_type, NTI39140) & isObj(other_39227.m_type, NTI39142))) {
result_39233 = HEX3DHEX3D_39313(self_39226, other_39227);
break BeforeRet;
}
else {
if ((isObj(self_39226.m_type, NTI39142) & isObj(other_39227.m_type, NTI39142))) {
result_39233 = HEX3DHEX3D_39308(self_39226, other_39227);
break BeforeRet;
}
else {
if ((isObj(self_39226.m_type, NTI39140) & isObj(other_39227.m_type, NTI39140))) {
result_39233 = HEX3DHEX3D_39303(self_39226, other_39227);
break BeforeRet;
}
else {
if ((isObj(self_39226.m_type, NTI39142) & isObj(other_39227.m_type, NTI39140))) {
result_39233 = HEX3DHEX3D_39318(self_39226, other_39227);
break BeforeRet;
}
else {
if ((isObj(self_39226.m_type, NTI39129) & isObj(other_39227.m_type, NTI39093))) {
result_39233 = HEX3DHEX3D_39251(self_39226, other_39227);
break BeforeRet;
}
else {
if ((isObj(self_39226.m_type, NTI39096) & isObj(other_39227.m_type, NTI39093))) {
result_39233 = HEX3DHEX3D_39240(self_39226, other_39227);
break BeforeRet;
}
else {
if ((isObj(self_39226.m_type, NTI39132) & isObj(other_39227.m_type, NTI39093))) {
result_39233 = HEX3DHEX3D_39262(self_39226, other_39227);
break BeforeRet;
}
else {
if ((isObj(self_39226.m_type, NTI39144) & isObj(other_39227.m_type, NTI39093))) {
result_39233 = HEX3DHEX3D_39338(self_39226, other_39227);
break BeforeRet;
}
else {
if ((isObj(self_39226.m_type, NTI39146) & isObj(other_39227.m_type, NTI39093))) {
result_39233 = HEX3DHEX3D_39327(self_39226, other_39227);
break BeforeRet;
}
else {
if ((isObj(self_39226.m_type, NTI39135) & isObj(other_39227.m_type, NTI39093))) {
result_39233 = HEX3DHEX3D_39275(self_39226, other_39227);
break BeforeRet;
}
else {
if ((isObj(self_39226.m_type, NTI39093) & isObj(other_39227.m_type, NTI39093))) {
result_39233 = HEX3DHEX3D_39224(self_39226, other_39227);
break BeforeRet;
}
}}}}}}}}}}
} while (false); 
return result_39233;
}
function value_39299(self_39301) {
var result_39302 = false;
result_39302 = false;
return result_39302;
}
function value_39290(self_39292) {
var result_39293 = false;
result_39293 = true;
return result_39293;
}
function value_39295(self_39292) {
var result_39298 = false;
BeforeRet: do {
if (isObj(self_39292.m_type, NTI39142)) {
result_39298 = value_39299(self_39292);
break BeforeRet;
}
else {
if (isObj(self_39292.m_type, NTI39138)) {
result_39298 = value_39290(self_39292);
break BeforeRet;
}
}
} while (false); 
return result_39298;
}
function HEX24_39758(self_39760) {
var result_39761 = null;
result_39761 = (makeNimstrLit("^").slice(0,-1)).concat(self_39760.word_39097);
return result_39761;
}
function HEX24_43201(self_43203) {
var result_43204 = null;
BeforeRet: do {
result_43204 = (makeNimstrLit("Activation(").slice(0,-1)).concat(HEX24_39604(self_43203.body_43047).slice(0,-1),makeNimstrLit("|").slice(0,-1),cstrToNimstr((self_43203.pos_43046)+"").slice(0,-1),makeNimstrLit(")"));
break BeforeRet;
} while (false); 
return result_43204;
}
function HEX24_39762(self_39764) {
var result_39765 = null;
result_39765 = (makeNimstrLit("^.").slice(0,-1)).concat(self_39764.word_39097);
return result_39765;
}
function HEX24_39774(self_39776) {
var result_39777 = null;
result_39777 = (makeNimstrLit(":").slice(0,-1)).concat(self_39776.word_39097);
return result_39777;
}
function HEX24_39770(self_39772) {
var result_39773 = null;
result_39773 = (makeNimstrLit("\'").slice(0,-1)).concat(self_39772.word_39097);
return result_39773;
}
function HEX24_39766(self_39768) {
var result_39769 = null;
result_39769 = (makeNimstrLit("^..").slice(0,-1)).concat(self_39768.word_39097);
return result_39769;
}
function HEX24_39778(self_39780) {
var result_39781 = null;
result_39781 = (makeNimstrLit(":^").slice(0,-1)).concat(self_39780.word_39097);
return result_39781;
}
function nsuJoinSep(a_23585, sep_23586) {
var result_23587 = null;
if ((0 < (a_23585 != null ? a_23585.length : 0))) {
var L_23602 = ((sep_23586 != null ? sep_23586.length-1 : 0) * ((a_23585 != null ? a_23585.length : 0) - 1));
L1: do {
var i_23612 = 0;
var HEX3Atmp_23633 = 0;
HEX3Atmp_23633 = (a_23585 != null ? (a_23585.length-1) : -1);
var res_23636 = 0;
L2: do {
L3: while (true) {
if (!(res_23636 <= HEX3Atmp_23633)) break L3;
i_23612 = res_23636;
L_23602 += (a_23585[i_23612] != null ? a_23585[i_23612].length-1 : 0);
res_23636 += 1;
}
} while(false);
} while(false);
result_23587 = mnewString(0);
if (result_23587 != null) { result_23587 = (result_23587.slice(0, -1)).concat(a_23585[0]); } else { result_23587 = a_23585[0];};
L4: do {
var i_23631 = 0;
var HEX3Atmp_23641 = 0;
HEX3Atmp_23641 = (a_23585 != null ? (a_23585.length-1) : -1);
var res_23644 = 1;
L5: do {
L6: while (true) {
if (!(res_23644 <= HEX3Atmp_23641)) break L6;
i_23631 = res_23644;
if (result_23587 != null) { result_23587 = (result_23587.slice(0, -1)).concat(sep_23586); } else { result_23587 = sep_23586;};
if (result_23587 != null) { result_23587 = (result_23587.slice(0, -1)).concat(a_23585[i_23631]); } else { result_23587 = a_23585[i_23631];};
res_23644 += 1;
}
} while(false);
} while(false);
}
else {
result_23587 = makeNimstrLit("");
}

return result_23587;
}
function map_39686(data_39692, op_39697) {
var result_39699 = null;
result_39699 = new Array((data_39692 != null ? data_39692.length : 0)); for (var i=0;i<(data_39692 != null ? data_39692.length : 0);++i) {result_39699[i]=null;}L1: do {
var i_39733 = 0;
var HEX3Atmp_39735 = 0;
HEX3Atmp_39735 = ((data_39692 != null ? data_39692.length : 0) - 1);
var res_39738 = 0;
L2: do {
L3: while (true) {
if (!(res_39738 <= HEX3Atmp_39735)) break L3;
i_39733 = res_39738;
result_39699[i_39733] = op_39697(data_39692[i_39733]);
res_39738 += 1;
}
} while(false);
} while(false);
return result_39699;
}
function HEX24_39670(self_39673) {
function HEX3Aanonymous_39678(n_39680) {
var result_39681 = null;
result_39681 = HEX24_39604(n_39680);
return result_39681;
}
var result_39674 = null;
result_39674 = nsuJoinSep(map_39686(self_39673, HEX3Aanonymous_39678), makeNimstrLit(" "));
return result_39674;
}
function HEX24_39790(self_39792) {
var result_39793 = null;
result_39793 = (makeNimstrLit("{").slice(0,-1)).concat(HEX24_39670(self_39792.nodes_39152).slice(0,-1),makeNimstrLit("}"));
return result_39793;
}
function HEX24_39786(self_39788) {
var result_39789 = null;
result_39789 = (makeNimstrLit("(").slice(0,-1)).concat(HEX24_39670(self_39788.nodes_39152).slice(0,-1),makeNimstrLit(")"));
return result_39789;
}
function HEX24_39794(self_39796) {
var result_39797 = null;
result_39797 = makeNimstrLit("");
L1: do {
var i_39815 = 0;
var HEX3Atmp_39817 = 0;
HEX3Atmp_39817 = ((self_39796.keys_39123 != null ? self_39796.keys_39123.length : 0) - 1);
var res_39820 = 0;
L2: do {
L3: while (true) {
if (!(res_39820 <= HEX3Atmp_39817)) break L3;
i_39815 = res_39820;
result_39797 = (result_39797.slice(0,-1)).concat(self_39796.keys_39123[i_39815].slice(0,-1),makeNimstrLit(" ").slice(0,-1),HEX24_39604(self_39796.args_39125[i_39815]));
res_39820 += 1;
}
} while(false);
} while(false);
return result_39797;
}
function HEX24_39754(self_39756) {
var result_39757 = null;
result_39757 = (makeNimstrLit("..").slice(0,-1)).concat(self_39756.word_39097);
return result_39757;
}
function HEX24_43083(self_43085) {
var result_43086 = null;
BeforeRet: do {
result_43086 = (makeNimstrLit("[").slice(0,-1)).concat(HEX24_39670(self_43085.nodes_39152).slice(0,-1),makeNimstrLit("]"));
break BeforeRet;
} while (false); 
return result_43086;
}
function HEX24_39782(self_39784) {
var result_39785 = null;
result_39785 = (makeNimstrLit("[").slice(0,-1)).concat(HEX24_39670(self_39784.nodes_39152).slice(0,-1),makeNimstrLit("]"));
return result_39785;
}
function HEX24_43079(self_43081) {
var result_43082 = null;
BeforeRet: do {
if (self_43081.infix_43034) {
result_43082 = makeNimstrLit("nimi");
}
else {
result_43082 = makeNimstrLit("nim");
}

result_43082 = (result_43082.slice(0,-1)).concat(makeNimstrLit("(").slice(0,-1),cstrToNimstr((self_43081.arity_43035)+"").slice(0,-1),makeNimstrLit(")"));
break BeforeRet;
} while (false); 
return result_43082;
}
function HEX24_39608(self_39610) {
var result_39611 = null;
result_39611 = (HEX24_39604(self_39610.key_39195).slice(0,-1)).concat(makeNimstrLit(" = ").slice(0,-1),HEX24_39604(self_39610.val_39196));
return result_39611;
}
function HEX24_39646(self_39648) {
var result_39649 = null;
result_39649 = cstrToNimstr((self_39648.value_39133)+"");
return result_39649;
}
function HEX24_39642(self_39644) {
var result_39645 = null;
result_39645 = cstrToNimstr((self_39644.value_39130)+"");
return result_39645;
}
function HEX24_39612(self_39614) {
var result_39615 = null;
BeforeRet: do {
result_39615 = makeNimstrLit("{");
var first_39616 = true;
L1: do {
var k_39633 = null;
var v_39634 = null;
var HEX3Atmp_39636 = null;
HEX3Atmp_39636 = self_39614.bindings_39192;
var h_39639 = HEX3Atmp_39636.first_39188;
L2: do {
L3: while (true) {
if (!(0 <= h_39639)) break L3;
var nxt_39641 = HEX3Atmp_39636.data_39183[h_39639].Field1;
if (isfilled_35263(HEX3Atmp_39636.data_39183[h_39639].Field0)) {
k_39633 = HEX3Atmp_39636.data_39183[h_39639].Field2;
v_39634 = HEX3Atmp_39636.data_39183[h_39639].Field3;
if (first_39616) {
if (result_39615 != null) { result_39615 = (result_39615.slice(0, -1)).concat(HEX24_39604(v_39634)); } else { result_39615 = HEX24_39604(v_39634);};
first_39616 = false;
}
else {
if (result_39615 != null) { result_39615 = (result_39615.slice(0, -1)).concat((makeNimstrLit(" ").slice(0,-1)).concat(HEX24_39604(v_39634))); } else { result_39615 = (makeNimstrLit(" ").slice(0,-1)).concat(HEX24_39604(v_39634));};
}

}

h_39639 = nxt_39641;
}
} while(false);
} while(false);
result_39615 = (result_39615.slice(0,-1)).concat(makeNimstrLit("}"));
break BeforeRet;
} while (false); 
return result_39615;
}
function nsuToHex(x_22519, len_22520) {
var result_22521 = null;
var n_22523 = x_22519;
result_22521 = mnewString(len_22520);
L1: do {
var j_22614 = 0;
var HEX3Atmp_22618 = 0;
HEX3Atmp_22618 = (len_22520 - 1);
var res_22621 = HEX3Atmp_22618;
L2: do {
L3: while (true) {
if (!(0 <= res_22621)) break L3;
j_22614 = res_22621;
result_22521[j_22614] = makeNimstrLit("0123456789ABCDEF")[(n_22523 & 15)];
n_22523 = ((n_22523 ) >>> 4);
if (((n_22523 == 0) && (x_22519 < 0))) {
n_22523 = -1;
}

res_22621 -= 1;
}
} while(false);
} while(false);
return result_22521;
}
function nsuEscape(s_24895, prefix_24896, suffix_24897) {
var result_24898 = null;
result_24898 = mnewString(0);
if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(prefix_24896); } else { result_24898 = prefix_24896;};
L1: do {
var c_24900 = 0;
var i_24912 = 0;
var L_24914 = (s_24895 != null ? s_24895.length-1 : 0);
L2: do {
L3: while (true) {
if (!(i_24912 < L_24914)) break L3;
c_24900 = s_24895[i_24912];
switch (c_24900) {
case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7: case 8: case 9: case 10: case 11: case 12: case 13: case 14: case 15: case 16: case 17: case 18: case 19: case 20: case 21: case 22: case 23: case 24: case 25: case 26: case 27: case 28: case 29: case 30: case 31: case 128: case 129: case 130: case 131: case 132: case 133: case 134: case 135: case 136: case 137: case 138: case 139: case 140: case 141: case 142: case 143: case 144: case 145: case 146: case 147: case 148: case 149: case 150: case 151: case 152: case 153: case 154: case 155: case 156: case 157: case 158: case 159: case 160: case 161: case 162: case 163: case 164: case 165: case 166: case 167: case 168: case 169: case 170: case 171: case 172: case 173: case 174: case 175: case 176: case 177: case 178: case 179: case 180: case 181: case 182: case 183: case 184: case 185: case 186: case 187: case 188: case 189: case 190: case 191: case 192: case 193: case 194: case 195: case 196: case 197: case 198: case 199: case 200: case 201: case 202: case 203: case 204: case 205: case 206: case 207: case 208: case 209: case 210: case 211: case 212: case 213: case 214: case 215: case 216: case 217: case 218: case 219: case 220: case 221: case 222: case 223: case 224: case 225: case 226: case 227: case 228: case 229: case 230: case 231: case 232: case 233: case 234: case 235: case 236: case 237: case 238: case 239: case 240: case 241: case 242: case 243: case 244: case 245: case 246: case 247: case 248: case 249: case 250: case 251: case 252: case 253: case 254: case 255: if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(makeNimstrLit("\\x")); } else { result_24898 = makeNimstrLit("\\x");};
if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(nsuToHex(c_24900, 2)); } else { result_24898 = nsuToHex(c_24900, 2);};

break;
case 92: if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(makeNimstrLit("\\\\")); } else { result_24898 = makeNimstrLit("\\\\");};

break;
case 39: if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(makeNimstrLit("\\\'")); } else { result_24898 = makeNimstrLit("\\\'");};

break;
case 34: if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(makeNimstrLit("\\\"")); } else { result_24898 = makeNimstrLit("\\\"");};

break;
default: 
if (result_24898 != null) { addChar(result_24898, c_24900); } else { result_24898 = [c_24900, 0]; };
break;
}
i_24912 += 1;
}
} while(false);
} while(false);
if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(suffix_24897); } else { result_24898 = suffix_24897;};
return result_24898;
}
function HEX24_39650(self_39652) {
var result_39653 = null;
result_39653 = nsuEscape(self_39652.value_39136, makeNimstrLit("\""), makeNimstrLit("\""));
return result_39653;
}
function HEX24_39662(self_39664) {
var result_39665 = null;
result_39665 = makeNimstrLit("nil");
return result_39665;
}
function HEX24_39658(self_39660) {
var result_39661 = null;
result_39661 = makeNimstrLit("false");
return result_39661;
}
function HEX24_39654(self_39656) {
var result_39657 = null;
result_39657 = makeNimstrLit("true");
return result_39657;
}
function HEX24_39666(self_39668) {
var result_39669 = null;
result_39669 = makeNimstrLit("undef");
return result_39669;
}
function HEX24_39750(self_39752) {
var result_39753 = null;
result_39753 = (makeNimstrLit(".").slice(0,-1)).concat(self_39752.word_39097);
return result_39753;
}
function HEX24_39746(self_39748) {
var result_39749 = null;
result_39749 = self_39748.word_39097;
return result_39749;
}
function HEX24_39742(self_39744) {
var result_39745 = null;
result_39745 = self_39744.word_39097;
return result_39745;
}
function HEX24_39427(self_39429) {
var result_39430 = null;
rawEcho(makeNimstrLit("repr not available in js"));
return result_39430;
}
function HEX24_39604(self_39429) {
var result_39607 = null;
BeforeRet: do {
if (isObj(self_39429.m_type, NTI39113)) {
result_39607 = HEX24_39758(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI43041)) {
result_39607 = HEX24_43201(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39115)) {
result_39607 = HEX24_39762(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39111)) {
result_39607 = HEX24_39774(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39103)) {
result_39607 = HEX24_39770(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39117)) {
result_39607 = HEX24_39766(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39119)) {
result_39607 = HEX24_39778(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39159)) {
result_39607 = HEX24_39790(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39155)) {
result_39607 = HEX24_39786(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39121)) {
result_39607 = HEX24_39794(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39109)) {
result_39607 = HEX24_39754(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI43037)) {
result_39607 = HEX24_43083(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39157)) {
result_39607 = HEX24_39782(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI43032)) {
result_39607 = HEX24_43079(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39194)) {
result_39607 = HEX24_39608(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39132)) {
result_39607 = HEX24_39646(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39129)) {
result_39607 = HEX24_39642(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39161)) {
result_39607 = HEX24_39612(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39135)) {
result_39607 = HEX24_39650(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39146)) {
result_39607 = HEX24_39662(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39142)) {
result_39607 = HEX24_39658(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39140)) {
result_39607 = HEX24_39654(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39144)) {
result_39607 = HEX24_39666(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39107)) {
result_39607 = HEX24_39750(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39105)) {
result_39607 = HEX24_39746(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39096)) {
result_39607 = HEX24_39742(self_39429);
break BeforeRet;
}
else {
if (isObj(self_39429.m_type, NTI39093)) {
result_39607 = HEX24_39427(self_39429);
break BeforeRet;
}
}}}}}}}}}}}}}}}}}}}}}}}}}}
} while (false); 
return result_39607;
}
function form_39833(self_39835) {
var result_39836 = null;
result_39836 = self_39835.value_39136;
return result_39836;
}
function form_39824(self_39826) {
var result_39827 = null;
result_39827 = HEX24_39604(self_39826);
return result_39827;
}
function form_39829(self_39826) {
var result_39832 = null;
BeforeRet: do {
if (isObj(self_39826.m_type, NTI39135)) {
result_39832 = form_39833(self_39826);
break BeforeRet;
}
else {
if (isObj(self_39826.m_type, NTI39093)) {
result_39832 = form_39824(self_39826);
break BeforeRet;
}
}
} while (false); 
return result_39832;
}
function newcurly_40474(nodes_40477) {
var result_40478 = null;
result_40478 = {nodes_39152: nodes_40477, m_type: NTI39159, pos_39153: 0, tags_39094: null};
return result_40478;
}
function concat_40708(seqs_40714) {
var result_40716 = null;
var L_40717 = 0;
L1: do {
var seqitm_40743 = null;
var i_41015 = 0;
L2: do {
L3: while (true) {
if (!(i_41015 < (seqs_40714 != null ? seqs_40714.length : 0))) break L3;
seqitm_40743 = seqs_40714[i_41015];
L_40717 += (seqitm_40743 != null ? seqitm_40743.length : 0);
i_41015 += 1;
}
} while(false);
} while(false);
result_40716 = new Array(L_40717); for (var i=0;i<L_40717;++i) {result_40716[i]=null;}var i_40771 = 0;
L4: do {
var s_40779 = null;
var i_41025 = 0;
L5: do {
L6: while (true) {
if (!(i_41025 < (seqs_40714 != null ? seqs_40714.length : 0))) break L6;
s_40779 = seqs_40714[i_41025];
L7: do {
var itm_41002 = null;
var i_41020 = 0;
var L_41022 = (s_40779 != null ? s_40779.length : 0);
L8: do {
L9: while (true) {
if (!(i_41020 < L_41022)) break L9;
itm_41002 = s_40779[i_41020];
result_40716[i_40771] = itm_41002;
i_40771 += 1;
i_41020 += 1;
}
} while(false);
} while(false);
i_41025 += 1;
}
} while(false);
} while(false);
return result_40716;
}
function concat_41050(self_41052, nodes_41054) {
var result_41055 = null;
result_41055 = newcurly_40474(concat_40708([self_41052.nodes_39152, nodes_41054]));
return result_41055;
}
function newparen_40436(nodes_40439) {
var result_40440 = null;
result_40440 = {nodes_39152: nodes_40439, m_type: NTI39155, pos_39153: 0, tags_39094: null};
return result_40440;
}
function concat_41026(self_41028, nodes_41030) {
var result_41031 = null;
result_41031 = newparen_40436(concat_40708([self_41028.nodes_39152, nodes_41030]));
return result_41031;
}
function newblok_40398(nodes_40401) {
var result_40402 = null;
result_40402 = {nodes_39152: nodes_40401, m_type: NTI39157, pos_39153: 0, tags_39094: null};
return result_40402;
}
function concat_40693(self_40695, nodes_40697) {
var result_40698 = null;
result_40698 = newblok_40398(concat_40708([self_40695.nodes_39152, nodes_40697]));
return result_40698;
}
function concat_40682(self_40684, nodes_40686) {
var result_40687 = null;
raiseruntimeexception_39198((makeNimstrLit("Should not happen...").slice(0,-1)).concat(HEX24_39604(self_40684).slice(0,-1),makeNimstrLit(" ").slice(0,-1),HEX24_39670(nodes_40686)));
return result_40687;
}
function concat_40689(self_40684, nodes_40686) {
var result_40692 = null;
BeforeRet: do {
if (isObj(self_40684.m_type, NTI39159)) {
result_40692 = concat_41050(self_40684, nodes_40686);
break BeforeRet;
}
else {
if (isObj(self_40684.m_type, NTI39155)) {
result_40692 = concat_41026(self_40684, nodes_40686);
break BeforeRet;
}
else {
if (isObj(self_40684.m_type, NTI39157)) {
result_40692 = concat_40693(self_40684, nodes_40686);
break BeforeRet;
}
else {
if (isObj(self_40684.m_type, NTI39150)) {
result_40692 = concat_40682(self_40684, nodes_40686);
break BeforeRet;
}
}}}
} while (false); 
return result_40692;
}
function newvalue_40522(v_40524) {
var result_40525 = null;
result_40525 = {value_39136: v_40524, m_type: NTI39135, tags_39094: null};
return result_40525;
}
function nsuStartsWith(s_23463, prefix_23464) {
var result_23465 = false;
BeforeRet: do {
var i_23466 = 0;
L1: do {
L2: while (true) {
if (!true) break L2;
if ((prefix_23464[i_23466] == 0)) {
result_23465 = true;
break BeforeRet;
}

if (!((s_23463[i_23466] == prefix_23464[i_23466]))) {
result_23465 = false;
break BeforeRet;
}

i_23466 += 1;
}
} while(false);
} while (false); 
return result_23465;
}
function npuParseHex(s_18253, number_18255, number_18255_Idx, start_18256, maxlen_18257) {
var Tmp1;
var result_18258 = 0;
var i_18259 = start_18256;
var founddigit_18260 = false;
if (((s_18253[i_18259] == 48) && ((s_18253[(i_18259 + 1)] == 120) || (s_18253[(i_18259 + 1)] == 88)))) {
i_18259 += 2;
}
else {
if ((s_18253[i_18259] == 35)) {
i_18259 += 1;
}
}
if ((maxlen_18257 == 0)) {
Tmp1 = (s_18253 != null ? s_18253.length-1 : 0);
}
else {
Tmp1 = (i_18259 + maxlen_18257);
}

var last_18279 = Tmp1;
L2: do {
L3: while (true) {
if (!(i_18259 < last_18279)) break L3;
switch (s_18253[i_18259]) {
case 95: 
break;
case 48: case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: number_18255[number_18255_Idx] = ((number_18255[number_18255_Idx] << 4) | (s_18253[i_18259] - 48));
founddigit_18260 = true;

break;
case 97: case 98: case 99: case 100: case 101: case 102: number_18255[number_18255_Idx] = ((number_18255[number_18255_Idx] << 4) | ((s_18253[i_18259] - 97) + 10));
founddigit_18260 = true;

break;
case 65: case 66: case 67: case 68: case 69: case 70: number_18255[number_18255_Idx] = ((number_18255[number_18255_Idx] << 4) | ((s_18253[i_18259] - 65) + 10));
founddigit_18260 = true;

break;
default: 
break L2;
break;
}
i_18259 += 1;
}
} while(false);
if (founddigit_18260) {
result_18258 = (i_18259 - start_18256);
}

return result_18258;
}
function nsuEndsWith(s_23479, suffix_23480) {
var result_23481 = false;
BeforeRet: do {
var i_23482 = 0;
var j_23483 = ((s_23479 != null ? s_23479.length-1 : 0) - (suffix_23480 != null ? suffix_23480.length-1 : 0));
L1: do {
L2: while (true) {
if (!((i_23482 + j_23483) < (s_23479 != null ? s_23479.length-1 : 0))) break L2;
if (!((s_23479[(i_23482 + j_23483)] == suffix_23480[i_23482]))) {
result_23481 = false;
break BeforeRet;
}

i_23482 += 1;
}
} while(false);
if ((suffix_23480[i_23482] == 0)) {
result_23481 = true;
break BeforeRet;
}

} while (false); 
return result_23481;
}
function nsuUnescape(s_24917, prefix_24918, suffix_24919) {
var result_24920 = null;
result_24920 = mnewString(0);
var i_24921 = (prefix_24918 != null ? prefix_24918.length-1 : 0);
if (!(nsuStartsWith(s_24917, prefix_24918))) {
var e_24925 = null;
e_24925 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null};
e_24925.message = (makeNimstrLit("String does not start with a prefix of: ").slice(0,-1)).concat(prefix_24918);
raiseException(e_24925, "ValueError");
}

L1: do {
L2: while (true) {
if (!true) break L2;
if ((i_24921 == ((s_24917 != null ? s_24917.length-1 : 0) - (suffix_24919 != null ? suffix_24919.length-1 : 0)))) {
break L1;
}

switch (s_24917[i_24921]) {
case 92: switch (s_24917[(i_24921 + 1)]) {
case 120: i_24921 += 2;
var c_24944 = [0];
i_24921 += npuParseHex(s_24917, c_24944, 0, i_24921, 2);
if (result_24920 != null) { addChar(result_24920, c_24944[0]); } else { result_24920 = [c_24944[0], 0]; };
i_24921 -= 2;

break;
case 92: if (result_24920 != null) { addChar(result_24920, 92); } else { result_24920 = [92, 0]; };

break;
case 39: if (result_24920 != null) { addChar(result_24920, 39); } else { result_24920 = [39, 0]; };

break;
case 34: if (result_24920 != null) { addChar(result_24920, 34); } else { result_24920 = [34, 0]; };

break;
default: 
if (result_24920 != null) { result_24920 = (result_24920.slice(0, -1)).concat((makeNimstrLit("\\").slice(0,-1)).concat([s_24917[(i_24921 + 1)], 0])); } else { result_24920 = (makeNimstrLit("\\").slice(0,-1)).concat([s_24917[(i_24921 + 1)], 0]);};
break;
}
i_24921 += 1;

break;
case 0: break L1;

break;
default: 
if (result_24920 != null) { addChar(result_24920, s_24917[i_24921]); } else { result_24920 = [s_24917[i_24921], 0]; };
break;
}
i_24921 += 1;
}
} while(false);
if (!(nsuEndsWith(s_24917, suffix_24919))) {
var e_24985 = null;
e_24985 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null};
e_24985.message = (makeNimstrLit("String does not end with a suffix of: ").slice(0,-1)).concat(suffix_24919);
raiseException(e_24985, "ValueError");
}

return result_24920;
}
function parsevalue_41630(self_41632, s_41633) {
var Tmp1;
var Tmp2;
var result_41634 = null;
if (!(1 < (s_41633 != null ? s_41633.length-1 : 0))) Tmp2 = false; else {Tmp2 = (s_41633[0] == 34); }if (!Tmp2) Tmp1 = false; else {Tmp1 = (s_41633[((s_41633 != null ? s_41633.length-1 : 0) - 1)] == 34); }if (Tmp1) {
result_41634 = newvalue_40522(nsuUnescape(s_41633, makeNimstrLit("\""), makeNimstrLit("\"")));
}

return result_41634;
}
function tentothepowerof_13182(b_13184) {
var result_13185 = 0.0;
var b_13186 = b_13184;
var a_13187 = 1.0000000000000000e+01;
result_13185 = 1.0000000000000000e+00;
L1: do {
L2: while (true) {
if (!true) break L2;
if (((b_13186 & 1) == 1)) {
result_13185 = (result_13185 * a_13187);
}

b_13186 = ((b_13186 >>> 0) >>> 1);
if ((b_13186 == 0)) {
break L1;
}

a_13187 = (a_13187 * a_13187);
}
} while(false);
return result_13185;
}
function nimParseBiggestFloat(s_13194, number_13196, number_13196_Idx, start_13197) {
var result_13198 = 0;
BeforeRet: do {
var esign_13199 = 1.0000000000000000e+00;
var sign_13200 = 1.0000000000000000e+00;
var i_13201 = start_13197;
var exponent_13202 = 0;
var flags_13203 = 0;
number_13196[number_13196_Idx] = 0.0;
if ((s_13194[i_13201] == 43)) {
i_13201 += 1;
}
else {
if ((s_13194[i_13201] == 45)) {
sign_13200 = -1.0000000000000000e+00;
i_13201 += 1;
}
}
if (((s_13194[i_13201] == 78) || (s_13194[i_13201] == 110))) {
if (((s_13194[(i_13201 + 1)] == 65) || (s_13194[(i_13201 + 1)] == 97))) {
if (((s_13194[(i_13201 + 2)] == 78) || (s_13194[(i_13201 + 2)] == 110))) {
if (!((SetConstr([97, 122], [65, 90], [48, 57], 95)[s_13194[(i_13201 + 3)]] != undefined))) {
number_13196[number_13196_Idx] = NaN;
result_13198 = ((i_13201 + 3) - start_13197);
break BeforeRet;
}

}

}

result_13198 = 0;
break BeforeRet;
}

if (((s_13194[i_13201] == 73) || (s_13194[i_13201] == 105))) {
if (((s_13194[(i_13201 + 1)] == 78) || (s_13194[(i_13201 + 1)] == 110))) {
if (((s_13194[(i_13201 + 2)] == 70) || (s_13194[(i_13201 + 2)] == 102))) {
if (!((SetConstr([97, 122], [65, 90], [48, 57], 95)[s_13194[(i_13201 + 3)]] != undefined))) {
number_13196[number_13196_Idx] = (Infinity * sign_13200);
result_13198 = ((i_13201 + 3) - start_13197);
break BeforeRet;
}

}

}

result_13198 = 0;
break BeforeRet;
}

L1: do {
L2: while (true) {
if (!(SetConstr([48, 57])[s_13194[i_13201]] != undefined)) break L2;
flags_13203 = (flags_13203 | 1);
number_13196[number_13196_Idx] = ((number_13196[number_13196_Idx] * 1.0000000000000000e+01) + (s_13194[i_13201] - 48));
i_13201 += 1;
L3: do {
L4: while (true) {
if (!(s_13194[i_13201] == 95)) break L4;
i_13201 += 1;
}
} while(false);
}
} while(false);
if ((s_13194[i_13201] == 46)) {
var hd_13292 = 1.0000000000000000e+00;
i_13201 += 1;
L5: do {
L6: while (true) {
if (!(SetConstr([48, 57])[s_13194[i_13201]] != undefined)) break L6;
flags_13203 = (flags_13203 | 2);
number_13196[number_13196_Idx] = ((number_13196[number_13196_Idx] * 1.0000000000000000e+01) + (s_13194[i_13201] - 48));
hd_13292 = (hd_13292 * 1.0000000000000000e+01);
i_13201 += 1;
L7: do {
L8: while (true) {
if (!(s_13194[i_13201] == 95)) break L8;
i_13201 += 1;
}
} while(false);
}
} while(false);
number_13196[number_13196_Idx] = (number_13196[number_13196_Idx] / hd_13292);
}

if ((flags_13203 == 0)) {
result_13198 = 0;
break BeforeRet;
}

if ((SetConstr(101, 69)[s_13194[i_13201]] != undefined)) {
i_13201 += 1;
if ((s_13194[i_13201] == 43)) {
i_13201 += 1;
}
else {
if ((s_13194[i_13201] == 45)) {
esign_13199 = -1.0000000000000000e+00;
i_13201 += 1;
}
}
if (!((SetConstr([48, 57])[s_13194[i_13201]] != undefined))) {
result_13198 = 0;
break BeforeRet;
}

L9: do {
L10: while (true) {
if (!(SetConstr([48, 57])[s_13194[i_13201]] != undefined)) break L10;
exponent_13202 = (((exponent_13202 * 10) + s_13194[i_13201]) - 48);
i_13201 += 1;
L11: do {
L12: while (true) {
if (!(s_13194[i_13201] == 95)) break L12;
i_13201 += 1;
}
} while(false);
}
} while(false);
}

var hd_13444 = tentothepowerof_13182(exponent_13202);
if ((0.0 < esign_13199)) {
number_13196[number_13196_Idx] = (number_13196[number_13196_Idx] * hd_13444);
}
else {
number_13196[number_13196_Idx] = (number_13196[number_13196_Idx] / hd_13444);
}

number_13196[number_13196_Idx] = (number_13196[number_13196_Idx] * sign_13200);
result_13198 = (i_13201 - start_13197);
} while (false); 
return result_13198;
}
function npuParseFloat(s_18865, number_18867, number_18867_Idx, start_18868) {
var result_18869 = 0;
var bf_18870 = [0.0];
result_18869 = nimParseBiggestFloat(s_18865, bf_18870, 0, start_18868);
if (!((result_18869 == 0))) {
number_18867[number_18867_Idx] = bf_18870[0];
}

return result_18869;
}
function nsuParseFloat(s_22689) {
var Tmp1;
var result_22690 = [0.0];
var L_22692 = npuParseFloat(s_22689, result_22690, 0, 0);
if (!((L_22692 == (s_22689 != null ? s_22689.length-1 : 0)))) Tmp1 = true; else {Tmp1 = (L_22692 == 0); }if (Tmp1) {
var e_22696 = null;
e_22696 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null};
e_22696.message = (makeNimstrLit("invalid float: ").slice(0,-1)).concat(s_22689);
raiseException(e_22696, "ValueError");
}

return result_22690[0];
}
function reraiseException() {
if ((lastJSError == null)) {
var e_12018 = null;
e_12018 = {m_type: NTI3460, parent: null, name: null, message: null, trace: null};
e_12018.message = makeNimstrLit("no exception to reraise");
raiseException(e_12018, "ReraiseError");
}
else {
if ((excHandler == 0)) {
var isnimexception_12201 = false;
isnimexception_12201 = lastJSError.m_type;if (isnimexception_12201) {
unhandledException(lastJSError);
}

}

throw lastJSError;}

}
function parsevalue_41625(self_41627, s_41628) {
var result_41629 = null;
BeforeRet: do {
++excHandler;
try {
result_41629 = newvalue_40517(nsuParseFloat(s_41628));
break BeforeRet;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
if (lastJSError && (isObj(lastJSError.m_type, NTI3446))) {
result_41629 = null;
break BeforeRet;
}
else {
reraiseException();
}
lastJSError = prevJSError;
} finally {
}
} while (false); 
return result_41629;
}
function addInt(a_12456, b_12457) {
    var result = a_12456 + b_12457;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  }
function subInt(a_12461, b_12462) {
    var result = a_12461 - b_12462;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  }
function mulInt(a_12466, b_12467) {
    var result = a_12466 * b_12467;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  }
function rawparseint_18727(s_18729, b_18731, b_18731_Idx, start_18732) {
var result_18733 = 0;
var sign_18734 = -1;
var i_18735 = start_18732;
if ((s_18729[i_18735] == 43)) {
i_18735 = addInt(i_18735, 1);
}
else {
if ((s_18729[i_18735] == 45)) {
i_18735 = addInt(i_18735, 1);
sign_18734 = 1;
}
}
if ((SetConstr([48, 57])[s_18729[i_18735]] != undefined)) {
b_18731[b_18731_Idx] = 0;
L1: do {
L2: while (true) {
if (!(SetConstr([48, 57])[s_18729[i_18735]] != undefined)) break L2;
b_18731[b_18731_Idx] = subInt(mulInt(b_18731[b_18731_Idx], 10), subInt(s_18729[i_18735], 48));
i_18735 = addInt(i_18735, 1);
L3: do {
L4: while (true) {
if (!(s_18729[i_18735] == 95)) break L4;
i_18735 = addInt(i_18735, 1);
}
} while(false);
}
} while(false);
b_18731[b_18731_Idx] = mulInt(b_18731[b_18731_Idx], sign_18734);
result_18733 = subInt(i_18735, start_18732);
}

return result_18733;
}
function npuParseBiggestInt(s_18816, number_18818, number_18818_Idx, start_18819) {
var result_18820 = 0;
var res_18821 = [0];
result_18820 = rawparseint_18727(s_18816, res_18821, 0, start_18819);
number_18818[number_18818_Idx] = res_18821[0];
return result_18820;
}
function npuParseInt(s_18826, number_18828, number_18828_Idx, start_18829) {
var Tmp1;
var Tmp2;
var result_18830 = 0;
var res_18831 = [0];
result_18830 = npuParseBiggestInt(s_18826, res_18831, 0, start_18829);
if (!true) Tmp1 = false; else {if ((res_18831[0] < -2147483648)) Tmp2 = true; else {Tmp2 = (2147483647 < res_18831[0]); }Tmp1 = Tmp2; }if (Tmp1) {
var e_18841 = null;
e_18841 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_18841.message = makeNimstrLit("overflow");
raiseException(e_18841, "OverflowError");
}
else {
if (!((result_18830 == 0))) {
number_18828[number_18828_Idx] = res_18831[0];
}
}
return result_18830;
}
function nsuParseInt(s_22649) {
var Tmp1;
var result_22650 = [0];
var L_22652 = npuParseInt(s_22649, result_22650, 0, 0);
if (!((L_22652 == (s_22649 != null ? s_22649.length-1 : 0)))) Tmp1 = true; else {Tmp1 = (L_22652 == 0); }if (Tmp1) {
var e_22656 = null;
e_22656 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null};
e_22656.message = (makeNimstrLit("invalid integer: ").slice(0,-1)).concat(s_22649);
raiseException(e_22656, "ValueError");
}

return result_22650[0];
}
function parsevalue_41620(self_41622, s_41623) {
var result_41624 = null;
BeforeRet: do {
++excHandler;
try {
result_41624 = newvalue_40512(nsuParseInt(s_41623));
break BeforeRet;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
if (lastJSError && (isObj(lastJSError.m_type, NTI3446))) {
result_41624 = null;
break BeforeRet;
}
else {
reraiseException();
}
lastJSError = prevJSError;
} finally {
}
} while (false); 
return result_41624;
}
function parsevalue_41610(self_41612, s_41613) {
var result_41614 = null;
return result_41614;
}
function parsevalue_41616(self_41612, s_41613) {
var result_41619 = null;
BeforeRet: do {
if (isObj(self_41612.m_type, NTI39091)) {
result_41619 = parsevalue_41630(self_41612, s_41613);
break BeforeRet;
}
else {
if (isObj(self_41612.m_type, NTI39089)) {
result_41619 = parsevalue_41625(self_41612, s_41613);
break BeforeRet;
}
else {
if (isObj(self_41612.m_type, NTI39087)) {
result_41619 = parsevalue_41620(self_41612, s_41613);
break BeforeRet;
}
else {
if (isObj(self_41612.m_type, NTI39084)) {
result_41619 = parsevalue_41610(self_41612, s_41613);
break BeforeRet;
}
}}}
} while (false); 
return result_41619;
}
function prefixlength_41666(self_41668) {
var result_41669 = 0;
result_41669 = 1;
return result_41669;
}
function prefixlength_41635(self_41637) {
var result_41638 = 0;
result_41638 = 0;
return result_41638;
}
function prefixlength_41640(self_41637) {
var result_41643 = 0;
BeforeRet: do {
if (isObj(self_41637.m_type, NTI39091)) {
result_41643 = prefixlength_41666(self_41637);
break BeforeRet;
}
else {
if (isObj(self_41637.m_type, NTI39084)) {
result_41643 = prefixlength_41635(self_41637);
break BeforeRet;
}
}
} while (false); 
return result_41643;
}
function tokenready_41676(self_41678, token_41679, ch_41680) {
var Tmp1;
var result_41681 = null;
BeforeRet: do {
if (!(ch_41680 == 34)) Tmp1 = false; else {Tmp1 = !((token_41679[((token_41679 != null ? token_41679.length-1 : 0) - 1)] == 92)); }if (Tmp1) {
result_41681 = (token_41679.slice(0,-1)).concat([ch_41680, 0]);
break BeforeRet;
}
else {
result_41681 = null;
break BeforeRet;
}

} while (false); 
return result_41681;
}
function tokenready_41644(self_41646, token_41647, ch_41648) {
var result_41649 = null;
return result_41649;
}
function tokenready_41651(self_41646, token_41647, ch_41648) {
var result_41654 = null;
BeforeRet: do {
if (isObj(self_41646.m_type, NTI39091)) {
result_41654 = tokenready_41676(self_41646, token_41647, ch_41648);
break BeforeRet;
}
else {
if (isObj(self_41646.m_type, NTI39084)) {
result_41654 = tokenready_41644(self_41646, token_41647, ch_41648);
break BeforeRet;
}
}
} while (false); 
return result_41654;
}
function tokenstart_41670(self_41672, token_41673, ch_41674) {
var result_41675 = false;
result_41675 = (ch_41674 == 34);
return result_41675;
}
function tokenstart_41655(self_41657, token_41658, ch_41659) {
var result_41660 = false;
result_41660 = false;
return result_41660;
}
function tokenstart_41662(self_41657, token_41658, ch_41659) {
var result_41665 = false;
BeforeRet: do {
if (isObj(self_41657.m_type, NTI39091)) {
result_41665 = tokenstart_41670(self_41657, token_41658, ch_41659);
break BeforeRet;
}
else {
if (isObj(self_41657.m_type, NTI39084)) {
result_41665 = tokenstart_41655(self_41657, token_41658, ch_41659);
break BeforeRet;
}
}
} while (false); 
return result_41665;
}
function newactivation_43487(funk_43489) {
var result_43490 = null;
result_43490 = {body_43047: funk_43489, m_type: NTI43052, locals_43050: null, last_43042: null, infixarg_43043: null, returned_43044: false, parent_43045: null, pos_43046: 0, tags_39094: null};
return result_43490;
}
function eval_44759(self_44761, ni_44762) {
var result_44763 = null;
result_44763 = eval_44750(newactivation_43487(self_44761), ni_44762);
return result_44763;
}
function eval_44800(self_44802, ni_44803) {
var result_44804 = null;
result_44804 = self_44802;
return result_44804;
}
function newactivation_43502(body_43504) {
var result_43505 = null;
result_43505 = {body_43047: body_43504, m_type: NTI43056, locals_43050: null, last_43042: null, infixarg_43043: null, returned_43044: false, parent_43045: null, pos_43046: 0, tags_39094: null};
result_43505.locals_43050 = newmap_40093();
return result_43505;
}
function eval_44769(self_44771, ni_44772) {
var result_44773 = null;
BeforeRet: do {
var activation_44774 = newactivation_43502(self_44771);
eval_44750(activation_44774, ni_44772);
result_44773 = activation_44774.locals_43050;
break BeforeRet;
} while (false); 
return result_44773;
}
function newactivation_43497(body_43499) {
var result_43500 = null;
result_43500 = {body_43047: body_43499, m_type: NTI43054, last_43042: null, infixarg_43043: null, returned_43044: false, parent_43045: null, pos_43046: 0, tags_39094: null};
return result_43500;
}
function eval_44764(self_44766, ni_44767) {
var result_44768 = null;
result_44768 = eval_44750(newactivation_43497(self_44766), ni_44767);
return result_44768;
}
function eval_44805(self_44807, ni_44808) {
var result_44809 = null;
result_44809 = self_44807;
return result_44809;
}
function getordefault_39854(t_39860, key_39862) {
var result_39863 = null;
var hc_39865 = [0];
var index_39867 = rawget_39869(t_39860, key_39862, hc_39865, 0);
if ((0 <= index_39867)) {
result_39863 = t_39860.data_39183[index_39867].Field3;
}

return result_39863;
}
function getordefault_39843(t_39849, key_39851) {
var result_39852 = null;
result_39852 = getordefault_39854(t_39849, key_39851);
return result_39852;
}
function lookup_39837(self_39839, key_39840) {
var result_39841 = null;
result_39841 = getordefault_39843(self_39839.bindings_39192, key_39840);
return result_39841;
}
function lookup_43910(self_43912, key_43913) {
var result_43914 = null;
BeforeRet: do {
if (!((self_43912.locals_43050 === null))) {
result_43914 = lookup_39837(self_43912.locals_43050, key_43913);
break BeforeRet;
}

} while (false); 
return result_43914;
}
function lookup_43900(self_43902, key_43903) {
var result_43904 = null;
return result_43904;
}
function lookup_43906(self_43902, key_43903) {
var result_43909 = null;
BeforeRet: do {
if (isObj(self_43902.m_type, NTI43049)) {
result_43909 = lookup_43910(self_43902, key_43903);
break BeforeRet;
}
else {
if (isObj(self_43902.m_type, NTI43041)) {
result_43909 = lookup_43900(self_43902, key_43903);
break BeforeRet;
}
}
} while (false); 
return result_43909;
}
function lookuplocal_43946(ni_43948, key_43949) {
var result_43950 = null;
BeforeRet: do {
result_43950 = lookup_43906(ni_43948.currentactivation_43022, key_43949);
break BeforeRet;
} while (false); 
return result_43950;
}
function eval_44678(self_44680, ni_44681) {
var Tmp1;
var result_44682 = null;
var hit_44683 = lookuplocal_43946(ni_44681, self_44680);
if ((hit_44683 === null)) {
Tmp1 = ni_44681.undefval_43027;
}
else {
Tmp1 = eval_43070(hit_44683.val_39196, ni_44681);
}

result_44682 = Tmp1;
return result_44682;
}
function eval_44815(self_44817, ni_44818) {
var result_44819 = null;
result_44819 = self_44817.val_39196;
return result_44819;
}
function eval_44810(self_44812, ni_44813) {
var result_44814 = null;
result_44814 = self_44812;
return result_44814;
}
function haslocals_43542(self_43544) {
var result_43545 = false;
result_43545 = false;
return result_43545;
}
function haslocals_43533(self_43535) {
var result_43536 = false;
result_43536 = true;
return result_43536;
}
function haslocals_43538(self_43535) {
var result_43541 = false;
BeforeRet: do {
if (isObj(self_43535.m_type, NTI43054)) {
result_43541 = haslocals_43542(self_43535);
break BeforeRet;
}
else {
if (isObj(self_43535.m_type, NTI43041)) {
result_43541 = haslocals_43533(self_43535);
break BeforeRet;
}
}
} while (false); 
return result_43541;
}
function outer_43555(self_43557) {
var result_43558 = null;
result_43558 = self_43557.body_43047.parent_43039;
return result_43558;
}
function outer_43546(self_43548) {
var result_43549 = null;
result_43549 = self_43548.parent_43045;
return result_43549;
}
function outer_43551(self_43548) {
var result_43554 = null;
BeforeRet: do {
if (isObj(self_43548.m_type, NTI43052)) {
result_43554 = outer_43555(self_43548);
break BeforeRet;
}
else {
if (isObj(self_43548.m_type, NTI43041)) {
result_43554 = outer_43546(self_43548);
break BeforeRet;
}
}
} while (false); 
return result_43554;
}
function lookupparent_43951(ni_43953, key_43954) {
var result_43955 = null;
BeforeRet: do {
var inparent_43956 = false;
L1: do {
var activation_43957 = null;
var HEX3Atmp_43959 = null;
HEX3Atmp_43959 = ni_43953.currentactivation_43022;
var activation_43963 = HEX3Atmp_43959;
L2: do {
L3: while (true) {
if (!!((activation_43963 === null))) break L3;
L4: do {
L5: while (true) {
if (!!(haslocals_43538(activation_43963))) break L5;
activation_43963 = outer_43551(activation_43963);
}
} while(false);
activation_43957 = activation_43963;
if (inparent_43956) {
result_43955 = lookup_43906(activation_43957, key_43954);
break BeforeRet;
}
else {
inparent_43956 = true;
}

activation_43963 = outer_43551(activation_43963);
}
} while(false);
} while(false);
} while (false); 
return result_43955;
}
function eval_44692(self_44694, ni_44695) {
var Tmp1;
var result_44696 = null;
var hit_44697 = lookupparent_43951(ni_44695, self_44694);
if ((hit_44697 === null)) {
Tmp1 = ni_44695.undefval_43027;
}
else {
Tmp1 = eval_43070(hit_44697.val_39196, ni_44695);
}

result_44696 = Tmp1;
return result_44696;
}
function argparent_44030(ni_44032) {
var result_44033 = null;
BeforeRet: do {
L1: do {
var activation_44034 = null;
var HEX3Atmp_44036 = null;
HEX3Atmp_44036 = ni_44032.currentactivation_43022;
var activation_44041 = HEX3Atmp_44036;
L2: do {
L3: while (true) {
if (!!(haslocals_43538(activation_44041))) break L3;
activation_44041 = activation_44041.parent_43045;
}
} while(false);
activation_44041 = activation_44041.parent_43045;
L4: do {
L5: while (true) {
if (!!((activation_44041 === null))) break L5;
activation_44034 = activation_44041;
result_44033 = activation_44034;
break BeforeRet;
activation_44041 = activation_44041.parent_43045;
L6: do {
L7: while (true) {
if (!!(haslocals_43538(activation_44041))) break L7;
activation_44041 = activation_44041.parent_43045;
}
} while(false);
}
} while(false);
} while(false);
} while (false); 
return result_44033;
}
function infix_44026(self_44028) {
var result_44029 = false;
BeforeRet: do {
result_44029 = infix_44014(self_44028.val_39196);
break BeforeRet;
} while (false); 
return result_44029;
}
function infix_44022(self_44024) {
var result_44025 = false;
result_44025 = self_44024.infix_43034;
return result_44025;
}
function infix_44018(self_44020) {
var result_44021 = false;
result_44021 = self_44020.infix_43038;
return result_44021;
}
function infix_44009(self_44011) {
var result_44012 = false;
result_44012 = false;
return result_44012;
}
function infix_44014(self_44011) {
var result_44017 = false;
BeforeRet: do {
if (isObj(self_44011.m_type, NTI39194)) {
result_44017 = infix_44026(self_44011);
break BeforeRet;
}
else {
if (isObj(self_44011.m_type, NTI43032)) {
result_44017 = infix_44022(self_44011);
break BeforeRet;
}
else {
if (isObj(self_44011.m_type, NTI43037)) {
result_44017 = infix_44018(self_44011);
break BeforeRet;
}
else {
if (isObj(self_44011.m_type, NTI39093)) {
result_44017 = infix_44009(self_44011);
break BeforeRet;
}
}}}
} while (false); 
return result_44017;
}
function eval_44729(self_44731, ni_44732) {
var Tmp1;
var result_44733 = null;
BeforeRet: do {
var arg_44734 = null;
var previousactivation_44735 = argparent_44030(ni_44732);
if (!infix_44014(ni_44732.currentactivation_43022.body_43047)) Tmp1 = false; else {Tmp1 = (ni_44732.currentactivation_43022.infixarg_43043 === null); }if (Tmp1) {
arg_44734 = previousactivation_44735.last_43042;
ni_44732.currentactivation_43022.infixarg_43043 = arg_44734;
}
else {
arg_44734 = next_43867(previousactivation_44735);
}

setbinding_43994(ni_44732, self_44731, arg_44734);
result_44733 = arg_44734;
break BeforeRet;
} while (false); 
return result_44733;
}
function eval_44711(self_44713, ni_44714) {
var Tmp1;
var result_44715 = null;
BeforeRet: do {
var arg_44716 = null;
var previousactivation_44717 = argparent_44030(ni_44714);
if (!infix_44014(ni_44714.currentactivation_43022.body_43047)) Tmp1 = false; else {Tmp1 = (ni_44714.currentactivation_43022.infixarg_43043 === null); }if (Tmp1) {
arg_44716 = previousactivation_44717.last_43042;
ni_44714.currentactivation_43022.infixarg_43043 = arg_44716;
}
else {
arg_44716 = next_43867(previousactivation_44717);
}

var here_44726 = ni_44714.currentactivation_43022;
ni_44714.currentactivation_43022 = previousactivation_44717;
var ev_44727 = eval_43070(arg_44716, ni_44714);
ni_44714.currentactivation_43022 = here_44726;
setbinding_43994(ni_44714, self_44713, ev_44727);
result_44715 = ev_44727;
break BeforeRet;
} while (false); 
return result_44715;
}
function eval_44706(self_44708, ni_44709) {
var result_44710 = null;
result_44710 = newword_42251(null, self_44708.word_39097);
return result_44710;
}
function eval_44745(self_44747, ni_44748) {
var result_44749 = null;
BeforeRet: do {
result_44749 = self_44747.prok_43033(ni_44748);
break BeforeRet;
} while (false); 
return result_44749;
}
function eval_44664(self_44666, ni_44667) {
var Tmp1;
var result_44668 = null;
var hit_44669 = lookup_43924(ni_44667, self_44666);
if ((hit_44669 === null)) {
Tmp1 = ni_44667.undefval_43027;
}
else {
Tmp1 = eval_43070(hit_44669.val_39196, ni_44667);
}

result_44668 = Tmp1;
return result_44668;
}
function eval_44650(self_44652, ni_44653) {
var Tmp1;
var result_44654 = null;
var hit_44655 = lookupparent_43951(ni_44653, self_44652);
if ((hit_44655 === null)) {
Tmp1 = ni_44653.undefval_43027;
}
else {
Tmp1 = hit_44655.val_39196;
}

result_44654 = Tmp1;
return result_44654;
}
function eval_44636(self_44638, ni_44639) {
var Tmp1;
var result_44640 = null;
var hit_44641 = lookuplocal_43946(ni_44639, self_44638);
if ((hit_44641 === null)) {
Tmp1 = ni_44639.undefval_43027;
}
else {
Tmp1 = hit_44641.val_39196;
}

result_44640 = Tmp1;
return result_44640;
}
function eval_44622(self_44624, ni_44625) {
var Tmp1;
var result_44626 = null;
var hit_44627 = lookup_43924(ni_44625, self_44624);
if ((hit_44627 === null)) {
Tmp1 = ni_44625.undefval_43027;
}
else {
Tmp1 = hit_44627.val_39196;
}

result_44626 = Tmp1;
return result_44626;
}
function eval_44608(self_44610, ni_44611) {
var result_44612 = null;
BeforeRet: do {
var binding_44613 = lookup_43924(ni_44611, self_44610);
if ((binding_44613 === null)) {
raiseruntimeexception_39198((makeNimstrLit("Word not found: ").slice(0,-1)).concat(HEX24_39604(self_44610)));
}

result_44612 = eval_43070(binding_44613.val_39196, ni_44611);
break BeforeRet;
} while (false); 
return result_44612;
}
function eval_43065(self_43067, ni_43068) {
var result_44607 = null;
raiseruntimeexception_39198(makeNimstrLit("Should not happen"));
return result_44607;
}
function eval_43070(self_43067, ni_43068) {
var result_44607 = null;
BeforeRet: do {
if (isObj(self_43067.m_type, NTI43037)) {
result_44607 = eval_44759(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39157)) {
result_44607 = eval_44800(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39159)) {
result_44607 = eval_44769(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39155)) {
result_44607 = eval_44764(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39127)) {
result_44607 = eval_44805(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39107)) {
result_44607 = eval_44678(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39194)) {
result_44607 = eval_44815(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39161)) {
result_44607 = eval_44810(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39109)) {
result_44607 = eval_44692(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39119)) {
result_44607 = eval_44729(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39111)) {
result_44607 = eval_44711(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39103)) {
result_44607 = eval_44706(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI43032)) {
result_44607 = eval_44745(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39105)) {
result_44607 = eval_44664(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39117)) {
result_44607 = eval_44650(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39115)) {
result_44607 = eval_44636(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39113)) {
result_44607 = eval_44622(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39096)) {
result_44607 = eval_44608(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39093)) {
result_44607 = eval_43065(self_43067, ni_43068);
break BeforeRet;
}
else {
if (isObj(self_43067.m_type, NTI39093)) {
result_44607 = eval_43065(self_43067, ni_43068);
break BeforeRet;
}
}}}}}}}}}}}}}}}}}}}
} while (false); 
return result_44607;
}
function evaldo_44785(self_44787, ni_44788) {
var result_44789 = null;
result_44789 = eval_44750(newactivation_43497(self_44787), ni_44788);
return result_44789;
}
function newactivation_43492(body_43494) {
var result_43495 = null;
result_43495 = {body_43047: body_43494, m_type: NTI43049, locals_43050: null, last_43042: null, infixarg_43043: null, returned_43044: false, parent_43045: null, pos_43046: 0, tags_39094: null};
return result_43495;
}
function evaldo_44780(self_44782, ni_44783) {
var result_44784 = null;
result_44784 = eval_44750(newactivation_43492(self_44782), ni_44783);
return result_44784;
}
function evaldo_44790(self_44792, ni_44793) {
var result_44794 = null;
result_44794 = eval_44750(newactivation_43502(self_44792), ni_44793);
return result_44794;
}
function evaldo_43072(self_43074, ni_43075) {
var result_44779 = null;
raiseruntimeexception_39198(makeNimstrLit("Do only works for sequences"));
return result_44779;
}
function evaldo_43077(self_43074, ni_43075) {
var result_44779 = null;
BeforeRet: do {
if (isObj(self_43074.m_type, NTI39155)) {
result_44779 = evaldo_44785(self_43074, ni_43075);
break BeforeRet;
}
else {
if (isObj(self_43074.m_type, NTI39157)) {
result_44779 = evaldo_44780(self_43074, ni_43075);
break BeforeRet;
}
else {
if (isObj(self_43074.m_type, NTI39159)) {
result_44779 = evaldo_44790(self_43074, ni_43075);
break BeforeRet;
}
else {
if (isObj(self_43074.m_type, NTI39093)) {
result_44779 = evaldo_43072(self_43074, ni_43075);
break BeforeRet;
}
else {
if (isObj(self_43074.m_type, NTI39093)) {
result_44779 = evaldo_43072(self_43074, ni_43075);
break BeforeRet;
}
}}}}
} while (false); 
return result_44779;
}
function HEX2B_43611(a_43613, b_43614) {
var result_43615 = null;
result_43615 = newvalue_40517((a_43613.value_39133 + b_43614.value_39130));
return result_43615;
}
function HEX2B_43605(a_43607, b_43608) {
var result_43609 = null;
result_43609 = newvalue_40517((a_43607.value_39130 + b_43608.value_39133));
return result_43609;
}
function HEX2B_43600(a_43602, b_43603) {
var result_43604 = null;
result_43604 = newvalue_40512((a_43602.value_39130 + b_43603.value_39130));
return result_43604;
}
function HEX2B_43617(a_43619, b_43620) {
var result_43621 = null;
result_43621 = newvalue_40517((a_43619.value_39133 + b_43620.value_39133));
return result_43621;
}
function HEX2B_43590(a_43592, b_43593) {
var result_43594 = null;
raiseruntimeexception_39198((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43592).slice(0,-1),makeNimstrLit(" + ").slice(0,-1),HEX24_39604(b_43593)));
return result_43594;
}
function HEX2B_43596(a_43592, b_43593) {
var result_43599 = null;
BeforeRet: do {
if ((isObj(a_43592.m_type, NTI39132) & isObj(b_43593.m_type, NTI39129))) {
result_43599 = HEX2B_43611(a_43592, b_43593);
break BeforeRet;
}
else {
if ((isObj(a_43592.m_type, NTI39129) & isObj(b_43593.m_type, NTI39132))) {
result_43599 = HEX2B_43605(a_43592, b_43593);
break BeforeRet;
}
else {
if ((isObj(a_43592.m_type, NTI39129) & isObj(b_43593.m_type, NTI39129))) {
result_43599 = HEX2B_43600(a_43592, b_43593);
break BeforeRet;
}
else {
if ((isObj(a_43592.m_type, NTI39132) & isObj(b_43593.m_type, NTI39132))) {
result_43599 = HEX2B_43617(a_43592, b_43593);
break BeforeRet;
}
else {
if ((isObj(a_43592.m_type, NTI39093) & isObj(b_43593.m_type, NTI39093))) {
result_43599 = HEX2B_43590(a_43592, b_43593);
break BeforeRet;
}
}}}}
} while (false); 
return result_43599;
}
function HEX2D_43643(a_43645, b_43646) {
var result_43647 = null;
result_43647 = newvalue_40517((a_43645.value_39133 - b_43646.value_39130));
return result_43647;
}
function HEX2D_43637(a_43639, b_43640) {
var result_43641 = null;
result_43641 = newvalue_40517((a_43639.value_39130 - b_43640.value_39133));
return result_43641;
}
function HEX2D_43632(a_43634, b_43635) {
var result_43636 = null;
result_43636 = newvalue_40512((a_43634.value_39130 - b_43635.value_39130));
return result_43636;
}
function HEX2D_43649(a_43651, b_43652) {
var result_43653 = null;
result_43653 = newvalue_40517((a_43651.value_39133 - b_43652.value_39133));
return result_43653;
}
function HEX2D_43622(a_43624, b_43625) {
var result_43626 = null;
raiseruntimeexception_39198((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43624).slice(0,-1),makeNimstrLit(" - ").slice(0,-1),HEX24_39604(b_43625)));
return result_43626;
}
function HEX2D_43628(a_43624, b_43625) {
var result_43631 = null;
BeforeRet: do {
if ((isObj(a_43624.m_type, NTI39132) & isObj(b_43625.m_type, NTI39129))) {
result_43631 = HEX2D_43643(a_43624, b_43625);
break BeforeRet;
}
else {
if ((isObj(a_43624.m_type, NTI39129) & isObj(b_43625.m_type, NTI39132))) {
result_43631 = HEX2D_43637(a_43624, b_43625);
break BeforeRet;
}
else {
if ((isObj(a_43624.m_type, NTI39129) & isObj(b_43625.m_type, NTI39129))) {
result_43631 = HEX2D_43632(a_43624, b_43625);
break BeforeRet;
}
else {
if ((isObj(a_43624.m_type, NTI39132) & isObj(b_43625.m_type, NTI39132))) {
result_43631 = HEX2D_43649(a_43624, b_43625);
break BeforeRet;
}
else {
if ((isObj(a_43624.m_type, NTI39093) & isObj(b_43625.m_type, NTI39093))) {
result_43631 = HEX2D_43622(a_43624, b_43625);
break BeforeRet;
}
}}}}
} while (false); 
return result_43631;
}
function HEX2A_43675(a_43677, b_43678) {
var result_43679 = null;
result_43679 = newvalue_40517((a_43677.value_39133 * b_43678.value_39130));
return result_43679;
}
function HEX2A_43669(a_43671, b_43672) {
var result_43673 = null;
result_43673 = newvalue_40517((a_43671.value_39130 * b_43672.value_39133));
return result_43673;
}
function HEX2A_43664(a_43666, b_43667) {
var result_43668 = null;
result_43668 = newvalue_40512((a_43666.value_39130 * b_43667.value_39130));
return result_43668;
}
function HEX2A_43681(a_43683, b_43684) {
var result_43685 = null;
result_43685 = newvalue_40517((a_43683.value_39133 * b_43684.value_39133));
return result_43685;
}
function HEX2A_43654(a_43656, b_43657) {
var result_43658 = null;
raiseruntimeexception_39198((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43656).slice(0,-1),makeNimstrLit(" * ").slice(0,-1),HEX24_39604(b_43657)));
return result_43658;
}
function HEX2A_43660(a_43656, b_43657) {
var result_43663 = null;
BeforeRet: do {
if ((isObj(a_43656.m_type, NTI39132) & isObj(b_43657.m_type, NTI39129))) {
result_43663 = HEX2A_43675(a_43656, b_43657);
break BeforeRet;
}
else {
if ((isObj(a_43656.m_type, NTI39129) & isObj(b_43657.m_type, NTI39132))) {
result_43663 = HEX2A_43669(a_43656, b_43657);
break BeforeRet;
}
else {
if ((isObj(a_43656.m_type, NTI39129) & isObj(b_43657.m_type, NTI39129))) {
result_43663 = HEX2A_43664(a_43656, b_43657);
break BeforeRet;
}
else {
if ((isObj(a_43656.m_type, NTI39132) & isObj(b_43657.m_type, NTI39132))) {
result_43663 = HEX2A_43681(a_43656, b_43657);
break BeforeRet;
}
else {
if ((isObj(a_43656.m_type, NTI39093) & isObj(b_43657.m_type, NTI39093))) {
result_43663 = HEX2A_43654(a_43656, b_43657);
break BeforeRet;
}
}}}}
} while (false); 
return result_43663;
}
function HEX2F_43707(a_43709, b_43710) {
var result_43711 = null;
result_43711 = newvalue_40517((a_43709.value_39133 / b_43710.value_39130));
return result_43711;
}
function HEX2F_43701(a_43703, b_43704) {
var result_43705 = null;
result_43705 = newvalue_40517((a_43703.value_39130 / b_43704.value_39133));
return result_43705;
}
function HEX2F_13810(x_13812, y_13813) {
var result_13814 = 0.0;
result_13814 = (x_13812 / y_13813);
return result_13814;
}
function HEX2F_43696(a_43698, b_43699) {
var result_43700 = null;
result_43700 = newvalue_40517(HEX2F_13810(a_43698.value_39130, b_43699.value_39130));
return result_43700;
}
function HEX2F_43713(a_43715, b_43716) {
var result_43717 = null;
result_43717 = newvalue_40517((a_43715.value_39133 / b_43716.value_39133));
return result_43717;
}
function HEX2F_43686(a_43688, b_43689) {
var result_43690 = null;
raiseruntimeexception_39198((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43688).slice(0,-1),makeNimstrLit(" / ").slice(0,-1),HEX24_39604(b_43689)));
return result_43690;
}
function HEX2F_43692(a_43688, b_43689) {
var result_43695 = null;
BeforeRet: do {
if ((isObj(a_43688.m_type, NTI39132) & isObj(b_43689.m_type, NTI39129))) {
result_43695 = HEX2F_43707(a_43688, b_43689);
break BeforeRet;
}
else {
if ((isObj(a_43688.m_type, NTI39129) & isObj(b_43689.m_type, NTI39132))) {
result_43695 = HEX2F_43701(a_43688, b_43689);
break BeforeRet;
}
else {
if ((isObj(a_43688.m_type, NTI39129) & isObj(b_43689.m_type, NTI39129))) {
result_43695 = HEX2F_43696(a_43688, b_43689);
break BeforeRet;
}
else {
if ((isObj(a_43688.m_type, NTI39132) & isObj(b_43689.m_type, NTI39132))) {
result_43695 = HEX2F_43713(a_43688, b_43689);
break BeforeRet;
}
else {
if ((isObj(a_43688.m_type, NTI39093) & isObj(b_43689.m_type, NTI39093))) {
result_43695 = HEX2F_43686(a_43688, b_43689);
break BeforeRet;
}
}}}}
} while (false); 
return result_43695;
}
function HEX3C_43728(a_43730, b_43731) {
var result_43732 = null;
result_43732 = newvalue_40527((a_43730.value_39130 < b_43731.value_39130));
return result_43732;
}
function HEX3C_43739(a_43741, b_43742) {
var result_43743 = null;
result_43743 = newvalue_40527((a_43741.value_39133 < b_43742.value_39130));
return result_43743;
}
function HEX3C_43733(a_43735, b_43736) {
var result_43737 = null;
result_43737 = newvalue_40527((a_43735.value_39130 < b_43736.value_39133));
return result_43737;
}
function cmpStrings(a_12341, b_12342) {
    if (a_12341 == b_12342) return 0;
    if (!a_12341) return -1;
    if (!b_12342) return 1;
    for (var i = 0; i < a_12341.length-1; ++i) {
      var result = a_12341[i] - b_12342[i];
      if (result != 0) return result;
    }
    return 0;
  }
function HEX3C_43750(a_43752, b_43753) {
var result_43754 = null;
result_43754 = newvalue_40527((cmpStrings(a_43752.value_39136, b_43753.value_39136) < 0));
return result_43754;
}
function HEX3C_43745(a_43747, b_43748) {
var result_43749 = null;
result_43749 = newvalue_40527((a_43747.value_39133 < b_43748.value_39133));
return result_43749;
}
function HEX3C_43718(a_43720, b_43721) {
var result_43722 = null;
raiseruntimeexception_39198((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43720).slice(0,-1),makeNimstrLit(" < ").slice(0,-1),HEX24_39604(b_43721)));
return result_43722;
}
function HEX3C_43724(a_43720, b_43721) {
var result_43727 = null;
BeforeRet: do {
if ((isObj(a_43720.m_type, NTI39129) & isObj(b_43721.m_type, NTI39129))) {
result_43727 = HEX3C_43728(a_43720, b_43721);
break BeforeRet;
}
else {
if ((isObj(a_43720.m_type, NTI39132) & isObj(b_43721.m_type, NTI39129))) {
result_43727 = HEX3C_43739(a_43720, b_43721);
break BeforeRet;
}
else {
if ((isObj(a_43720.m_type, NTI39129) & isObj(b_43721.m_type, NTI39132))) {
result_43727 = HEX3C_43733(a_43720, b_43721);
break BeforeRet;
}
else {
if ((isObj(a_43720.m_type, NTI39135) & isObj(b_43721.m_type, NTI39135))) {
result_43727 = HEX3C_43750(a_43720, b_43721);
break BeforeRet;
}
else {
if ((isObj(a_43720.m_type, NTI39132) & isObj(b_43721.m_type, NTI39132))) {
result_43727 = HEX3C_43745(a_43720, b_43721);
break BeforeRet;
}
else {
if ((isObj(a_43720.m_type, NTI39093) & isObj(b_43721.m_type, NTI39093))) {
result_43727 = HEX3C_43718(a_43720, b_43721);
break BeforeRet;
}
}}}}}
} while (false); 
return result_43727;
}
function HEX3CHEX3D_43765(a_43767, b_43768) {
var result_43769 = null;
result_43769 = newvalue_40527((a_43767.value_39130 <= b_43768.value_39130));
return result_43769;
}
function HEX3CHEX3D_43776(a_43778, b_43779) {
var result_43780 = null;
result_43780 = newvalue_40527((a_43778.value_39133 <= b_43779.value_39130));
return result_43780;
}
function HEX3CHEX3D_43770(a_43772, b_43773) {
var result_43774 = null;
result_43774 = newvalue_40527((a_43772.value_39130 <= b_43773.value_39133));
return result_43774;
}
function HEX3CHEX3D_43787(a_43789, b_43790) {
var result_43791 = null;
result_43791 = newvalue_40527((cmpStrings(a_43789.value_39136, b_43790.value_39136) <= 0));
return result_43791;
}
function HEX3CHEX3D_43782(a_43784, b_43785) {
var result_43786 = null;
result_43786 = newvalue_40527((a_43784.value_39133 <= b_43785.value_39133));
return result_43786;
}
function HEX3CHEX3D_43755(a_43757, b_43758) {
var result_43759 = null;
raiseruntimeexception_39198((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43757).slice(0,-1),makeNimstrLit(" <= ").slice(0,-1),HEX24_39604(b_43758)));
return result_43759;
}
function HEX3CHEX3D_43761(a_43757, b_43758) {
var result_43764 = null;
BeforeRet: do {
if ((isObj(a_43757.m_type, NTI39129) & isObj(b_43758.m_type, NTI39129))) {
result_43764 = HEX3CHEX3D_43765(a_43757, b_43758);
break BeforeRet;
}
else {
if ((isObj(a_43757.m_type, NTI39132) & isObj(b_43758.m_type, NTI39129))) {
result_43764 = HEX3CHEX3D_43776(a_43757, b_43758);
break BeforeRet;
}
else {
if ((isObj(a_43757.m_type, NTI39129) & isObj(b_43758.m_type, NTI39132))) {
result_43764 = HEX3CHEX3D_43770(a_43757, b_43758);
break BeforeRet;
}
else {
if ((isObj(a_43757.m_type, NTI39135) & isObj(b_43758.m_type, NTI39135))) {
result_43764 = HEX3CHEX3D_43787(a_43757, b_43758);
break BeforeRet;
}
else {
if ((isObj(a_43757.m_type, NTI39132) & isObj(b_43758.m_type, NTI39132))) {
result_43764 = HEX3CHEX3D_43782(a_43757, b_43758);
break BeforeRet;
}
else {
if ((isObj(a_43757.m_type, NTI39093) & isObj(b_43758.m_type, NTI39093))) {
result_43764 = HEX3CHEX3D_43755(a_43757, b_43758);
break BeforeRet;
}
}}}}}
} while (false); 
return result_43764;
}
function HEX3DHEX3D_43807(a_43809, b_43810) {
var result_43811 = null;
result_43811 = newvalue_40527((a_43809.value_39130 == b_43810.value_39133));
return result_43811;
}
function HEX3DHEX3D_43802(a_43804, b_43805) {
var result_43806 = null;
result_43806 = newvalue_40527((a_43804.value_39130 == b_43805.value_39130));
return result_43806;
}
function HEX3DHEX3D_43813(a_43815, b_43816) {
var result_43817 = null;
result_43817 = newvalue_40527((a_43815.value_39133 == b_43816.value_39130));
return result_43817;
}
function HEX3DHEX3D_43829(a_43831, b_43832) {
var result_43833 = null;
result_43833 = newvalue_40527((value_39295(a_43831) == value_39295(b_43832)));
return result_43833;
}
function HEX3DHEX3D_43824(a_43826, b_43827) {
var result_43828 = null;
result_43828 = newvalue_40527(eqStrings(a_43826.value_39136, b_43827.value_39136));
return result_43828;
}
function HEX3DHEX3D_43819(a_43821, b_43822) {
var result_43823 = null;
result_43823 = newvalue_40527((a_43821.value_39133 == b_43822.value_39133));
return result_43823;
}
function HEX3DHEX3D_43792(a_43794, b_43795) {
var result_43796 = null;
raiseruntimeexception_39198((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43794).slice(0,-1),makeNimstrLit(" == ").slice(0,-1),HEX24_39604(b_43795)));
return result_43796;
}
function HEX3DHEX3D_43798(a_43794, b_43795) {
var result_43801 = null;
BeforeRet: do {
if ((isObj(a_43794.m_type, NTI39129) & isObj(b_43795.m_type, NTI39132))) {
result_43801 = HEX3DHEX3D_43807(a_43794, b_43795);
break BeforeRet;
}
else {
if ((isObj(a_43794.m_type, NTI39129) & isObj(b_43795.m_type, NTI39129))) {
result_43801 = HEX3DHEX3D_43802(a_43794, b_43795);
break BeforeRet;
}
else {
if ((isObj(a_43794.m_type, NTI39132) & isObj(b_43795.m_type, NTI39129))) {
result_43801 = HEX3DHEX3D_43813(a_43794, b_43795);
break BeforeRet;
}
else {
if ((isObj(a_43794.m_type, NTI39138) & isObj(b_43795.m_type, NTI39138))) {
result_43801 = HEX3DHEX3D_43829(a_43794, b_43795);
break BeforeRet;
}
else {
if ((isObj(a_43794.m_type, NTI39135) & isObj(b_43795.m_type, NTI39135))) {
result_43801 = HEX3DHEX3D_43824(a_43794, b_43795);
break BeforeRet;
}
else {
if ((isObj(a_43794.m_type, NTI39132) & isObj(b_43795.m_type, NTI39132))) {
result_43801 = HEX3DHEX3D_43819(a_43794, b_43795);
break BeforeRet;
}
else {
if ((isObj(a_43794.m_type, NTI39093) & isObj(b_43795.m_type, NTI39093))) {
result_43801 = HEX3DHEX3D_43792(a_43794, b_43795);
break BeforeRet;
}
}}}}}}
} while (false); 
return result_43801;
}
function HEX26_43849(a_43851, b_43852) {
var result_43853 = null;
BeforeRet: do {
add_40556(a_43851, b_43852.nodes_39152);
result_43853 = a_43851;
break BeforeRet;
} while (false); 
return result_43853;
}
function HEX26_43844(a_43846, b_43847) {
var result_43848 = null;
result_43848 = newvalue_40522((a_43846.value_39136.slice(0,-1)).concat(b_43847.value_39136));
return result_43848;
}
function HEX26_43834(a_43836, b_43837) {
var result_43838 = null;
raiseruntimeexception_39198((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43836).slice(0,-1),makeNimstrLit(" & ").slice(0,-1),HEX24_39604(b_43837)));
return result_43838;
}
function HEX26_43840(a_43836, b_43837) {
var result_43843 = null;
BeforeRet: do {
if ((isObj(a_43836.m_type, NTI39150) & isObj(b_43837.m_type, NTI39150))) {
result_43843 = HEX26_43849(a_43836, b_43837);
break BeforeRet;
}
else {
if ((isObj(a_43836.m_type, NTI39135) & isObj(b_43837.m_type, NTI39135))) {
result_43843 = HEX26_43844(a_43836, b_43837);
break BeforeRet;
}
else {
if ((isObj(a_43836.m_type, NTI39093) & isObj(b_43837.m_type, NTI39093))) {
result_43843 = HEX26_43834(a_43836, b_43837);
break BeforeRet;
}
}}
} while (false); 
return result_43843;
}
function doreturn_43896(self_43898, ni_43899) {
ni_43899.currentactivation_43022 = self_43898.body_43047.parent_43039;
}
function doreturn_43880(self_43882, ni_43883) {
ni_43883.currentactivation_43022 = self_43882.parent_43045;
if (!((ni_43883.currentactivation_43022 === null))) {
ni_43883.currentactivation_43022.returned_43044 = true;
}

}
function doreturn_43894(self_43882, ni_43883) {
if (isObj(self_43882.m_type, NTI43052)) {
doreturn_43896(self_43882, ni_43883);
}
else {
if (isObj(self_43882.m_type, NTI43041)) {
doreturn_43880(self_43882, ni_43883);
}
}
}
function makebinding_43975(self_43977, key_43978, val_43979) {
var result_43980 = null;
result_43980 = makebinding_39886(getlocals_43521(self_43977), key_43978, val_43979);
return result_43980;
}
function makebinding_43964(self_43966, key_43967, val_43968) {
var result_43969 = null;
return result_43969;
}
function makebinding_43971(self_43966, key_43967, val_43968) {
var result_43974 = null;
BeforeRet: do {
if (isObj(self_43966.m_type, NTI43049)) {
result_43974 = makebinding_43975(self_43966, key_43967, val_43968);
break BeforeRet;
}
else {
if (isObj(self_43966.m_type, NTI43041)) {
result_43974 = makebinding_43964(self_43966, key_43967, val_43968);
break BeforeRet;
}
}
} while (false); 
return result_43974;
}
function caneval_44573(self_44575, ni_44576) {
var result_44577 = false;
result_44577 = true;
return result_44577;
}
function caneval_44568(self_44570, ni_44571) {
var result_44572 = false;
BeforeRet: do {
result_44572 = caneval_44550(self_44570.val_39196, ni_44571);
break BeforeRet;
} while (false); 
return result_44572;
}
function caneval_44554(self_44556, ni_44557) {
var result_44558 = false;
BeforeRet: do {
var binding_44559 = lookup_43924(ni_44557, self_44556);
if ((binding_44559 === null)) {
result_44558 = false;
break BeforeRet;
}
else {
result_44558 = caneval_44550(binding_44559.val_39196, ni_44557);
break BeforeRet;
}

} while (false); 
return result_44558;
}
function caneval_44578(self_44580, ni_44581) {
var result_44582 = false;
result_44582 = true;
return result_44582;
}
function caneval_44593(self_44595, ni_44596) {
var result_44597 = false;
result_44597 = true;
return result_44597;
}
function caneval_44588(self_44590, ni_44591) {
var result_44592 = false;
result_44592 = true;
return result_44592;
}
function caneval_44583(self_44585, ni_44586) {
var result_44587 = false;
result_44587 = true;
return result_44587;
}
function caneval_44598(self_44600, ni_44601) {
var result_44602 = false;
result_44602 = true;
return result_44602;
}
function caneval_44544(self_44546, ni_44547) {
var result_44548 = false;
result_44548 = false;
return result_44548;
}
function caneval_44550(self_44546, ni_44547) {
var result_44553 = false;
BeforeRet: do {
if (isObj(self_44546.m_type, NTI43037)) {
result_44553 = caneval_44573(self_44546, ni_44547);
break BeforeRet;
}
else {
if (isObj(self_44546.m_type, NTI39194)) {
result_44553 = caneval_44568(self_44546, ni_44547);
break BeforeRet;
}
else {
if (isObj(self_44546.m_type, NTI39105)) {
result_44553 = caneval_44554(self_44546, ni_44547);
break BeforeRet;
}
else {
if (isObj(self_44546.m_type, NTI43032)) {
result_44553 = caneval_44578(self_44546, ni_44547);
break BeforeRet;
}
else {
if (isObj(self_44546.m_type, NTI39155)) {
result_44553 = caneval_44593(self_44546, ni_44547);
break BeforeRet;
}
else {
if (isObj(self_44546.m_type, NTI39119)) {
result_44553 = caneval_44588(self_44546, ni_44547);
break BeforeRet;
}
else {
if (isObj(self_44546.m_type, NTI39111)) {
result_44553 = caneval_44583(self_44546, ni_44547);
break BeforeRet;
}
else {
if (isObj(self_44546.m_type, NTI39159)) {
result_44553 = caneval_44598(self_44546, ni_44547);
break BeforeRet;
}
else {
if (isObj(self_44546.m_type, NTI39093)) {
result_44553 = caneval_44544(self_44546, ni_44547);
break BeforeRet;
}
}}}}}}}}
} while (false); 
return result_44553;
}
function dump_45033(self_45035) {
rawEcho(makeNimstrLit("FUNKACTIVATION"));
rawEcho(HEX24_39604(self_45035.body_43047));
if ((self_45035.pos_43046 < len_43456(self_45035))) {
rawEcho((makeNimstrLit("POS(").slice(0,-1)).concat(cstrToNimstr((self_45035.pos_43046)+"").slice(0,-1),makeNimstrLit("): ").slice(0,-1),HEX24_39604(HEX5BHEX5D_43426(self_45035.body_43047, self_45035.pos_43046))));
}

rawEcho(HEX24_39604(self_45035.locals_43050));
}
function dump_45024(self_45026) {
rawEcho(makeNimstrLit("CURLYACTIVATION"));
rawEcho(HEX24_39604(self_45026.body_43047));
if ((self_45026.pos_43046 < len_43456(self_45026))) {
rawEcho((makeNimstrLit("POS(").slice(0,-1)).concat(cstrToNimstr((self_45026.pos_43046)+"").slice(0,-1),makeNimstrLit("): ").slice(0,-1),HEX24_39604(HEX5BHEX5D_43426(self_45026.body_43047, self_45026.pos_43046))));
}

}
function dump_45015(self_45017) {
rawEcho(makeNimstrLit("PARENACTIVATION"));
rawEcho(HEX24_39604(self_45017.body_43047));
if ((self_45017.pos_43046 < len_43456(self_45017))) {
rawEcho((makeNimstrLit("POS(").slice(0,-1)).concat(cstrToNimstr((self_45017.pos_43046)+"").slice(0,-1),makeNimstrLit("): ").slice(0,-1),HEX24_39604(HEX5BHEX5D_43426(self_45017.body_43047, self_45017.pos_43046))));
}

}
function dump_45044(self_45046) {
rawEcho(makeNimstrLit("BLOKACTIVATION"));
rawEcho(HEX24_39604(self_45046.body_43047));
if ((self_45046.pos_43046 < len_43456(self_45046))) {
rawEcho((makeNimstrLit("POS(").slice(0,-1)).concat(cstrToNimstr((self_45046.pos_43046)+"").slice(0,-1),makeNimstrLit("): ").slice(0,-1),HEX24_39604(HEX5BHEX5D_43426(self_45046.body_43047, self_45046.pos_43046))));
}

rawEcho(HEX24_39604(self_45046.locals_43050));
}
function dump_45003(self_45005) {
rawEcho(makeNimstrLit("ACTIVATION"));
rawEcho(HEX24_39604(self_45005.body_43047));
if ((self_45005.pos_43046 < len_43456(self_45005))) {
rawEcho((makeNimstrLit("POS(").slice(0,-1)).concat(cstrToNimstr((self_45005.pos_43046)+"").slice(0,-1),makeNimstrLit("): ").slice(0,-1),HEX24_39604(HEX5BHEX5D_43426(self_45005.body_43047, self_45005.pos_43046))));
}

}
function dump_45013(self_45005) {
if (isObj(self_45005.m_type, NTI43052)) {
dump_45033(self_45005);
}
else {
if (isObj(self_45005.m_type, NTI43056)) {
dump_45024(self_45005);
}
else {
if (isObj(self_45005.m_type, NTI43054)) {
dump_45015(self_45005);
}
else {
if (isObj(self_45005.m_type, NTI43049)) {
dump_45044(self_45005);
}
else {
if (isObj(self_45005.m_type, NTI43041)) {
dump_45003(self_45005);
}
}}}}
}
