# Copied from https://github.com/nim-lang/Nim/wiki/TravisCI
#sudo: required
#dist: trusty
language: c
env:
  # Build and test against the master and devel branches of Nim
  - BRANCH=master
  - BRANCH=devel
compiler:
  # Build and test using both gcc and clang
  - gcc
  - clang
matrix:
  allow_failures:
    # Ignore failures when building against the devel Nim branch
    - env: BRANCH=devel
  fast_finish: true
before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq 
install:
  - |
    # Too old, even in Trusty, we need r131: sudo apt-get install liblz4-dev
    # We want a new GCC 4.8 instead of 4.6.x
    # install gcc-4.8 with c++11 support: https://github.com/travis-ci-tester/travis-test-gcc-cxx-11
    sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    sudo apt-get update
    sudo apt-get install g++-4.8
    sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 90
    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 90    # Install Nim

    # Install LZ4 r131
    wget https://github.com/Cyan4973/lz4/archive/r131.tar.gz
    tar xzf r131.tar.gz
    cd lz4-r131
    sudo make install
    sudo ldconfig

    # Bootstrap Nim and install Nimble
    if [ ! -x nim-$BRANCH/bin/nim ]; then
      git clone -b $BRANCH --depth 1 git://github.com/nim-lang/nim nim-$BRANCH/
      cd nim-$BRANCH
      git clone -b $BRANCH --depth 1 git://github.com/nim-lang/csources csources/
      cd csources
      sh build.sh
      cd ..
      rm -rf csources
      bin/nim c koch
      ./koch boot -d:release
    else
      cd nim-$BRANCH
      git fetch origin
      if ! git merge FETCH_HEAD | grep "Already up-to-date"; then
        bin/nim c koch
        ./koch boot -d:release
      fi
    fi
    cd ..
    # So we can see nim compiler
    export PATH=$PWD/nim-$BRANCH/bin:$PATH
    export PATH=$HOME/.nimble/bin:$PATH
    # Install nimble
    if [ ! -x $HOME/.nimble/bin/nimble ]; then
      git clone --depth 1 https://github.com/nim-lang/nimble.git
      cd nimble
      nim -d:release c -r src/nimble -y install
      cd ..
    else
      nimble install nimble  
    fi
before_script:
    - cd $TRAVIS_BUILD_DIR
    - pwd && ls
    - nimble refresh
script:
    # Let nimble get dependencies
    - nimble c tests/all
    # Test
    - cd tests && ./run.sh
    # Optional: build docs.
    # nim doc --docSeeSrcUrl:https://github.com/AUTHOR/MYPROJECT/blob/master --project MYFILE.nim
cache:
  directories:
    - nim-master
    - nim-devel
branches:
  except:
    - gh-pages
