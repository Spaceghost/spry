/* Generated by the Nim Compiler v0.13.1 */
/*   (c) 2015 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI42613 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42615 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42611 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3460 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3426 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39070 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI42608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42617 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39062 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI42600 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42569 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI42596 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39127 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI39130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39133 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39074 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI42563 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42591 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39142 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39144 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39140 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39136 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39138 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39146 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39189 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI39159 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39192 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39072 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI29002 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI39171 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI39168 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI39165 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39087 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39085 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39082 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39089 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39157 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39153 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39105 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39107 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39101 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39111 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39115 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39109 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39097 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39117 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39002 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39094 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39099 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39103 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39122 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI39120 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI39119 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI39066 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI39091 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39014 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI39149 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI39148 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39155 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3485 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3436 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
var NNI3436 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3436.node = NNI3436;
NTI3485.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3485, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3436.base = NTI3424;
NTI3440.base = NTI3436;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3438.base = NTI3436;
var NNI39155 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39155.node = NNI39155;
NTI39066.base = NTI39155;
var NNI39091 = {kind: 1, offset: "tags_39092", len: 0, typ: NTI39066, name: "tags", sons: null};
NTI39091.node = NNI39091;
NTI39091.base = NTI3408;
NTI39014.base = NTI39091;
NTI39149.base = NTI39014;
var NNI39148 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodes_39150", len: 0, typ: NTI39149, name: "nodes", sons: null}, 
{kind: 1, offset: "pos_39151", len: 0, typ: NTI104, name: "pos", sons: null}]};
NTI39148.node = NNI39148;
NTI39148.base = NTI39091;
NTI39155.base = NTI39148;
NTI39120.base = NTI138;
NTI39122.base = NTI39014;
var NNI39119 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "keys_39121", len: 0, typ: NTI39120, name: "keys", sons: null}, 
{kind: 1, offset: "args_39123", len: 0, typ: NTI39122, name: "args", sons: null}]};
NTI39119.node = NNI39119;
NTI39119.base = NTI39091;
var NNI39103 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39103.node = NNI39103;
var NNI39099 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39099.node = NNI39099;
var NNI39094 = {kind: 1, offset: "word_39095", len: 0, typ: NTI138, name: "word", sons: null};
NTI39094.node = NNI39094;
NTI39094.base = NTI39091;
NTI39099.base = NTI39094;
NTI39103.base = NTI39099;
var NNI39002 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39002.node = NNI39002;
NTI39002.base = NTI3424;
var NNI39117 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39117.node = NNI39117;
var NNI39097 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39097.node = NNI39097;
NTI39097.base = NTI39094;
NTI39117.base = NTI39097;
var NNI39109 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39109.node = NNI39109;
NTI39109.base = NTI39099;
var NNI39115 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39115.node = NNI39115;
NTI39115.base = NTI39097;
var NNI39113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39113.node = NNI39113;
NTI39113.base = NTI39097;
var NNI39111 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39111.node = NNI39111;
NTI39111.base = NTI39097;
var NNI39101 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39101.node = NNI39101;
NTI39101.base = NTI39094;
var NNI39107 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39107.node = NNI39107;
NTI39107.base = NTI39099;
var NNI39105 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39105.node = NNI39105;
NTI39105.base = NTI39099;
var NNI39153 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39153.node = NNI39153;
NTI39153.base = NTI39148;
var NNI39157 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39157.node = NNI39157;
NTI39157.base = NTI39148;
var NNI39089 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39089.node = NNI39089;
var NNI39082 = {kind: 1, offset: "token_39083", len: 0, typ: NTI138, name: "token", sons: null};
NTI39082.node = NNI39082;
NTI39082.base = NTI3408;
NTI39089.base = NTI39082;
var NNI39085 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39085.node = NNI39085;
NTI39085.base = NTI39082;
var NNI39087 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39087.node = NNI39087;
NTI39087.base = NTI39082;
var NNI39192 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key_39193", len: 0, typ: NTI39014, name: "key", sons: null}, 
{kind: 1, offset: "val_39194", len: 0, typ: NTI39014, name: "val", sons: null}]};
NTI39192.node = NNI39192;
NTI39192.base = NTI39091;
NTI39072.base = NTI39192;
var NNI39171 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI29002, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI39014, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI39072, name: "Field3", sons: null}]};
NTI39171.node = NNI39171;
NTI39168.base = NTI39171;
var NNI39165 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data_39181", len: 0, typ: NTI39168, name: "data", sons: null}, 
{kind: 1, offset: "counter_39184", len: 0, typ: NTI104, name: "counter", sons: null}, 
{kind: 1, offset: "first_39186", len: 0, typ: NTI104, name: "first", sons: null}, 
{kind: 1, offset: "last_39188", len: 0, typ: NTI104, name: "last", sons: null}]};
NTI39165.node = NNI39165;
NTI39189.base = NTI39165;
var NNI39159 = {kind: 1, offset: "bindings_39190", len: 0, typ: NTI39189, name: "bindings", sons: null};
NTI39159.node = NNI39159;
var NNI39146 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39146.node = NNI39146;
NTI39146.base = NTI39091;
NTI39159.base = NTI39146;
var NNI39138 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39138.node = NNI39138;
var NNI39136 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39136.node = NNI39136;
var NNI39125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39125.node = NNI39125;
NTI39125.base = NTI39091;
NTI39136.base = NTI39125;
NTI39138.base = NTI39136;
var NNI39140 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39140.node = NNI39140;
NTI39140.base = NTI39136;
var NNI39144 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39144.node = NNI39144;
NTI39144.base = NTI39125;
var NNI39142 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39142.node = NNI39142;
NTI39142.base = NTI39125;
var NNI42591 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "prok_42592", len: 0, typ: NTI42563, name: "prok", sons: null}, 
{kind: 1, offset: "infix_42593", len: 0, typ: NTI130, name: "infix", sons: null}, 
{kind: 1, offset: "arity_42594", len: 0, typ: NTI104, name: "arity", sons: null}]};
NTI42591.node = NNI42591;
NTI42591.base = NTI39091;
var NNI39074 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI39074.node = NNI39074;
NTI39074.base = NTI3424;
var NNI39133 = {kind: 1, offset: "value_39134", len: 0, typ: NTI138, name: "value", sons: null};
NTI39133.node = NNI39133;
NTI39133.base = NTI39125;
var NNI39130 = {kind: 1, offset: "value_39131", len: 0, typ: NTI124, name: "value", sons: null};
NTI39130.node = NNI39130;
NTI39130.base = NTI39125;
var NNI39127 = {kind: 1, offset: "value_39128", len: 0, typ: NTI104, name: "value", sons: null};
NTI39127.node = NNI39127;
NTI39127.base = NTI39125;
var NNI3448 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3448.node = NNI3448;
var NNI3446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3446.node = NNI3446;
NTI3446.base = NTI3424;
NTI3448.base = NTI3446;
NTI39062.base = NTI39148;
var NNI42600 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "last_42601", len: 0, typ: NTI39014, name: "last", sons: null}, 
{kind: 1, offset: "infixarg_42602", len: 0, typ: NTI39014, name: "infixArg", sons: null}, 
{kind: 1, offset: "returned_42603", len: 0, typ: NTI130, name: "returned", sons: null}, 
{kind: 1, offset: "parent_42604", len: 0, typ: NTI42569, name: "parent", sons: null}, 
{kind: 1, offset: "pos_42605", len: 0, typ: NTI104, name: "pos", sons: null}, 
{kind: 1, offset: "body_42606", len: 0, typ: NTI39062, name: "body", sons: null}]};
NTI42600.node = NNI42600;
NTI42600.base = NTI39091;
NTI42569.base = NTI42600;
var NNI42596 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "infix_42597", len: 0, typ: NTI130, name: "infix", sons: null}, 
{kind: 1, offset: "parent_42598", len: 0, typ: NTI42569, name: "parent", sons: null}]};
NTI42596.node = NNI42596;
NTI42596.base = NTI39155;
var NNI42617 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI42617.node = NNI42617;
NTI39070.base = NTI39159;
var NNI42608 = {kind: 1, offset: "locals_42609", len: 0, typ: NTI39070, name: "locals", sons: null};
NTI42608.node = NNI42608;
NTI42608.base = NTI42600;
NTI42617.base = NTI42608;
var NNI3428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3428.node = NNI3428;
var NNI3426 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3426.node = NNI3426;
NTI3426.base = NTI3424;
NTI3428.base = NTI3426;
var NNI3460 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3460.node = NNI3460;
NTI3460.base = NTI3424;
var NNI42611 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI42611.node = NNI42611;
NTI42611.base = NTI42608;
var NNI42615 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI42615.node = NNI42615;
NTI42615.base = NTI42608;
var NNI42613 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI42613.node = NNI42613;
NTI42613.base = NTI42600;
var nimvm_5551 = false;
var nim_program_result = 0;
var globalraisehook_9813 = [null];
var localraisehook_9818 = [null];
var outofmemhook_9821 = [null];
function makeNimstrLit(c_12291) {
  var ln = c_12291.length;
  var result = new Array(ln + 1);
  var i = 0;
  for (; i < ln; ++i) {
    result[i] = c_12291.charCodeAt(i);
  }
  result[i] = 0; // terminating zero
  return result;
  }
function eqStrings(a_12351, b_12352) {
    if (a_12351 == b_12352) return true;
    if ((!a_12351) || (!b_12352)) return false;
    var alen = a_12351.length;
    if (alen != b_12352.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_12351[i] != b_12352[i]) return false;
    return true;
  }
function add_9836(x_9839, x_9839_Idx, y_9840) {
      var len = x_9839[0].length-1;
      for (var i = 0; i < y_9840.length; ++i) {
        x_9839[0][len] = y_9840.charCodeAt(i);
        ++len;
      }
      x_9839[0][len] = 0
    }
function toJSStr(s_12299) {
    var len = s_12299.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = s_12299[i].toString(16);
      }
      else if (s_12299[i] < 128)
        asciiPart[i] = fcc(s_12299[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  }
function unhandledException(e_11658) {
var Tmp1;
var buf_11801 = /**/[makeNimstrLit("")];
if (!!(eqStrings(e_11658.message, null))) Tmp1 = false; else {Tmp1 = !((e_11658.message[0] == 0)); }if (Tmp1) {
if (buf_11801[0] != null) { buf_11801[0] = (buf_11801[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_11801[0] = makeNimstrLit("Error: unhandled exception: ");};
if (buf_11801[0] != null) { buf_11801[0] = (buf_11801[0].slice(0, -1)).concat(e_11658.message); } else { buf_11801[0] = e_11658.message;};
}
else {
if (buf_11801[0] != null) { buf_11801[0] = (buf_11801[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_11801[0] = makeNimstrLit("Error: unhandled exception");};
}

if (buf_11801[0] != null) { buf_11801[0] = (buf_11801[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_11801[0] = makeNimstrLit(" [");};
add_9836(buf_11801, 0, e_11658.name);
if (buf_11801[0] != null) { buf_11801[0] = (buf_11801[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_11801[0] = makeNimstrLit("]\x0A");};
alert(toJSStr(buf_11801[0]));
}
function raiseException(e_11806, ename_11807) {
e_11806.name = ename_11807;
if ((excHandler == 0)) {
unhandledException(e_11806);
}

throw e_11806;}
function raiseOverflow() {
var e_12211 = null;
e_12211 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_12211.message = makeNimstrLit("over- or underflow");
raiseException(e_12211, "OverflowError");
}
function raiseDivByZero() {
var e_12227 = null;
e_12227 = {m_type: NTI3438, parent: null, name: null, message: null, trace: null};
e_12227.message = makeNimstrLit("division by zero");
raiseException(e_12227, "DivByZeroError");
}
var objectid_29233 = /**/[0];
function newseq_39386(len_39390) {
var result_39392 = null;
result_39392 = new Array(len_39390); for (var i=0;i<len_39390;++i) {result_39392[i]=null;}return result_39392;
}
var parserexts_39411 = /**/[newseq_39386(0)];
function newseq_40372(len_40376) {
var result_40378 = null;
result_40378 = new Array(len_40376); for (var i=0;i<len_40376;++i) {result_40378[i]=null;}return result_40378;
}
function newblok_40404() {
var result_40406 = null;
result_40406 = {nodes_39150: newseq_40372(0), m_type: NTI39155, pos_39151: 0, tags_39092: null};
return result_40406;
}
function isObj(obj_13139, subclass_13140) {
var result_13141 = false;
BeforeRet: do {
var x_13142 = obj_13139;
if ((x_13142 == subclass_13140)) {
result_13141 = true;
break BeforeRet;
}

L1: do {
L2: while (true) {
if (!!((x_13142 == subclass_13140))) break L2;
if ((x_13142 == null)) {
result_13141 = false;
break BeforeRet;
}

x_13142 = x_13142.base;
}
} while(false);
result_13141 = true;
break BeforeRet;
} while (false); 
return result_13141;
}
function currentkeyword_42137(self_42139) {
var result_42140 = null;
BeforeRet: do {
if (isObj(self_42139.stack_39078[(self_42139.stack_39078 != null ? (self_42139.stack_39078.length-1) : -1)].m_type, NTI39119)) {
result_42140 = self_42139.stack_39078[(self_42139.stack_39078 != null ? (self_42139.stack_39078.length-1) : -1)];
break BeforeRet;
}
else {
result_42140 = null;
break BeforeRet;
}

} while (false); 
return result_42140;
}
function add_40542(self_40544, n_40545) {
if (self_40544.nodes_39150 != null) { self_40544.nodes_39150.push(n_40545); } else { self_40544.nodes_39150 = [n_40545]; };
}
function inbalance_42057(self_42059) {
var result_42060 = false;
BeforeRet: do {
result_42060 = ((self_42059.args_39123 != null ? self_42059.args_39123.length : 0) == (self_42059.keys_39121 != null ? self_42059.keys_39121.length : 0));
break BeforeRet;
} while (false); 
return result_42060;
}
function pop_42159(s_42165, s_42165_Idx) {
var result_42166 = null;
var L_42175 = ((s_42165[s_42165_Idx] != null ? s_42165[s_42165_Idx].length : 0) - 1);
result_42166 = s_42165[s_42165_Idx][L_42175];
s_42165[s_42165_Idx].length = L_42175;
return result_42166;
}
function newevalword_40273(s_40275) {
var result_40276 = null;
result_40276 = {word_39095: s_40275, m_type: NTI39103, tags_39092: null};
return result_40276;
}
function mnewString(len_12303) {
    var result = new Array(len_12303+1);
    result[0] = 0;
    result[len_12303] = 0;
    return result;
  }
function nsuJoin(a_23651) {
var result_23652 = null;
if ((0 < (a_23651 != null ? a_23651.length : 0))) {
var L_23660 = 0;
L1: do {
var i_23670 = 0;
var HEX3Atmp_23691 = 0;
HEX3Atmp_23691 = (a_23651 != null ? (a_23651.length-1) : -1);
var res_23694 = 0;
L2: do {
L3: while (true) {
if (!(res_23694 <= HEX3Atmp_23691)) break L3;
i_23670 = res_23694;
L_23660 += (a_23651[i_23670] != null ? a_23651[i_23670].length-1 : 0);
res_23694 += 1;
}
} while(false);
} while(false);
result_23652 = mnewString(0);
L4: do {
var i_23689 = 0;
var HEX3Atmp_23699 = 0;
HEX3Atmp_23699 = (a_23651 != null ? (a_23651.length-1) : -1);
var res_23702 = 0;
L5: do {
L6: while (true) {
if (!(res_23702 <= HEX3Atmp_23699)) break L6;
i_23689 = res_23702;
if (result_23652 != null) { result_23652 = (result_23652.slice(0, -1)).concat(a_23651[i_23689]); } else { result_23652 = a_23651[i_23689];};
res_23702 += 1;
}
} while(false);
} while(false);
}
else {
result_23652 = makeNimstrLit("");
}

return result_23652;
}
function add_40562(x_40568, x_40568_Idx, y_40571) {
var xl_40580 = (x_40568[x_40568_Idx] != null ? x_40568[x_40568_Idx].length : 0);
x_40568[x_40568_Idx].length = (xl_40580 + (y_40571 != null ? y_40571.length : 0));
L1: do {
var i_40607 = 0;
var HEX3Atmp_40609 = 0;
HEX3Atmp_40609 = (y_40571 != null ? (y_40571.length-1) : -1);
var res_40612 = 0;
L2: do {
L3: while (true) {
if (!(res_40612 <= HEX3Atmp_40609)) break L3;
i_40607 = res_40612;
x_40568[x_40568_Idx][(xl_40580 + i_40607)] = y_40571[i_40607];
res_40612 += 1;
}
} while(false);
} while(false);
}
function producenodes_42077(self_42079) {
var result_42081 = [null];
result_42081[0] = newseq_40372(0);
if (result_42081[0] != null) { result_42081[0].push(newevalword_40273(nsuJoin(self_42079.keys_39121))); } else { result_42081[0] = [newevalword_40273(nsuJoin(self_42079.keys_39121))]; };
add_40562(result_42081, 0, self_42079.args_39123);
return result_42081[0];
}
function delete_41078(x_41084, x_41084_Idx, i_41086) {
x_41084[x_41084_Idx].splice(i_41086, 1);}
function removelast_41074(self_41076) {
delete_41078(self_41076, "nodes_39150", (self_41076.nodes_39150 != null ? (self_41076.nodes_39150.length-1) : -1));
}
function add_40556(self_40558, n_40560) {
add_40562(self_40558, "nodes_39150", n_40560);
}
function closekeyword_42143(self_42145) {
var keyword_42193 = currentkeyword_42137(self_42145);
pop_42159(self_42145, "stack_39078");
var nodes_42204 = producenodes_42077(keyword_42193);
removelast_41074(self_42145.stack_39078[(self_42145.stack_39078 != null ? (self_42145.stack_39078.length-1) : -1)]);
add_40556(self_42145.stack_39078[(self_42145.stack_39078 != null ? (self_42145.stack_39078.length-1) : -1)], nodes_42204);
}
function doaddnode_42205(self_42207, node_42208) {
var keyword_42209 = currentkeyword_42137(self_42207);
if ((keyword_42209 === null)) {
add_40542(self_42207.stack_39078[(self_42207.stack_39078 != null ? (self_42207.stack_39078.length-1) : -1)], node_42208);
}
else {
if (inbalance_42057(keyword_42209)) {
closekeyword_42143(self_42207);
doaddnode_42205(self_42207, node_42208);
}
else {
if (keyword_42209.args_39123 != null) { keyword_42209.args_39123.push(node_42208); } else { keyword_42209.args_39123 = [node_42208]; };
}

}

}
function push_42228(self_42230, n_42231) {
if (!(((self_42230.stack_39078 != null ? self_42230.stack_39078.length : 0) == 0))) {
doaddnode_42205(self_42230, n_42231);
}

if (self_42230.stack_39078 != null) { self_42230.stack_39078.push(n_42231); } else { self_42230.stack_39078 = [n_42231]; };
}
function raiseparseexception_40076(msg_40078) {
var e_40082 = null;
e_40082 = {m_type: NTI39002, parent: null, name: null, message: null, trace: null};
e_40082.message = msg_40078;
raiseException(e_40082, "ParseException");
}
function newgetargword_40313(s_40315) {
var result_40316 = null;
result_40316 = {word_39095: s_40315, m_type: NTI39117, tags_39092: null};
return result_40316;
}
function HEX5BHEX5D_13847(s_13849, x_13859) {
var result_13860 = null;
result_13860 = (s_13849.slice(x_13859.a_13856, (x_13859.b_13858)+1).concat(0));
return result_13860;
}
function HEX2EHEX2E_25611(a_25615, b_25617) {
var result_25619 = {a_13856: 0, b_13858: 0};
result_25619.a_13856 = a_25615;
result_25619.b_13858 = b_25617;
return result_25619;
}
function newevalargword_40308(s_40310) {
var result_40311 = null;
result_40311 = {word_39095: s_40310, m_type: NTI39109, tags_39092: null};
return result_40311;
}
function newgetouterword_40298(s_40300) {
var result_40301 = null;
result_40301 = {word_39095: s_40300, m_type: NTI39115, tags_39092: null};
return result_40301;
}
function newgetselfword_40293(s_40295) {
var result_40296 = null;
result_40296 = {word_39095: s_40295, m_type: NTI39113, tags_39092: null};
return result_40296;
}
function newgetword_40288(s_40290) {
var result_40291 = null;
result_40291 = {word_39095: s_40290, m_type: NTI39111, tags_39092: null};
return result_40291;
}
function newlitword_40303(s_40305) {
var result_40306 = null;
result_40306 = {word_39095: s_40305, m_type: NTI39101, tags_39092: null};
return result_40306;
}
function newseq_40334(len_40338) {
var result_40340 = null;
result_40340 = new Array(len_40338); for (var i=0;i<len_40338;++i) {result_40340[i]=null;}return result_40340;
}
function newkeyword_40318() {
var result_40320 = null;
result_40320 = {keys_39121: newseq_40334(0), args_39123: newseq_40372(0), m_type: NTI39119, tags_39092: null};
return result_40320;
}
function addkey_42029(self_42031, key_42032) {
if (self_42031.keys_39121 != null) { self_42031.keys_39121.push(key_42032); } else { self_42031.keys_39121 = [key_42032]; };
}
function newevalouterword_40283(s_40285) {
var result_40286 = null;
result_40286 = {word_39095: s_40285, m_type: NTI39107, tags_39092: null};
return result_40286;
}
function newevalselfword_40278(s_40280) {
var result_40281 = null;
result_40281 = {word_39095: s_40280, m_type: NTI39105, tags_39092: null};
return result_40281;
}
function newword_42251(self_42253, token_42254) {
var Tmp1;
var Tmp2;
var Tmp3;
var result_42255 = null;
BeforeRet: do {
var len_42256 = (token_42254 != null ? token_42254.length-1 : 0);
var first_42257 = token_42254[0];
if (!(first_42257 == 58)) Tmp1 = false; else {Tmp1 = (1 < len_42256); }if (Tmp1) {
if ((token_42254[1] == 94)) {
if (((token_42254 != null ? token_42254.length-1 : 0) < 3)) {
raiseparseexception_40076(makeNimstrLit("Malformed get argword, missing at least 1 character"));
}

result_42255 = newgetargword_40313(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(2, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}
else {
result_42255 = newevalargword_40308(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(1, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}

}

if (!(first_42257 == 94)) Tmp2 = false; else {Tmp2 = (1 < len_42256); }if (Tmp2) {
if ((token_42254[1] == 46)) {
if ((2 < len_42256)) {
if ((token_42254[2] == 46)) {
if ((3 < len_42256)) {
result_42255 = newgetouterword_40298(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(3, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}
else {
raiseparseexception_40076(makeNimstrLit("Malformed parent lookup word, missing at least 1 character"));
}

}
else {
result_42255 = newgetselfword_40293(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(2, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}

}
else {
raiseparseexception_40076(makeNimstrLit("Malformed local lookup word, missing at least 1 character"));
}

}
else {
result_42255 = newgetword_40288(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(1, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}

}

if ((first_42257 == 39)) {
if ((len_42256 < 2)) {
raiseparseexception_40076(makeNimstrLit("Malformed literal word, missing at least 1 character"));
}
else {
result_42255 = newlitword_40303(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(1, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}

}

if (!(1 < len_42256)) Tmp3 = false; else {Tmp3 = (token_42254[((token_42254 != null ? token_42254.length-1 : 0) - 1)] == 58); }if (Tmp3) {
if ((self_42253 === null)) {
result_42255 = newevalword_40273(token_42254);
break BeforeRet;
}
else {
if ((currentkeyword_42137(self_42253) === null)) {
push_42228(self_42253, newkeyword_40318());
}

if (inbalance_42057(currentkeyword_42137(self_42253))) {
addkey_42029(currentkeyword_42137(self_42253), token_42254);
}
else {
raiseparseexception_40076(makeNimstrLit("Malformed keyword syntax, expecting an argument"));
}

result_42255 = null;
break BeforeRet;
}

}

if ((first_42257 == 46)) {
if ((1 < len_42256)) {
if ((token_42254[1] == 46)) {
if ((2 < len_42256)) {
result_42255 = newevalouterword_40283(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(2, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}
else {
raiseparseexception_40076(makeNimstrLit("Malformed parent eval word, missing at least 1 character"));
}

}
else {
result_42255 = newevalselfword_40278(HEX5BHEX5D_13847(token_42254, HEX2EHEX2E_25611(1, ((token_42254 != null ? token_42254.length-1 : 0) - 1))));
break BeforeRet;
}

}
else {
raiseparseexception_40076(makeNimstrLit("Malformed local eval word, missing at least 1 character"));
}

}
else {
result_42255 = newevalword_40273(token_42254);
break BeforeRet;
}

} while (false); 
return result_42255;
}
function newwordorvalue_42357(self_42359) {
var result_42360 = null;
BeforeRet: do {
var token_42361 = self_42359.token_39076;
self_42359.token_39076 = makeNimstrLit("");
L1: do {
var p_42402 = null;
var HEX3Atmp_42414 = null;
HEX3Atmp_42414 = self_42359.valueparsers_39080;
var i_42417 = 0;
var L_42419 = (HEX3Atmp_42414 != null ? HEX3Atmp_42414.length : 0);
L2: do {
L3: while (true) {
if (!(i_42417 < L_42419)) break L3;
p_42402 = HEX3Atmp_42414[i_42417];
var valueornil_42403 = parsevalue_41616(p_42402, token_42361);
if (!((valueornil_42403 === null))) {
result_42360 = valueornil_42403;
break BeforeRet;
}

i_42417 += 1;
}
} while(false);
} while(false);
result_42360 = newword_42251(self_42359, token_42361);
break BeforeRet;
} while (false); 
return result_42360;
}
function addnode_42187(self_42189) {
if ((0 < (self_42189.token_39076 != null ? self_42189.token_39076.length-1 : 0))) {
var node_42423 = newwordorvalue_42357(self_42189);
if (!((node_42423 === null))) {
doaddnode_42205(self_42189, node_42423);
}

}

}
function addChar(x_13180, c_13181) {
    x_13180[x_13180.length-1] = c_13181; x_13180.push(0);
  }
function SetConstr() {
    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  }
function newparen_40442() {
var result_40444 = null;
result_40444 = {nodes_39150: newseq_40372(0), m_type: NTI39153, pos_39151: 0, tags_39092: null};
return result_40444;
}
function newcurly_40480() {
var result_40482 = null;
result_40482 = {nodes_39150: newseq_40372(0), m_type: NTI39157, pos_39151: 0, tags_39092: null};
return result_40482;
}
function pop_42146(self_42148) {
if (!((currentkeyword_42137(self_42148) === null))) {
closekeyword_42143(self_42148);
}

pop_42159(self_42148, "stack_39078");
}
function parse_42433(self_42435, str_42436) {
var Tmp6;
var Tmp9;
var result_42437 = null;
var ch_42438 = 0;
var currentvalueparser_42439 = null;
var pos_42440 = 0;
self_42435.stack_39078 = [];
self_42435.token_39076 = makeNimstrLit("");
var blok_42457 = newblok_40404();
push_42228(self_42435, blok_42457);
L1: do {
L2: while (true) {
if (!(pos_42440 < (str_42436 != null ? str_42436.length-1 : 0))) break L2;
ch_42438 = str_42436[pos_42440];
pos_42440 += 1;
if (!((currentvalueparser_42439 === null))) {
var found_42476 = tokenready_41651(currentvalueparser_42439, self_42435.token_39076, ch_42438);
if (!((found_42476 === null))) {
self_42435.token_39076 = found_42476;
addnode_42187(self_42435);
currentvalueparser_42439 = null;
}
else {
if (self_42435.token_39076 != null) { addChar(self_42435.token_39076, ch_42438); } else { self_42435.token_39076 = [ch_42438, 0]; };
}

}
else {
if (((currentvalueparser_42439 === null) && (SetConstr(32, 9, 11, 13, 10, 12)[ch_42438] != undefined))) {
addnode_42187(self_42435);
}
else {
var tokenlen_42496 = ((self_42435.token_39076 != null ? self_42435.token_39076.length-1 : 0) + 1);
if (((currentvalueparser_42439 === null) && (tokenlen_42496 < 5))) {
L3: do {
var p_42514 = null;
var HEX3Atmp_42553 = null;
HEX3Atmp_42553 = self_42435.valueparsers_39080;
var i_42556 = 0;
var L_42558 = (HEX3Atmp_42553 != null ? HEX3Atmp_42553.length : 0);
L4: do {
L5: while (true) {
if (!(i_42556 < L_42558)) break L5;
p_42514 = HEX3Atmp_42553[i_42556];
if (!(prefixlength_41640(p_42514) == tokenlen_42496)) Tmp6 = false; else {Tmp6 = tokenstart_41662(p_42514, self_42435.token_39076, ch_42438); }if (Tmp6) {
currentvalueparser_42439 = p_42514;
break L3;
}

i_42556 += 1;
}
} while(false);
} while(false);
}

if ((currentvalueparser_42439 === null)) {
switch (ch_42438) {
case 35: addnode_42187(self_42435);
L7: do {
L8: while (true) {
if (!(pos_42440 < (str_42436 != null ? str_42436.length-1 : 0))) Tmp9 = false; else {Tmp9 = !((str_42436[pos_42440] == 10)); }if (!Tmp9) break L8;
pos_42440 += 1;
}
} while(false);

break;
case 40: addnode_42187(self_42435);
push_42228(self_42435, newparen_40442());

break;
case 91: addnode_42187(self_42435);
push_42228(self_42435, newblok_40404());

break;
case 123: addnode_42187(self_42435);
push_42228(self_42435, newcurly_40480());

break;
case 41: addnode_42187(self_42435);
pop_42146(self_42435);

break;
case 93: addnode_42187(self_42435);
pop_42146(self_42435);

break;
case 125: addnode_42187(self_42435);
pop_42146(self_42435);

break;
default: 
if (self_42435.token_39076 != null) { addChar(self_42435.token_39076, ch_42438); } else { self_42435.token_39076 = [ch_42438, 0]; };
break;
}
}
else {
if (self_42435.token_39076 != null) { addChar(self_42435.token_39076, ch_42438); } else { self_42435.token_39076 = [ch_42438, 0]; };
}

}

}

}
} while(false);
addnode_42187(self_42435);
if (!((currentkeyword_42137(self_42435) === null))) {
closekeyword_42143(self_42435);
}

result_42437 = blok_42457.nodes_39150[((blok_42457.nodes_39150 != null ? blok_42457.nodes_39150.length : 0) - 1)];
return result_42437;
}
function newseq_41726(len_41730) {
var result_41732 = null;
result_41732 = new Array(len_41730); for (var i=0;i<len_41730;++i) {result_41732[i]=null;}return result_41732;
}
function newparser_41682() {
var result_41684 = null;
result_41684 = {stack_39078: newseq_40372(0), valueparsers_39080: newseq_41726(0), token_39076: null};
if (result_41684.valueparsers_39080 != null) { result_41684.valueparsers_39080.push({m_type: NTI39089, token_39083: null}); } else { result_41684.valueparsers_39080 = [{m_type: NTI39089, token_39083: null}]; };
if (result_41684.valueparsers_39080 != null) { result_41684.valueparsers_39080.push({m_type: NTI39085, token_39083: null}); } else { result_41684.valueparsers_39080 = [{m_type: NTI39085, token_39083: null}]; };
if (result_41684.valueparsers_39080 != null) { result_41684.valueparsers_39080.push({m_type: NTI39087, token_39083: null}); } else { result_41684.valueparsers_39080 = [{m_type: NTI39087, token_39083: null}]; };
L1: do {
var ex_42002 = null;
var i_42010 = 0;
var L_42012 = (parserexts_39411[0] != null ? parserexts_39411[0].length : 0);
L2: do {
L3: while (true) {
if (!(i_42010 < L_42012)) break L3;
ex_42002 = parserexts_39411[0][i_42010];
ex_42002(result_41684);
i_42010 += 1;
}
} while(false);
} while(false);
return result_41684;
}
function eval_44430(ni_44432, code_44433) {
var result_44434 = null;
result_44434 = evaldo_42636(parse_42433(newparser_41682(), code_44433), ni_44432);
return result_44434;
}
function initorderedtable_40134(initialsize_40139) {
var result_40141 = {data_39181: null, counter_39184: 0, first_39186: 0, last_39188: 0};
result_40141.counter_39184 = 0;
result_40141.first_39186 = -1;
result_40141.last_39188 = -1;
result_40141.data_39181 = new Array(initialsize_40139); for (var i=0;i<initialsize_40139;++i) {result_40141.data_39181[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}return result_40141;
}
function isfatpointer_12697(ti_12699) {
var result_12700 = false;
BeforeRet: do {
result_12700 = !((SetConstr(17, 16, 4, 18, 27, 19, 23, 22, 21)[ti_12699.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_12700;
}
function nimCopyAux(dest_12719, src_12720, n_12722) {
switch (n_12722.kind) {
case 0: 
break;
case 1:       dest_12719[n_12722.offset] = nimCopy(dest_12719[n_12722.offset], src_12720[n_12722.offset], n_12722.typ);
    
break;
case 2: L1: do {
var i_13015 = 0;
var HEX3Atmp_13017 = 0;
HEX3Atmp_13017 = (n_12722.len - 1);
var res_13020 = 0;
L2: do {
L3: while (true) {
if (!(res_13020 <= HEX3Atmp_13017)) break L3;
i_13015 = res_13020;
nimCopyAux(dest_12719, src_12720, n_12722.sons[i_13015]);
res_13020 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_12719[n_12722.offset] = nimCopy(dest_12719[n_12722.offset], src_12720[n_12722.offset], n_12722.typ);
      for (var i = 0; i < n_12722.sons.length; ++i) {
        nimCopyAux(dest_12719, src_12720, n_12722.sons[i][1]);
      }
    
break;
}
}
function nimCopy(dest_12714, src_12715, ti_12716) {
var result_13029 = null;
switch (ti_12716.kind) {
case 21: case 22: case 23: case 5: if (!(isfatpointer_12697(ti_12716))) {
result_13029 = src_12715;
}
else {
result_13029 = [src_12715[0], src_12715[1]];}


break;
case 19:       if (dest_12714 === null || dest_12714 === undefined) {
        dest_12714 = {};
      }
      else {
        for (var key in dest_12714) { delete dest_12714[key]; }
      }
      for (var key in src_12715) { dest_12714[key] = src_12715[key]; }
      result_13029 = dest_12714;
    
break;
case 18: case 17: if (!((ti_12716.base == null))) {
result_13029 = nimCopy(dest_12714, src_12715, ti_12716.base);
}
else {
if ((ti_12716.kind == 17)) {
result_13029 = (dest_12714 === null || dest_12714 === undefined) ? {m_type: ti_12716} : dest_12714;}
else {
result_13029 = (dest_12714 === null || dest_12714 === undefined) ? {} : dest_12714;}
}
nimCopyAux(result_13029, src_12715, ti_12716.node);

break;
case 24: case 4: case 27: case 16:       if (src_12715 === null) {
        result_13029 = null;
      }
      else {
        if (dest_12714 === null || dest_12714 === undefined) {
          dest_12714 = new Array(src_12715.length);
        }
        else {
          dest_12714.length = src_12715.length;
        }
        result_13029 = dest_12714;
        for (var i = 0; i < src_12715.length; ++i) {
          result_13029[i] = nimCopy(result_13029[i], src_12715[i], ti_12716.base);
        }
      }
    
break;
case 28:       if (src_12715 !== null) {
        result_13029 = src_12715.slice(0);
      }
    
break;
default: 
result_13029 = src_12715;
break;
}
return result_13029;
}
function neworderedtable_40117(initialsize_40122) {
var result_40124 = null;
result_40124 = {data_39181: null, counter_39184: 0, first_39186: 0, last_39188: 0};
nimCopy(result_40124, initorderedtable_40134(64), NTI39165);
return result_40124;
}
function newmap_40093() {
var result_40095 = null;
result_40095 = {bindings_39190: neworderedtable_40117(64), m_type: NTI39159, tags_39092: null};
return result_40095;
}
function newvalue_40527(v_40529) {
var Tmp1;
var result_40530 = null;
if (v_40529) {
Tmp1 = {m_type: NTI39138, tags_39092: null};
}
else {
Tmp1 = {m_type: NTI39140, tags_39092: null};
}

result_40530 = Tmp1;
return result_40530;
}
function newnilval_40534() {
var result_40536 = null;
result_40536 = {m_type: NTI39144, tags_39092: null};
return result_40536;
}
function newundefval_40538() {
var result_40540 = null;
result_40540 = {m_type: NTI39142, tags_39092: null};
return result_40540;
}
function isfilled_35263(hcode_35265) {
var result_35266 = false;
result_35266 = !((hcode_35265 == 0));
return result_35266;
}
function nexttry_35401(h_35403, maxhash_35404) {
var result_35405 = 0;
result_35405 = ((h_35403 + 1) & maxhash_35404);
return result_35405;
}
function rawget_39919(t_39925, key_39927, hc_39929, hc_39929_Idx) {
var Tmp3;
var result_39930 = 0;
BeforeRet: do {
hc_39929[hc_39929_Idx] = hash_39218(key_39927);
if ((hc_39929[hc_39929_Idx] == 0)) {
hc_39929[hc_39929_Idx] = 314159265;
}

var h_39932 = (hc_39929[hc_39929_Idx] & (t_39925.data_39181 != null ? (t_39925.data_39181.length-1) : -1));
L1: do {
L2: while (true) {
if (!isfilled_35263(t_39925.data_39181[h_39932].Field0)) break L2;
if (!(t_39925.data_39181[h_39932].Field0 == hc_39929[hc_39929_Idx])) Tmp3 = false; else {Tmp3 = HEX3DHEX3D_39228(t_39925.data_39181[h_39932].Field2, key_39927); }if (Tmp3) {
result_39930 = h_39932;
break BeforeRet;
}

h_39932 = nexttry_35401(h_39932, (t_39925.data_39181 != null ? (t_39925.data_39181.length-1) : -1));
}
} while(false);
result_39930 = (-1 - h_39932);
} while (false); 
return result_39930;
}
function mustrehash_35268(length_35270, counter_35271) {
var result_35272 = false;
result_35272 = (((length_35270 * 2) < (counter_35271 * 3)) || ((length_35270 - counter_35271) < 4));
return result_35272;
}
function rawgetknownhc_39989(t_39995, key_39997, hc_39999) {
var result_40000 = 0;
BeforeRet: do {
var h_40001 = (hc_39999 & (t_39995.data_39181 != null ? (t_39995.data_39181.length-1) : -1));
L1: do {
L2: while (true) {
if (!isfilled_35263(t_39995.data_39181[h_40001].Field0)) break L2;
if (((t_39995.data_39181[h_40001].Field0 == hc_39999) && HEX3DHEX3D_39228(t_39995.data_39181[h_40001].Field2, key_39997))) {
result_40000 = h_40001;
break BeforeRet;
}

h_40001 = nexttry_35401(h_40001, (t_39995.data_39181 != null ? (t_39995.data_39181.length-1) : -1));
}
} while(false);
result_40000 = (-1 - h_40001);
} while (false); 
return result_40000;
}
function rawinsert_40006(t_40013, data_40017, data_40017_Idx, key_40019, val_40021, hc_40023, h_40025) {
data_40017[data_40017_Idx][h_40025].Field2 = key_40019;
data_40017[data_40017_Idx][h_40025].Field3 = val_40021;
data_40017[data_40017_Idx][h_40025].Field0 = hc_40023;
data_40017[data_40017_Idx][h_40025].Field1 = -1;
if ((t_40013.first_39186 < 0)) {
t_40013.first_39186 = h_40025;
}

if ((0 <= t_40013.last_39188)) {
data_40017[data_40017_Idx][t_40013.last_39188].Field1 = h_40025;
}

t_40013.last_39188 = h_40025;
}
function enlarge_39946(t_39953) {
var n_39957 = null;
n_39957 = new Array(((t_39953.data_39181 != null ? t_39953.data_39181.length : 0) * 2)); for (var i=0;i<((t_39953.data_39181 != null ? t_39953.data_39181.length : 0) * 2);++i) {n_39957[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}var h_39976 = t_39953.first_39186;
t_39953.first_39186 = -1;
t_39953.last_39188 = -1;
var Tmp1 = t_39953.data_39181; t_39953.data_39181 = n_39957; n_39957 = Tmp1;L2: do {
L3: while (true) {
if (!(0 <= h_39976)) break L3;
var nxt_39987 = n_39957[h_39976].Field1;
if (isfilled_35263(n_39957[h_39976].Field0)) {
var j_40004 = (-1 - rawgetknownhc_39989(t_39953, n_39957[h_39976].Field2, n_39957[h_39976].Field0));
rawinsert_40006(t_39953, t_39953, "data_39181", n_39957[h_39976].Field2, n_39957[h_39976].Field3, n_39957[h_39976].Field0, j_40004);
}

h_39976 = nxt_39987;
}
} while(false);
}
function HEX5BHEX5DHEX3D_39905(t_39912, key_39914, val_39916) {
var hc_39917 = [0];
var index_39936 = rawget_39919(t_39912, key_39914, hc_39917, 0);
if ((0 <= index_39936)) {
t_39912.data_39181[index_39936].Field3 = val_39916;
}
else {
if (mustrehash_35268((t_39912.data_39181 != null ? t_39912.data_39181.length : 0), t_39912.counter_39184)) {
enlarge_39946(t_39912);
index_39936 = rawgetknownhc_39989(t_39912, key_39914, hc_39917[0]);
}

index_39936 = (-1 - index_39936);
rawinsert_40006(t_39912, t_39912, "data_39181", key_39914, val_39916, hc_39917[0], index_39936);
t_39912.counter_39184 += 1;
}

}
function HEX5BHEX5DHEX3D_39893(t_39899, key_39901, val_39903) {
HEX5BHEX5DHEX3D_39905(t_39899, key_39901, val_39903);
}
function makebinding_39886(self_39888, key_39889, val_39890) {
var result_39891 = null;
result_39891 = {key_39193: key_39889, val_39194: val_39890, m_type: NTI39192, tags_39092: null};
HEX5BHEX5DHEX3D_39893(self_39888.bindings_39190, key_39889, result_39891);
return result_39891;
}
function makeword_43667(self_43669, word_43670, value_43671) {
makebinding_39886(self_43669.root_42583, newevalword_40273(word_43670), value_43671);
}
function newnimproc_43068(prok_43070, infix_43071, arity_43072) {
var result_43073 = null;
result_43073 = {prok_42592: prok_43070, infix_42593: infix_43071, arity_42594: arity_43072, m_type: NTI42591, tags_39092: null};
return result_43073;
}
function getlocals_43121(self_43123) {
var result_43124 = null;
if ((self_43123.locals_42609 === null)) {
self_43123.locals_42609 = newmap_40093();
}

result_43124 = self_43123.locals_42609;
return result_43124;
}
function len_43056(self_43058) {
var result_43059 = 0;
result_43059 = (self_43058.body_42606.nodes_39150 != null ? self_43058.body_42606.nodes_39150.length : 0);
return result_43059;
}
function atend_43463(self_43465) {
var result_43466 = false;
result_43466 = (self_43465.pos_42605 == len_43056(self_43465));
return result_43466;
}
function raiseruntimeexception_39196(msg_39198) {
var e_39202 = null;
e_39202 = {m_type: NTI39074, parent: null, name: null, message: null, trace: null};
e_39202.message = msg_39198;
raiseException(e_39202, "RuntimeException");
}
function HEX5BHEX5D_43051(self_43053, i_43054) {
var result_43055 = null;
result_43055 = self_43053.body_42606.nodes_39150[i_43054];
return result_43055;
}
function next_43467(self_43469) {
var result_43470 = null;
if (atend_43463(self_43469)) {
raiseruntimeexception_39196(makeNimstrLit("End of current block, too few arguments?"));
}
else {
result_43470 = HEX5BHEX5D_43051(self_43469, self_43469.pos_42605);
self_43469.pos_42605 += 1;
}

return result_43470;
}
function evalarg_43663(ni_43665) {
var result_43666 = null;
result_43666 = eval_42629(next_43467(ni_43665.currentactivation_42581), ni_43665);
return result_43666;
}
function boolval_43672(val_43674, ni_43675) {
var result_43676 = null;
if (val_43674) {
result_43676 = ni_43675.trueval_42584;
}
else {
result_43676 = ni_43675.falseval_42585;
}

return result_43676;
}
function find_40634(a_40639, item_40641) {
var result_40642 = 0;
BeforeRet: do {
L1: do {
var i_40668 = null;
var i_40681 = 0;
L2: do {
L3: while (true) {
if (!(i_40681 < (a_40639 != null ? a_40639.length : 0))) break L3;
i_40668 = a_40639[i_40681];
if (HEX3DHEX3D_39228(i_40668, item_40641)) {
break BeforeRet;
}

result_40642 += 1;
i_40681 += 1;
}
} while(false);
} while(false);
result_40642 = -1;
} while (false); 
return result_40642;
}
function contains_40624(a_40629, item_40631) {
var result_40632 = false;
BeforeRet: do {
result_40632 = (0 <= find_40634(a_40629, item_40631));
break BeforeRet;
} while (false); 
return result_40632;
}
function contains_40617(self_40619, n_40620) {
var result_40621 = false;
result_40621 = contains_40624(self_40619.nodes_39150, n_40620);
return result_40621;
}
function lookup_43524(ni_43526, key_43527) {
var result_43528 = null;
BeforeRet: do {
L1: do {
var activation_43529 = null;
var HEX3Atmp_43541 = null;
HEX3Atmp_43541 = ni_43526.currentactivation_42581;
var activation_43545 = HEX3Atmp_43541;
L2: do {
L3: while (true) {
if (!!((activation_43545 === null))) break L3;
L4: do {
L5: while (true) {
if (!!(haslocals_43138(activation_43545))) break L5;
activation_43545 = outer_43151(activation_43545);
}
} while(false);
activation_43529 = activation_43545;
var hit_43530 = lookup_43506(activation_43529, key_43527);
if (!((hit_43530 === null))) {
result_43528 = hit_43530;
break BeforeRet;
}

activation_43545 = outer_43151(activation_43545);
}
} while(false);
} while(false);
} while (false); 
return result_43528;
}
function makebinding_43581(ni_43583, key_43584, val_43585) {
var result_43586 = null;
BeforeRet: do {
L1: do {
var activation_43587 = null;
var HEX3Atmp_43589 = null;
HEX3Atmp_43589 = ni_43583.currentactivation_42581;
var activation_43593 = HEX3Atmp_43589;
L2: do {
L3: while (true) {
if (!!((activation_43593 === null))) break L3;
L4: do {
L5: while (true) {
if (!!(haslocals_43138(activation_43593))) break L5;
activation_43593 = outer_43151(activation_43593);
}
} while(false);
activation_43587 = activation_43593;
result_43586 = makebinding_43571(activation_43587, key_43584, val_43585);
break BeforeRet;
activation_43593 = outer_43151(activation_43593);
}
} while(false);
} while(false);
} while (false); 
return result_43586;
}
function setbinding_43594(ni_43596, key_43597, value_43598) {
var result_43599 = null;
result_43599 = lookup_43524(ni_43596, key_43597);
if (!((result_43599 === null))) {
result_43599.val_39194 = value_43598;
}
else {
result_43599 = makebinding_43581(ni_43596, key_43597, value_43598);
}

return result_43599;
}
function arginfix_43647(ni_43649) {
var result_43650 = null;
result_43650 = ni_43649.currentactivation_42581.last_42601;
return result_43650;
}
function arg_43656(ni_43658) {
var result_43659 = null;
result_43659 = next_43467(ni_43658.currentactivation_42581);
return result_43659;
}
function newvalue_40517(v_40519) {
var result_40520 = null;
result_40520 = {value_39131: v_40519, m_type: NTI39130, tags_39092: null};
return result_40520;
}
function newvalue_40512(v_40514) {
var result_40515 = null;
result_40515 = {value_39128: v_40514, m_type: NTI39127, tags_39092: null};
return result_40515;
}
function HEX5BHEX5D_43016(self_43018, key_43019) {
var result_43020 = null;
result_43020 = self_43018.nodes_39150[key_43019.value_39128];
return result_43020;
}
function haskey_42822(t_42828, key_42830) {
var result_42831 = false;
var hc_42832 = [0];
result_42831 = (0 <= rawget_39919(t_42828, key_42830, hc_42832, 0));
return result_42831;
}
function haskey_42811(t_42817, key_42819) {
var result_42820 = false;
result_42820 = haskey_42822(t_42817, key_42819);
return result_42820;
}
function rawget_39869(t_39874, key_39876, hc_39878, hc_39878_Idx) {
var Tmp3;
var result_39879 = 0;
BeforeRet: do {
hc_39878[hc_39878_Idx] = hash_39218(key_39876);
if ((hc_39878[hc_39878_Idx] == 0)) {
hc_39878[hc_39878_Idx] = 314159265;
}

var h_39881 = (hc_39878[hc_39878_Idx] & (t_39874.data_39181 != null ? (t_39874.data_39181.length-1) : -1));
L1: do {
L2: while (true) {
if (!isfilled_35263(t_39874.data_39181[h_39881].Field0)) break L2;
if (!(t_39874.data_39181[h_39881].Field0 == hc_39878[hc_39878_Idx])) Tmp3 = false; else {Tmp3 = HEX3DHEX3D_39228(t_39874.data_39181[h_39881].Field2, key_39876); }if (Tmp3) {
result_39879 = h_39881;
break BeforeRet;
}

h_39881 = nexttry_35401(h_39881, (t_39874.data_39181 != null ? (t_39874.data_39181.length-1) : -1));
}
} while(false);
result_39879 = (-1 - h_39881);
} while (false); 
return result_39879;
}
function HEX5BHEX5D_42861(t_42868, key_42870) {
var result_42872 = [null, 0];
var hc_42874 = [0];
var index_42876 = rawget_39869(t_42868, key_42870, hc_42874, 0);
if ((0 <= index_42876)) {
result_42872 = t_42868.data_39181[index_42876]; result_42872_Idx = "Field3";
}
else {
var e_43003 = null;
e_43003 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null};
e_43003.message = (makeNimstrLit("key not found: ").slice(0,-1)).concat(HEX24_39604(key_42870));
raiseException(e_43003, "KeyError");
}

return [result_42872, result_42872_Idx];
}
function HEX5BHEX5D_42849(t_42855, key_42857) {
var result_42859 = [null, 0];
var Tmp1 = HEX5BHEX5D_42861(t_42855, key_42857); result_42859 = Tmp1[0]; result_42859_Idx = Tmp1[1];
return [result_42859, result_42859_Idx];
}
function HEX5BHEX5D_42805(self_42807, key_42808) {
var Tmp1;
var result_42809 = null;
BeforeRet: do {
if (haskey_42811(self_42807.bindings_39190, key_42808)) {
result_42809 = (Tmp1 = HEX5BHEX5D_42849(self_42807.bindings_39190, key_42808), Tmp1[0][Tmp1[1]]).val_39194;
break BeforeRet;
}

} while (false); 
return result_42809;
}
function HEX5BHEX5DHEX3D_43036(self_43038, key_43039, val_43040) {
self_43038.nodes_39150[key_43039.value_39128] = val_43040;
}
function HEX5BHEX5DHEX3D_43031(self_43033, key_43034, val_43035) {
makebinding_39886(self_43033, key_43034, val_43035);
}
function HEX5BHEX5D_43026(self_43028, key_43029) {
var result_43030 = null;
result_43030 = self_43028.nodes_39150[key_43029];
return result_43030;
}
function HEX5BHEX5DHEX3D_43046(self_43048, key_43049, val_43050) {
self_43048.nodes_39150[key_43049] = val_43050;
}
function newfunk_43075(body_43077, infix_43078, parent_43079) {
var result_43080 = null;
result_43080 = {nodes_39150: body_43077.nodes_39150, infix_42597: infix_43078, parent_42598: parent_43079, m_type: NTI42596, pos_39151: 0, tags_39092: null};
return result_43080;
}
function funk_42619(ni_42621, body_42622, infix_42623) {
var result_44153 = null;
result_44153 = newfunk_43075(body_42622, infix_42623, ni_42621.currentactivation_42581);
return result_44153;
}
function newvalue_40522(v_40524) {
var result_40525 = null;
result_40525 = {value_39134: v_40524, m_type: NTI39133, tags_39092: null};
return result_40525;
}
function newrootactivation_43082(root_43084) {
var result_43085 = null;
result_43085 = {body_42606: newblok_40404(), locals_42609: root_43084, m_type: NTI42617, last_42601: null, infixarg_42602: null, returned_42603: false, parent_42604: null, pos_42605: 0, tags_39092: null};
return result_43085;
}
function newinterpreter_43683() {
function HEX3Aanonymous_43687(ni_43689) {
var result_43690 = null;
result_43690 = ni_43689.currentactivation_42581;
return result_43690;
}
function HEX3Aanonymous_43691(ni_43693) {
var result_43694 = null;
BeforeRet: do {
L1: do {
var activation_43695 = null;
var HEX3Atmp_43697 = null;
HEX3Atmp_43697 = ni_43693.currentactivation_42581;
var activation_43701 = HEX3Atmp_43697;
L2: do {
L3: while (true) {
if (!!((activation_43701 === null))) break L3;
L4: do {
L5: while (true) {
if (!!(haslocals_43138(activation_43701))) break L5;
activation_43701 = outer_43151(activation_43701);
}
} while(false);
activation_43695 = activation_43701;
result_43694 = getlocals_43121(activation_43695);
break BeforeRet;
activation_43701 = outer_43151(activation_43701);
}
} while(false);
} while(false);
} while (false); 
return result_43694;
}
function HEX3Aanonymous_43702(ni_43704) {
var result_43705 = null;
result_43705 = ni_43704.undefval_42586;
return result_43705;
}
function HEX3Aanonymous_43706(ni_43708) {
var result_43709 = null;
result_43709 = ni_43708.undefval_42586;
return result_43709;
}
function HEX3Aanonymous_43710(ni_43712) {
var result_43713 = null;
result_43713 = eval_42629(ni_43712.currentactivation_42581.last_42601, ni_43712);
var tag_43714 = evalarg_43663(ni_43712);
if ((result_43713.tags_39092 === null)) {
result_43713.tags_39092 = newblok_40404();
}

add_40542(result_43713.tags_39092, tag_43714);
return result_43713;
}
function HEX3Aanonymous_43723(ni_43725) {
var result_43726 = null;
BeforeRet: do {
var node_43727 = eval_42629(ni_43725.currentactivation_42581.last_42601, ni_43725);
var tag_43728 = evalarg_43663(ni_43725);
if ((node_43727.tags_39092 === null)) {
result_43726 = ni_43725.falseval_42585;
break BeforeRet;
}

result_43726 = boolval_43672(contains_40617(node_43727.tags_39092, tag_43728), ni_43725);
break BeforeRet;
} while (false); 
return result_43726;
}
function HEX3Aanonymous_43737(ni_43739) {
var result_43740 = null;
BeforeRet: do {
var node_43741 = eval_42629(ni_43739.currentactivation_42581.last_42601, ni_43739);
if ((node_43741.tags_39092 === null)) {
result_43740 = ni_43739.falseval_42585;
break BeforeRet;
}

result_43740 = node_43741.tags_39092;
break BeforeRet;
} while (false); 
return result_43740;
}
function HEX3Aanonymous_43750(ni_43752) {
var result_43753 = null;
result_43753 = eval_42629(ni_43752.currentactivation_42581.last_42601, ni_43752);
result_43753.tags_39092 = evalarg_43663(ni_43752);
return result_43753;
}
function HEX3Aanonymous_43754(ni_43756) {
var result_43757 = null;
var val_43758 = eval_42629(ni_43756.currentactivation_42581.last_42601, ni_43756);
result_43757 = newvalue_40527(!(isObj(val_43758.m_type, NTI39142)));
return result_43757;
}
function HEX3Aanonymous_43761(ni_43763) {
var result_43764 = null;
result_43764 = evalarg_43663(ni_43763);
setbinding_43594(ni_43763, arginfix_43647(ni_43763), result_43764);
return result_43764;
}
function HEX3Aanonymous_43765(ni_43767) {
var result_43768 = null;
result_43768 = HEX2B_43196(eval_42629(ni_43767.currentactivation_42581.last_42601, ni_43767), evalarg_43663(ni_43767));
return result_43768;
}
function HEX3Aanonymous_43769(ni_43771) {
var result_43772 = null;
result_43772 = HEX2D_43228(eval_42629(ni_43771.currentactivation_42581.last_42601, ni_43771), evalarg_43663(ni_43771));
return result_43772;
}
function HEX3Aanonymous_43773(ni_43775) {
var result_43776 = null;
result_43776 = HEX2A_43260(eval_42629(ni_43775.currentactivation_42581.last_42601, ni_43775), evalarg_43663(ni_43775));
return result_43776;
}
function HEX3Aanonymous_43777(ni_43779) {
var result_43780 = null;
result_43780 = HEX2F_43292(eval_42629(ni_43779.currentactivation_42581.last_42601, ni_43779), evalarg_43663(ni_43779));
return result_43780;
}
function HEX3Aanonymous_43781(ni_43783) {
var result_43784 = null;
result_43784 = HEX3C_43324(eval_42629(ni_43783.currentactivation_42581.last_42601, ni_43783), evalarg_43663(ni_43783));
return result_43784;
}
function HEX3Aanonymous_43785(ni_43787) {
var result_43788 = null;
result_43788 = HEX3C_43324(evalarg_43663(ni_43787), eval_42629(ni_43787.currentactivation_42581.last_42601, ni_43787));
return result_43788;
}
function HEX3Aanonymous_43789(ni_43791) {
var result_43792 = null;
result_43792 = HEX3CHEX3D_43361(eval_42629(ni_43791.currentactivation_42581.last_42601, ni_43791), evalarg_43663(ni_43791));
return result_43792;
}
function HEX3Aanonymous_43793(ni_43795) {
var result_43796 = null;
result_43796 = HEX3CHEX3D_43361(evalarg_43663(ni_43795), eval_42629(ni_43795.currentactivation_42581.last_42601, ni_43795));
return result_43796;
}
function HEX3Aanonymous_43797(ni_43799) {
var result_43800 = null;
result_43800 = eq_43398(eval_42629(ni_43799.currentactivation_42581.last_42601, ni_43799), evalarg_43663(ni_43799));
return result_43800;
}
function HEX3Aanonymous_43801(ni_43803) {
var result_43804 = null;
result_43804 = newvalue_40527(!(value_39293(eq_43398(eval_42629(ni_43803.currentactivation_42581.last_42601, ni_43803), evalarg_43663(ni_43803)))));
return result_43804;
}
function HEX3Aanonymous_43805(ni_43807) {
var result_43808 = null;
result_43808 = newvalue_40527(!(value_39293(evalarg_43663(ni_43807))));
return result_43808;
}
function HEX3Aanonymous_43809(ni_43811) {
var Tmp1;
var result_43812 = null;
var arg1_43813 = value_39293(eval_42629(ni_43811.currentactivation_42581.last_42601, ni_43811));
var arg2_43814 = arg_43656(ni_43811);
if (!arg1_43813) Tmp1 = false; else {Tmp1 = value_39293(eval_42629(arg2_43814, ni_43811)); }result_43812 = newvalue_40527(Tmp1);
return result_43812;
}
function HEX3Aanonymous_43815(ni_43817) {
var Tmp1;
var result_43818 = null;
var arg1_43819 = value_39293(eval_42629(ni_43817.currentactivation_42581.last_42601, ni_43817));
var arg2_43820 = arg_43656(ni_43817);
if (arg1_43819) Tmp1 = true; else {Tmp1 = value_39293(eval_42629(arg2_43820, ni_43817)); }result_43818 = newvalue_40527(Tmp1);
return result_43818;
}
function HEX3Aanonymous_43821(ni_43823) {
var result_43824 = null;
BeforeRet: do {
var val_43825 = eval_42629(ni_43823.currentactivation_42581.last_42601, ni_43823);
if (isObj(val_43825.m_type, NTI39133)) {
result_43824 = HEX26_43440(val_43825, evalarg_43663(ni_43823));
break BeforeRet;
}
else {
if (isObj(val_43825.m_type, NTI39155)) {
result_43824 = concat_40689(val_43825, evalarg_43663(ni_43823).nodes_39150);
break BeforeRet;
}
else {
if (isObj(val_43825.m_type, NTI39153)) {
result_43824 = concat_40689(val_43825, evalarg_43663(ni_43823).nodes_39150);
break BeforeRet;
}
else {
if (isObj(val_43825.m_type, NTI39157)) {
result_43824 = concat_40689(val_43825, evalarg_43663(ni_43823).nodes_39150);
break BeforeRet;
}
}}}
} while (false); 
return result_43824;
}
function HEX3Aanonymous_43834(ni_43836) {
var result_43837 = null;
BeforeRet: do {
var val_43838 = eval_42629(ni_43836.currentactivation_42581.last_42601, ni_43836);
if (isObj(val_43838.m_type, NTI39130)) {
result_43837 = val_43838;
break BeforeRet;
}
else {
if (isObj(val_43838.m_type, NTI39127)) {
result_43837 = newvalue_40517(val_43838.value_39128);
break BeforeRet;
}
else {
raiseruntimeexception_39196(makeNimstrLit("Can not convert to float"));
}
}
} while (false); 
return result_43837;
}
function HEX3Aanonymous_43843(ni_43845) {
var result_43846 = null;
BeforeRet: do {
var val_43847 = eval_42629(ni_43845.currentactivation_42581.last_42601, ni_43845);
if (isObj(val_43847.m_type, NTI39127)) {
result_43846 = val_43847;
break BeforeRet;
}
else {
if (isObj(val_43847.m_type, NTI39130)) {
result_43846 = newvalue_40512(Math.floor(val_43847.value_39131));
break BeforeRet;
}
else {
raiseruntimeexception_39196(makeNimstrLit("Can not convert to int"));
}
}
} while (false); 
return result_43846;
}
function HEX3Aanonymous_43852(ni_43854) {
var result_43855 = null;
result_43855 = newvalue_40512((eval_42629(ni_43854.currentactivation_42581.last_42601, ni_43854).nodes_39150 != null ? eval_42629(ni_43854.currentactivation_42581.last_42601, ni_43854).nodes_39150.length : 0));
return result_43855;
}
function HEX3Aanonymous_43864(ni_43866) {
var result_43867 = null;
BeforeRet: do {
var comp_43868 = eval_42629(ni_43866.currentactivation_42581.last_42601, ni_43866);
if (isObj(comp_43868.m_type, NTI39148)) {
result_43867 = HEX5BHEX5D_43016(comp_43868, evalarg_43663(ni_43866));
break BeforeRet;
}
else {
if (isObj(comp_43868.m_type, NTI39159)) {
result_43867 = HEX5BHEX5D_42805(comp_43868, evalarg_43663(ni_43866));
break BeforeRet;
}
}
} while (false); 
return result_43867;
}
function HEX3Aanonymous_43873(ni_43875) {
var result_43876 = null;
BeforeRet: do {
var comp_43877 = eval_42629(ni_43875.currentactivation_42581.last_42601, ni_43875);
var key_43878 = evalarg_43663(ni_43875);
var val_43879 = evalarg_43663(ni_43875);
if (isObj(comp_43877.m_type, NTI39148)) {
HEX5BHEX5DHEX3D_43036(comp_43877, key_43878, val_43879);
}
else {
if (isObj(comp_43877.m_type, NTI39159)) {
HEX5BHEX5DHEX3D_43031(comp_43877, key_43878, val_43879);
}
}
result_43876 = comp_43877;
break BeforeRet;
} while (false); 
return result_43876;
}
function HEX3Aanonymous_43884(ni_43886) {
var result_43887 = null;
var comp_43888 = eval_42629(ni_43886.currentactivation_42581.last_42601, ni_43886);
result_43887 = HEX5BHEX5D_43026(comp_43888, comp_43888.pos_39151);
return result_43887;
}
function HEX3Aanonymous_43889(ni_43891) {
var result_43892 = null;
result_43892 = eval_42629(ni_43891.currentactivation_42581.last_42601, ni_43891);
var comp_43893 = result_43892;
HEX5BHEX5DHEX3D_43046(comp_43893, comp_43893.pos_39151, evalarg_43663(ni_43891));
return result_43892;
}
function HEX3Aanonymous_43894(ni_43896) {
var result_43897 = null;
result_43897 = eval_42629(ni_43896.currentactivation_42581.last_42601, ni_43896);
var comp_43898 = result_43897;
add_40542(comp_43898, evalarg_43663(ni_43896));
return result_43897;
}
function HEX3Aanonymous_43899(ni_43901) {
var result_43902 = null;
result_43902 = eval_42629(ni_43901.currentactivation_42581.last_42601, ni_43901);
var comp_43903 = result_43902;
removelast_41074(comp_43903);
return result_43902;
}
function HEX3Aanonymous_43904(ni_43906) {
var result_43907 = null;
var comp_43908 = eval_42629(ni_43906.currentactivation_42581.last_42601, ni_43906);
result_43907 = newvalue_40527(contains_40617(comp_43908, evalarg_43663(ni_43906)));
return result_43907;
}
function HEX3Aanonymous_43909(ni_43911) {
var result_43912 = null;
eval_42629(ni_43911.currentactivation_42581.last_42601, ni_43911).pos_39151 = 0;
return result_43912;
}
function HEX3Aanonymous_43913(ni_43915) {
var result_43916 = null;
result_43916 = newvalue_40512(eval_42629(ni_43915.currentactivation_42581.last_42601, ni_43915).pos_39151);
return result_43916;
}
function HEX3Aanonymous_43917(ni_43919) {
var result_43920 = null;
result_43920 = eval_42629(ni_43919.currentactivation_42581.last_42601, ni_43919);
var comp_43921 = result_43920;
comp_43921.pos_39151 = evalarg_43663(ni_43919).value_39128;
return result_43920;
}
function HEX3Aanonymous_43922(ni_43924) {
var result_43925 = null;
BeforeRet: do {
var comp_43926 = eval_42629(ni_43924.currentactivation_42581.last_42601, ni_43924);
if ((comp_43926.pos_39151 == (comp_43926.nodes_39150 != null ? comp_43926.nodes_39150.length : 0))) {
result_43925 = ni_43924.undefval_42586;
break BeforeRet;
}

result_43925 = HEX5BHEX5D_43026(comp_43926, comp_43926.pos_39151);
comp_43926.pos_39151 += 1;
} while (false); 
return result_43925;
}
function HEX3Aanonymous_43944(ni_43946) {
var result_43947 = null;
BeforeRet: do {
var comp_43948 = eval_42629(ni_43946.currentactivation_42581.last_42601, ni_43946);
if ((comp_43948.pos_39151 == 0)) {
result_43947 = ni_43946.undefval_42586;
break BeforeRet;
}

comp_43948.pos_39151 -= 1;
result_43947 = HEX5BHEX5D_43026(comp_43948, comp_43948.pos_39151);
} while (false); 
return result_43947;
}
function HEX3Aanonymous_43958(ni_43960) {
var result_43961 = null;
var comp_43962 = eval_42629(ni_43960.currentactivation_42581.last_42601, ni_43960);
result_43961 = newvalue_40527((comp_43962.pos_39151 == (comp_43962.nodes_39150 != null ? comp_43962.nodes_39150.length : 0)));
return result_43961;
}
function HEX3Aanonymous_43971(ni_43973) {
var result_43974 = null;
result_43974 = HEX5BHEX5D_43026(eval_42629(ni_43973.currentactivation_42581.last_42601, ni_43973), 0);
return result_43974;
}
function HEX3Aanonymous_43975(ni_43977) {
var result_43978 = null;
result_43978 = HEX5BHEX5D_43026(eval_42629(ni_43977.currentactivation_42581.last_42601, ni_43977), 1);
return result_43978;
}
function HEX3Aanonymous_43979(ni_43981) {
var result_43982 = null;
result_43982 = HEX5BHEX5D_43026(eval_42629(ni_43981.currentactivation_42581.last_42601, ni_43981), 2);
return result_43982;
}
function HEX3Aanonymous_43983(ni_43985) {
var result_43986 = null;
result_43986 = HEX5BHEX5D_43026(eval_42629(ni_43985.currentactivation_42581.last_42601, ni_43985), 3);
return result_43986;
}
function HEX3Aanonymous_43987(ni_43989) {
var result_43990 = null;
result_43990 = HEX5BHEX5D_43026(eval_42629(ni_43989.currentactivation_42581.last_42601, ni_43989), 4);
return result_43990;
}
function HEX3Aanonymous_43991(ni_43993) {
var result_43994 = null;
var nodes_43995 = eval_42629(ni_43993.currentactivation_42581.last_42601, ni_43993).nodes_39150;
result_43994 = nodes_43995[(nodes_43995 != null ? (nodes_43995.length-1) : -1)];
return result_43994;
}
function HEX3Aanonymous_43996(ni_43998) {
var result_43999 = null;
result_43999 = funk_42619(ni_43998, evalarg_43663(ni_43998), false);
return result_43999;
}
function HEX3Aanonymous_44000(ni_44002) {
var result_44003 = null;
result_44003 = funk_42619(ni_44002, evalarg_43663(ni_44002), true);
return result_44003;
}
function HEX3Aanonymous_44004(ni_44006) {
var result_44007 = null;
result_44007 = evaldo_42636(evalarg_43663(ni_44006), ni_44006);
return result_44007;
}
function HEX3Aanonymous_44008(ni_44010) {
var result_44011 = null;
result_44011 = arg_43656(ni_44010);
return result_44011;
}
function HEX3Aanonymous_44012(ni_44014) {
var result_44015 = null;
result_44015 = evalarg_43663(ni_44014);
return result_44015;
}
function HEX3Aanonymous_44016(ni_44018) {
var result_44019 = null;
result_44019 = eval_42629(evalarg_43663(ni_44018), ni_44018);
return result_44019;
}
function HEX3Aanonymous_44020(ni_44022) {
var result_44023 = null;
result_44023 = parse_42433(newparser_41682(), evalarg_43663(ni_44022).value_39134);
return result_44023;
}
function HEX3Aanonymous_44024(ni_44026) {
var result_44027 = null;
result_44027 = newvalue_40522(HEX24_39604(evalarg_43663(ni_44026)));
return result_44027;
}
function HEX3Aanonymous_44028(ni_44030) {
var result_44031 = null;
result_44031 = parse_42433(newparser_41682(), evalarg_43663(ni_44030).value_39134);
return result_44031;
}
function HEX3Aanonymous_44032(ni_44034) {
var result_44035 = null;
ni_44034.currentactivation_42581.returned_42603 = true;
result_44035 = evalarg_43663(ni_44034);
return result_44035;
}
function HEX3Aanonymous_44036(ni_44038) {
var result_44039 = null;
BeforeRet: do {
if (value_39293(evalarg_43663(ni_44038))) {
result_44039 = evaldo_42636(evalarg_43663(ni_44038), ni_44038);
break BeforeRet;
}
else {
arg_43656(ni_44038);
result_44039 = ni_44038.nilval_42587;
break BeforeRet;
}

} while (false); 
return result_44039;
}
function HEX3Aanonymous_44040(ni_44042) {
var result_44043 = null;
BeforeRet: do {
if (value_39293(evalarg_43663(ni_44042))) {
var res_44044 = evaldo_42636(evalarg_43663(ni_44042), ni_44042);
arg_43656(ni_44042);
result_44043 = res_44044;
break BeforeRet;
}
else {
arg_43656(ni_44042);
result_44043 = evaldo_42636(evalarg_43663(ni_44042), ni_44042);
break BeforeRet;
}

} while (false); 
return result_44043;
}
function HEX3Aanonymous_44045(ni_44047) {
var result_44048 = null;
BeforeRet: do {
var times_44049 = eval_42629(ni_44047.currentactivation_42581.last_42601, ni_44047).value_39128;
var fn_44050 = evalarg_43663(ni_44047);
L1: do {
var i_44060 = 0;
var res_44064 = 1;
L2: do {
L3: while (true) {
if (!(res_44064 <= times_44049)) break L3;
i_44060 = res_44064;
result_44048 = evaldo_42636(fn_44050, ni_44047);
if (ni_44047.currentactivation_42581.returned_42603) {
break BeforeRet;
}

res_44064 += 1;
}
} while(false);
} while(false);
} while (false); 
return result_44048;
}
function HEX3Aanonymous_44068(ni_44070) {
var result_44071 = null;
BeforeRet: do {
var blk1_44072 = eval_42629(ni_44070.currentactivation_42581.last_42601, ni_44070);
var blk2_44073 = evalarg_43663(ni_44070);
L1: do {
L2: while (true) {
if (!value_39293(evaldo_42636(blk1_44072, ni_44070))) break L2;
result_44071 = evaldo_42636(blk2_44073, ni_44070);
if (ni_44070.currentactivation_42581.returned_42603) {
break BeforeRet;
}

}
} while(false);
} while (false); 
return result_44071;
}
function HEX3Aanonymous_44075(ni_44077) {
var result_44078 = null;
BeforeRet: do {
var blk1_44079 = eval_42629(ni_44077.currentactivation_42581.last_42601, ni_44077);
var blk2_44080 = evalarg_43663(ni_44077);
L1: do {
L2: while (true) {
if (!!(value_39293(evaldo_42636(blk1_44079, ni_44077)))) break L2;
result_44078 = evaldo_42636(blk2_44080, ni_44077);
if (ni_44077.currentactivation_42581.returned_42603) {
break BeforeRet;
}

}
} while(false);
} while (false); 
return result_44078;
}
function HEX3Aanonymous_44082(ni_44084) {
var result_44085 = null;
exit(evalarg_43663(ni_44084).value_39128);
return result_44085;
}
var result_43685 = null;
var ni_43686 = {root_42583: newmap_40093(), currentactivation_42581: null, rootactivation_42582: null, trueval_42584: null, falseval_42585: null, undefval_42586: null, nilval_42587: null};
result_43685 = ni_43686;
ni_43686.trueval_42584 = newvalue_40527(true);
ni_43686.falseval_42585 = newvalue_40527(false);
ni_43686.nilval_42587 = newnilval_40534();
ni_43686.undefval_42586 = newundefval_40538();
makeword_43667(ni_43686, makeNimstrLit("false"), ni_43686.falseval_42585);
makeword_43667(ni_43686, makeNimstrLit("true"), ni_43686.trueval_42584);
makeword_43667(ni_43686, makeNimstrLit("undef"), ni_43686.undefval_42586);
makeword_43667(ni_43686, makeNimstrLit("nil"), ni_43686.nilval_42587);
makeword_43667(ni_43686, makeNimstrLit("activation"), newnimproc_43068(HEX3Aanonymous_43687, false, 0));
makeword_43667(ni_43686, makeNimstrLit("locals"), newnimproc_43068(HEX3Aanonymous_43691, false, 0));
makeword_43667(ni_43686, makeNimstrLit("self"), newnimproc_43068(HEX3Aanonymous_43702, false, 0));
makeword_43667(ni_43686, makeNimstrLit("object"), newnimproc_43068(HEX3Aanonymous_43706, false, 1));
makeword_43667(ni_43686, makeNimstrLit("tag:"), newnimproc_43068(HEX3Aanonymous_43710, true, 2));
makeword_43667(ni_43686, makeNimstrLit("tag?"), newnimproc_43068(HEX3Aanonymous_43723, true, 2));
makeword_43667(ni_43686, makeNimstrLit("tags"), newnimproc_43068(HEX3Aanonymous_43737, true, 1));
makeword_43667(ni_43686, makeNimstrLit("tags:"), newnimproc_43068(HEX3Aanonymous_43750, true, 2));
makeword_43667(ni_43686, makeNimstrLit("?"), newnimproc_43068(HEX3Aanonymous_43754, true, 1));
makeword_43667(ni_43686, makeNimstrLit("="), newnimproc_43068(HEX3Aanonymous_43761, true, 2));
makeword_43667(ni_43686, makeNimstrLit("+"), newnimproc_43068(HEX3Aanonymous_43765, true, 2));
makeword_43667(ni_43686, makeNimstrLit("-"), newnimproc_43068(HEX3Aanonymous_43769, true, 2));
makeword_43667(ni_43686, makeNimstrLit("*"), newnimproc_43068(HEX3Aanonymous_43773, true, 2));
makeword_43667(ni_43686, makeNimstrLit("/"), newnimproc_43068(HEX3Aanonymous_43777, true, 2));
makeword_43667(ni_43686, makeNimstrLit("<"), newnimproc_43068(HEX3Aanonymous_43781, true, 2));
makeword_43667(ni_43686, makeNimstrLit(">"), newnimproc_43068(HEX3Aanonymous_43785, true, 2));
makeword_43667(ni_43686, makeNimstrLit("<="), newnimproc_43068(HEX3Aanonymous_43789, true, 2));
makeword_43667(ni_43686, makeNimstrLit(">="), newnimproc_43068(HEX3Aanonymous_43793, true, 2));
makeword_43667(ni_43686, makeNimstrLit("=="), newnimproc_43068(HEX3Aanonymous_43797, true, 2));
makeword_43667(ni_43686, makeNimstrLit("!="), newnimproc_43068(HEX3Aanonymous_43801, true, 2));
makeword_43667(ni_43686, makeNimstrLit("not"), newnimproc_43068(HEX3Aanonymous_43805, false, 1));
makeword_43667(ni_43686, makeNimstrLit("and"), newnimproc_43068(HEX3Aanonymous_43809, true, 2));
makeword_43667(ni_43686, makeNimstrLit("or"), newnimproc_43068(HEX3Aanonymous_43815, true, 2));
makeword_43667(ni_43686, makeNimstrLit(","), newnimproc_43068(HEX3Aanonymous_43821, true, 2));
makeword_43667(ni_43686, makeNimstrLit("asFloat"), newnimproc_43068(HEX3Aanonymous_43834, true, 1));
makeword_43667(ni_43686, makeNimstrLit("asInt"), newnimproc_43068(HEX3Aanonymous_43843, true, 1));
makeword_43667(ni_43686, makeNimstrLit("size"), newnimproc_43068(HEX3Aanonymous_43852, true, 1));
makeword_43667(ni_43686, makeNimstrLit("at:"), newnimproc_43068(HEX3Aanonymous_43864, true, 2));
makeword_43667(ni_43686, makeNimstrLit("at:put:"), newnimproc_43068(HEX3Aanonymous_43873, true, 3));
makeword_43667(ni_43686, makeNimstrLit("read"), newnimproc_43068(HEX3Aanonymous_43884, true, 1));
makeword_43667(ni_43686, makeNimstrLit("write:"), newnimproc_43068(HEX3Aanonymous_43889, true, 2));
makeword_43667(ni_43686, makeNimstrLit("add:"), newnimproc_43068(HEX3Aanonymous_43894, true, 2));
makeword_43667(ni_43686, makeNimstrLit("removeLast"), newnimproc_43068(HEX3Aanonymous_43899, true, 1));
makeword_43667(ni_43686, makeNimstrLit("contains:"), newnimproc_43068(HEX3Aanonymous_43904, true, 2));
makeword_43667(ni_43686, makeNimstrLit("reset"), newnimproc_43068(HEX3Aanonymous_43909, true, 1));
makeword_43667(ni_43686, makeNimstrLit("pos"), newnimproc_43068(HEX3Aanonymous_43913, true, 1));
makeword_43667(ni_43686, makeNimstrLit("pos:"), newnimproc_43068(HEX3Aanonymous_43917, true, 2));
makeword_43667(ni_43686, makeNimstrLit("next"), newnimproc_43068(HEX3Aanonymous_43922, true, 1));
makeword_43667(ni_43686, makeNimstrLit("prev"), newnimproc_43068(HEX3Aanonymous_43944, true, 1));
makeword_43667(ni_43686, makeNimstrLit("end?"), newnimproc_43068(HEX3Aanonymous_43958, true, 1));
makeword_43667(ni_43686, makeNimstrLit("first"), newnimproc_43068(HEX3Aanonymous_43971, true, 1));
makeword_43667(ni_43686, makeNimstrLit("second"), newnimproc_43068(HEX3Aanonymous_43975, true, 1));
makeword_43667(ni_43686, makeNimstrLit("third"), newnimproc_43068(HEX3Aanonymous_43979, true, 1));
makeword_43667(ni_43686, makeNimstrLit("fourth"), newnimproc_43068(HEX3Aanonymous_43983, true, 1));
makeword_43667(ni_43686, makeNimstrLit("fifth"), newnimproc_43068(HEX3Aanonymous_43987, true, 1));
makeword_43667(ni_43686, makeNimstrLit("last"), newnimproc_43068(HEX3Aanonymous_43991, true, 1));
makeword_43667(ni_43686, makeNimstrLit("func"), newnimproc_43068(HEX3Aanonymous_43996, false, 1));
makeword_43667(ni_43686, makeNimstrLit("funci"), newnimproc_43068(HEX3Aanonymous_44000, false, 1));
makeword_43667(ni_43686, makeNimstrLit("do"), newnimproc_43068(HEX3Aanonymous_44004, false, 1));
makeword_43667(ni_43686, makeNimstrLit("^"), newnimproc_43068(HEX3Aanonymous_44008, false, 1));
makeword_43667(ni_43686, makeNimstrLit("eva"), newnimproc_43068(HEX3Aanonymous_44012, false, 1));
makeword_43667(ni_43686, makeNimstrLit("eval"), newnimproc_43068(HEX3Aanonymous_44016, false, 1));
makeword_43667(ni_43686, makeNimstrLit("parse"), newnimproc_43068(HEX3Aanonymous_44020, false, 1));
makeword_43667(ni_43686, makeNimstrLit("serialize"), newnimproc_43068(HEX3Aanonymous_44024, false, 1));
makeword_43667(ni_43686, makeNimstrLit("deserialize"), newnimproc_43068(HEX3Aanonymous_44028, false, 1));
makeword_43667(ni_43686, makeNimstrLit("return"), newnimproc_43068(HEX3Aanonymous_44032, false, 1));
makeword_43667(ni_43686, makeNimstrLit("if"), newnimproc_43068(HEX3Aanonymous_44036, false, 2));
makeword_43667(ni_43686, makeNimstrLit("ifelse"), newnimproc_43068(HEX3Aanonymous_44040, false, 3));
makeword_43667(ni_43686, makeNimstrLit("timesRepeat:"), newnimproc_43068(HEX3Aanonymous_44045, true, 2));
makeword_43667(ni_43686, makeNimstrLit("whileTrue:"), newnimproc_43068(HEX3Aanonymous_44068, true, 2));
makeword_43667(ni_43686, makeNimstrLit("whileFalse:"), newnimproc_43068(HEX3Aanonymous_44075, true, 2));
makeword_43667(ni_43686, makeNimstrLit("quit"), newnimproc_43068(HEX3Aanonymous_44082, false, 1));
ni_43686.rootactivation_42582 = newrootactivation_43082(ni_43686.root_42583);
ni_43686.rootactivation_42582.parent_42604 = ni_43686.currentactivation_42581;
ni_43686.currentactivation_42581 = ni_43686.rootactivation_42582;
return result_43685;
}
function cstrToNimstr(c_12295) {
  var ln = c_12295.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_12295.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function factorial(n_45003) {
var result_45004 = 0;
result_45004 = eval_44430(newinterpreter_43683(), (makeNimstrLit("[\x0A    factorial = func [ifelse (:n > 0) [n * factorial (n - 1)] [1]]\x0A    factorial ").slice(0,-1)).concat(cstrToNimstr((n_45003)+"").slice(0,-1),makeNimstrLit("]"))).value_39128;
return result_45004;
}
function hash_30202(x_30204) {
var result_30205 = 0;
var y_30206 = /**/[(x_30204 + 1.0000000000000000e+00)];
result_30205 = y_30206[0];
return result_30205;
}
function hash_39256(self_39258) {
var result_39259 = 0;
result_39259 = hash_30202(self_39258.value_39131);
return result_39259;
}
function hash_29801(x_29803) {
var result_29804 = 0;
result_29804 = x_29803;
return result_29804;
}
function hash_39245(self_39247) {
var result_39248 = 0;
result_39248 = hash_29801(self_39247.value_39128);
return result_39248;
}
function HEX21HEX26_29004(h_29006, val_29007) {
var result_29008 = 0;
result_29008 = ((h_29006 + val_29007) >>> 0);
result_29008 = ((result_29008 + (result_29008 << 10)) >>> 0);
result_29008 = (result_29008 ^ ((result_29008 >>> 0) >>> 6));
return result_29008;
}
function HEX21HEX24_29027(h_29029) {
var result_29030 = 0;
result_29030 = ((h_29029 + (h_29029 << 3)) >>> 0);
result_29030 = (result_29030 ^ ((result_29030 >>> 0) >>> 11));
result_29030 = ((result_29030 + (result_29030 << 15)) >>> 0);
return result_29030;
}
function hash_29827(x_29829) {
var result_29830 = 0;
var h_29831 = 0;
L1: do {
var i_29841 = 0;
var HEX3Atmp_29852 = 0;
HEX3Atmp_29852 = ((x_29829 != null ? x_29829.length-1 : 0) - 1);
var res_29855 = 0;
L2: do {
L3: while (true) {
if (!(res_29855 <= HEX3Atmp_29852)) break L3;
i_29841 = res_29855;
h_29831 = HEX21HEX26_29004(h_29831, x_29829[i_29841]);
res_29855 += 1;
}
} while(false);
} while(false);
result_29830 = HEX21HEX24_29027(h_29831);
return result_29830;
}
function hash_39232(self_39234) {
var result_39235 = 0;
result_39235 = hash_29827(self_39234.word_39095);
return result_39235;
}
function hash_39267(self_39269) {
var result_39270 = 0;
result_39270 = hash_29827(self_39269.value_39134);
return result_39270;
}
function hash_39321(self_39323) {
var result_39324 = 0;
result_39324 = hash_29801(1);
return result_39324;
}
function hash_39284(self_39286) {
var result_39287 = 0;
result_39287 = hash_29801(0);
return result_39287;
}
function hash_39280(self_39282) {
var result_39283 = 0;
result_39283 = hash_29801(1);
return result_39283;
}
function hash_39332(self_39334) {
var result_39335 = 0;
result_39335 = hash_29801(2);
return result_39335;
}
function hash_39213(self_39215) {
var result_39216 = 0;
raiseruntimeexception_39196(makeNimstrLit("Nodes need to implement hash"));
return result_39216;
}
function hash_39218(self_39215) {
var result_39221 = 0;
BeforeRet: do {
if (isObj(self_39215.m_type, NTI39130)) {
result_39221 = hash_39256(self_39215);
break BeforeRet;
}
else {
if (isObj(self_39215.m_type, NTI39127)) {
result_39221 = hash_39245(self_39215);
break BeforeRet;
}
else {
if (isObj(self_39215.m_type, NTI39094)) {
result_39221 = hash_39232(self_39215);
break BeforeRet;
}
else {
if (isObj(self_39215.m_type, NTI39133)) {
result_39221 = hash_39267(self_39215);
break BeforeRet;
}
else {
if (isObj(self_39215.m_type, NTI39144)) {
result_39221 = hash_39321(self_39215);
break BeforeRet;
}
else {
if (isObj(self_39215.m_type, NTI39140)) {
result_39221 = hash_39284(self_39215);
break BeforeRet;
}
else {
if (isObj(self_39215.m_type, NTI39138)) {
result_39221 = hash_39280(self_39215);
break BeforeRet;
}
else {
if (isObj(self_39215.m_type, NTI39142)) {
result_39221 = hash_39332(self_39215);
break BeforeRet;
}
else {
if (isObj(self_39215.m_type, NTI39091)) {
result_39221 = hash_39213(self_39215);
break BeforeRet;
}
}}}}}}}}
} while (false); 
return result_39221;
}
function HEX3DHEX3D_39311(self_39313, other_39314) {
var result_39315 = false;
result_39315 = false;
return result_39315;
}
function HEX3DHEX3D_39306(self_39308, other_39309) {
var result_39310 = false;
result_39310 = true;
return result_39310;
}
function HEX3DHEX3D_39301(self_39303, other_39304) {
var result_39305 = false;
result_39305 = true;
return result_39305;
}
function HEX3DHEX3D_39316(self_39318, other_39319) {
var result_39320 = false;
result_39320 = false;
return result_39320;
}
function HEX3DHEX3D_39249(self_39251, other_39252) {
var Tmp1;
var result_39253 = false;
if (!isObj(other_39252.m_type, NTI39127)) Tmp1 = false; else {Tmp1 = (self_39251.value_39128 == other_39252.value_39128); }result_39253 = Tmp1;
return result_39253;
}
function HEX3DHEX3D_39238(self_39240, other_39241) {
var Tmp1;
var result_39242 = false;
if (!isObj(other_39241.m_type, NTI39094)) Tmp1 = false; else {Tmp1 = eqStrings(self_39240.word_39095, other_39241.word_39095); }result_39242 = Tmp1;
return result_39242;
}
function HEX3DHEX3D_39260(self_39262, other_39263) {
var Tmp1;
var result_39264 = false;
if (!isObj(other_39263.m_type, NTI39130)) Tmp1 = false; else {Tmp1 = (self_39262.value_39131 == other_39263.value_39131); }result_39264 = Tmp1;
return result_39264;
}
function HEX3DHEX3D_39336(self_39338, other_39339) {
var result_39340 = false;
result_39340 = isObj(other_39339.m_type, NTI39142);
return result_39340;
}
function HEX3DHEX3D_39325(self_39327, other_39328) {
var result_39329 = false;
result_39329 = isObj(other_39328.m_type, NTI39144);
return result_39329;
}
function HEX3DHEX3D_39273(self_39275, other_39276) {
var Tmp1;
var result_39277 = false;
if (!isObj(other_39276.m_type, NTI39133)) Tmp1 = false; else {Tmp1 = eqStrings(self_39275.value_39134, other_39276.value_39134); }result_39277 = Tmp1;
return result_39277;
}
function HEX3DHEX3D_39222(self_39224, other_39225) {
var result_39226 = false;
raiseruntimeexception_39196(makeNimstrLit("Nodes need to implement =="));
return result_39226;
}
function HEX3DHEX3D_39228(self_39224, other_39225) {
var result_39231 = false;
BeforeRet: do {
if ((isObj(self_39224.m_type, NTI39138) & isObj(other_39225.m_type, NTI39140))) {
result_39231 = HEX3DHEX3D_39311(self_39224, other_39225);
break BeforeRet;
}
else {
if ((isObj(self_39224.m_type, NTI39140) & isObj(other_39225.m_type, NTI39140))) {
result_39231 = HEX3DHEX3D_39306(self_39224, other_39225);
break BeforeRet;
}
else {
if ((isObj(self_39224.m_type, NTI39138) & isObj(other_39225.m_type, NTI39138))) {
result_39231 = HEX3DHEX3D_39301(self_39224, other_39225);
break BeforeRet;
}
else {
if ((isObj(self_39224.m_type, NTI39140) & isObj(other_39225.m_type, NTI39138))) {
result_39231 = HEX3DHEX3D_39316(self_39224, other_39225);
break BeforeRet;
}
else {
if ((isObj(self_39224.m_type, NTI39127) & isObj(other_39225.m_type, NTI39091))) {
result_39231 = HEX3DHEX3D_39249(self_39224, other_39225);
break BeforeRet;
}
else {
if ((isObj(self_39224.m_type, NTI39094) & isObj(other_39225.m_type, NTI39091))) {
result_39231 = HEX3DHEX3D_39238(self_39224, other_39225);
break BeforeRet;
}
else {
if ((isObj(self_39224.m_type, NTI39130) & isObj(other_39225.m_type, NTI39091))) {
result_39231 = HEX3DHEX3D_39260(self_39224, other_39225);
break BeforeRet;
}
else {
if ((isObj(self_39224.m_type, NTI39142) & isObj(other_39225.m_type, NTI39091))) {
result_39231 = HEX3DHEX3D_39336(self_39224, other_39225);
break BeforeRet;
}
else {
if ((isObj(self_39224.m_type, NTI39144) & isObj(other_39225.m_type, NTI39091))) {
result_39231 = HEX3DHEX3D_39325(self_39224, other_39225);
break BeforeRet;
}
else {
if ((isObj(self_39224.m_type, NTI39133) & isObj(other_39225.m_type, NTI39091))) {
result_39231 = HEX3DHEX3D_39273(self_39224, other_39225);
break BeforeRet;
}
else {
if ((isObj(self_39224.m_type, NTI39091) & isObj(other_39225.m_type, NTI39091))) {
result_39231 = HEX3DHEX3D_39222(self_39224, other_39225);
break BeforeRet;
}
}}}}}}}}}}
} while (false); 
return result_39231;
}
function value_39297(self_39299) {
var result_39300 = false;
result_39300 = false;
return result_39300;
}
function value_39288(self_39290) {
var result_39291 = false;
result_39291 = true;
return result_39291;
}
function value_39293(self_39290) {
var result_39296 = false;
BeforeRet: do {
if (isObj(self_39290.m_type, NTI39140)) {
result_39296 = value_39297(self_39290);
break BeforeRet;
}
else {
if (isObj(self_39290.m_type, NTI39136)) {
result_39296 = value_39288(self_39290);
break BeforeRet;
}
}
} while (false); 
return result_39296;
}
function HEX24_39758(self_39760) {
var result_39761 = null;
result_39761 = (makeNimstrLit("^").slice(0,-1)).concat(self_39760.word_39095);
return result_39761;
}
function HEX24_42801(self_42803) {
var result_42804 = null;
BeforeRet: do {
result_42804 = (makeNimstrLit("activation [").slice(0,-1)).concat(HEX24_39604(self_42803.body_42606).slice(0,-1),makeNimstrLit(" ").slice(0,-1),cstrToNimstr((self_42803.pos_42605)+"").slice(0,-1),makeNimstrLit("]"));
break BeforeRet;
} while (false); 
return result_42804;
}
function HEX24_39762(self_39764) {
var result_39765 = null;
result_39765 = (makeNimstrLit("^.").slice(0,-1)).concat(self_39764.word_39095);
return result_39765;
}
function HEX24_39774(self_39776) {
var result_39777 = null;
result_39777 = (makeNimstrLit(":").slice(0,-1)).concat(self_39776.word_39095);
return result_39777;
}
function HEX24_39770(self_39772) {
var result_39773 = null;
result_39773 = (makeNimstrLit("\'").slice(0,-1)).concat(self_39772.word_39095);
return result_39773;
}
function HEX24_39766(self_39768) {
var result_39769 = null;
result_39769 = (makeNimstrLit("^..").slice(0,-1)).concat(self_39768.word_39095);
return result_39769;
}
function HEX24_39778(self_39780) {
var result_39781 = null;
result_39781 = (makeNimstrLit(":^").slice(0,-1)).concat(self_39780.word_39095);
return result_39781;
}
function nsuJoinSep(a_23585, sep_23586) {
var result_23587 = null;
if ((0 < (a_23585 != null ? a_23585.length : 0))) {
var L_23602 = ((sep_23586 != null ? sep_23586.length-1 : 0) * ((a_23585 != null ? a_23585.length : 0) - 1));
L1: do {
var i_23612 = 0;
var HEX3Atmp_23633 = 0;
HEX3Atmp_23633 = (a_23585 != null ? (a_23585.length-1) : -1);
var res_23636 = 0;
L2: do {
L3: while (true) {
if (!(res_23636 <= HEX3Atmp_23633)) break L3;
i_23612 = res_23636;
L_23602 += (a_23585[i_23612] != null ? a_23585[i_23612].length-1 : 0);
res_23636 += 1;
}
} while(false);
} while(false);
result_23587 = mnewString(0);
if (result_23587 != null) { result_23587 = (result_23587.slice(0, -1)).concat(a_23585[0]); } else { result_23587 = a_23585[0];};
L4: do {
var i_23631 = 0;
var HEX3Atmp_23641 = 0;
HEX3Atmp_23641 = (a_23585 != null ? (a_23585.length-1) : -1);
var res_23644 = 1;
L5: do {
L6: while (true) {
if (!(res_23644 <= HEX3Atmp_23641)) break L6;
i_23631 = res_23644;
if (result_23587 != null) { result_23587 = (result_23587.slice(0, -1)).concat(sep_23586); } else { result_23587 = sep_23586;};
if (result_23587 != null) { result_23587 = (result_23587.slice(0, -1)).concat(a_23585[i_23631]); } else { result_23587 = a_23585[i_23631];};
res_23644 += 1;
}
} while(false);
} while(false);
}
else {
result_23587 = makeNimstrLit("");
}

return result_23587;
}
function map_39686(data_39692, op_39697) {
var result_39699 = null;
result_39699 = new Array((data_39692 != null ? data_39692.length : 0)); for (var i=0;i<(data_39692 != null ? data_39692.length : 0);++i) {result_39699[i]=null;}L1: do {
var i_39733 = 0;
var HEX3Atmp_39735 = 0;
HEX3Atmp_39735 = ((data_39692 != null ? data_39692.length : 0) - 1);
var res_39738 = 0;
L2: do {
L3: while (true) {
if (!(res_39738 <= HEX3Atmp_39735)) break L3;
i_39733 = res_39738;
result_39699[i_39733] = op_39697(data_39692[i_39733]);
res_39738 += 1;
}
} while(false);
} while(false);
return result_39699;
}
function HEX24_39670(self_39673) {
function HEX3Aanonymous_39678(n_39680) {
var result_39681 = null;
result_39681 = HEX24_39604(n_39680);
return result_39681;
}
var result_39674 = null;
result_39674 = nsuJoinSep(map_39686(self_39673, HEX3Aanonymous_39678), makeNimstrLit(" "));
return result_39674;
}
function HEX24_39790(self_39792) {
var result_39793 = null;
result_39793 = (makeNimstrLit("{").slice(0,-1)).concat(HEX24_39670(self_39792.nodes_39150).slice(0,-1),makeNimstrLit("}"));
return result_39793;
}
function HEX24_39786(self_39788) {
var result_39789 = null;
result_39789 = (makeNimstrLit("(").slice(0,-1)).concat(HEX24_39670(self_39788.nodes_39150).slice(0,-1),makeNimstrLit(")"));
return result_39789;
}
function HEX24_39794(self_39796) {
var result_39797 = null;
result_39797 = makeNimstrLit("");
L1: do {
var i_39815 = 0;
var HEX3Atmp_39817 = 0;
HEX3Atmp_39817 = ((self_39796.keys_39121 != null ? self_39796.keys_39121.length : 0) - 1);
var res_39820 = 0;
L2: do {
L3: while (true) {
if (!(res_39820 <= HEX3Atmp_39817)) break L3;
i_39815 = res_39820;
result_39797 = (result_39797.slice(0,-1)).concat(self_39796.keys_39121[i_39815].slice(0,-1),makeNimstrLit(" ").slice(0,-1),HEX24_39604(self_39796.args_39123[i_39815]));
res_39820 += 1;
}
} while(false);
} while(false);
return result_39797;
}
function HEX24_39754(self_39756) {
var result_39757 = null;
result_39757 = (makeNimstrLit("..").slice(0,-1)).concat(self_39756.word_39095);
return result_39757;
}
function HEX24_42642(self_42644) {
var result_42645 = null;
BeforeRet: do {
if (self_42644.infix_42597) {
result_42645 = makeNimstrLit("funci ");
}
else {
result_42645 = makeNimstrLit("func ");
}

result_42645 = (result_42645.slice(0,-1)).concat(makeNimstrLit("[").slice(0,-1),HEX24_39670(self_42644.nodes_39150).slice(0,-1),makeNimstrLit("]"));
break BeforeRet;
} while (false); 
return result_42645;
}
function HEX24_39782(self_39784) {
var result_39785 = null;
result_39785 = (makeNimstrLit("[").slice(0,-1)).concat(HEX24_39670(self_39784.nodes_39150).slice(0,-1),makeNimstrLit("]"));
return result_39785;
}
function HEX24_42638(self_42640) {
var result_42641 = null;
BeforeRet: do {
if (self_42640.infix_42593) {
result_42641 = makeNimstrLit("nimi");
}
else {
result_42641 = makeNimstrLit("nim");
}

result_42641 = (result_42641.slice(0,-1)).concat(makeNimstrLit("(").slice(0,-1),cstrToNimstr((self_42640.arity_42594)+"").slice(0,-1),makeNimstrLit(")"));
break BeforeRet;
} while (false); 
return result_42641;
}
function HEX24_39608(self_39610) {
var result_39611 = null;
result_39611 = (HEX24_39604(self_39610.key_39193).slice(0,-1)).concat(makeNimstrLit(" = ").slice(0,-1),HEX24_39604(self_39610.val_39194));
return result_39611;
}
function HEX24_39646(self_39648) {
var result_39649 = null;
result_39649 = cstrToNimstr((self_39648.value_39131)+"");
return result_39649;
}
function HEX24_39642(self_39644) {
var result_39645 = null;
result_39645 = cstrToNimstr((self_39644.value_39128)+"");
return result_39645;
}
function HEX24_39612(self_39614) {
var result_39615 = null;
BeforeRet: do {
result_39615 = makeNimstrLit("{");
var first_39616 = true;
L1: do {
var k_39633 = null;
var v_39634 = null;
var HEX3Atmp_39636 = null;
HEX3Atmp_39636 = self_39614.bindings_39190;
var h_39639 = HEX3Atmp_39636.first_39186;
L2: do {
L3: while (true) {
if (!(0 <= h_39639)) break L3;
var nxt_39641 = HEX3Atmp_39636.data_39181[h_39639].Field1;
if (isfilled_35263(HEX3Atmp_39636.data_39181[h_39639].Field0)) {
k_39633 = HEX3Atmp_39636.data_39181[h_39639].Field2;
v_39634 = HEX3Atmp_39636.data_39181[h_39639].Field3;
if (first_39616) {
if (result_39615 != null) { result_39615 = (result_39615.slice(0, -1)).concat(HEX24_39604(v_39634)); } else { result_39615 = HEX24_39604(v_39634);};
first_39616 = false;
}
else {
if (result_39615 != null) { result_39615 = (result_39615.slice(0, -1)).concat((makeNimstrLit(" ").slice(0,-1)).concat(HEX24_39604(v_39634))); } else { result_39615 = (makeNimstrLit(" ").slice(0,-1)).concat(HEX24_39604(v_39634));};
}

}

h_39639 = nxt_39641;
}
} while(false);
} while(false);
result_39615 = (result_39615.slice(0,-1)).concat(makeNimstrLit("}"));
break BeforeRet;
} while (false); 
return result_39615;
}
function nsuToHex(x_22519, len_22520) {
var result_22521 = null;
var n_22523 = x_22519;
result_22521 = mnewString(len_22520);
L1: do {
var j_22614 = 0;
var HEX3Atmp_22618 = 0;
HEX3Atmp_22618 = (len_22520 - 1);
var res_22621 = HEX3Atmp_22618;
L2: do {
L3: while (true) {
if (!(0 <= res_22621)) break L3;
j_22614 = res_22621;
result_22521[j_22614] = makeNimstrLit("0123456789ABCDEF")[(n_22523 & 15)];
n_22523 = ((n_22523 ) >>> 4);
if (((n_22523 == 0) && (x_22519 < 0))) {
n_22523 = -1;
}

res_22621 -= 1;
}
} while(false);
} while(false);
return result_22521;
}
function nsuEscape(s_24895, prefix_24896, suffix_24897) {
var result_24898 = null;
result_24898 = mnewString(0);
if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(prefix_24896); } else { result_24898 = prefix_24896;};
L1: do {
var c_24900 = 0;
var i_24912 = 0;
var L_24914 = (s_24895 != null ? s_24895.length-1 : 0);
L2: do {
L3: while (true) {
if (!(i_24912 < L_24914)) break L3;
c_24900 = s_24895[i_24912];
switch (c_24900) {
case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7: case 8: case 9: case 10: case 11: case 12: case 13: case 14: case 15: case 16: case 17: case 18: case 19: case 20: case 21: case 22: case 23: case 24: case 25: case 26: case 27: case 28: case 29: case 30: case 31: case 128: case 129: case 130: case 131: case 132: case 133: case 134: case 135: case 136: case 137: case 138: case 139: case 140: case 141: case 142: case 143: case 144: case 145: case 146: case 147: case 148: case 149: case 150: case 151: case 152: case 153: case 154: case 155: case 156: case 157: case 158: case 159: case 160: case 161: case 162: case 163: case 164: case 165: case 166: case 167: case 168: case 169: case 170: case 171: case 172: case 173: case 174: case 175: case 176: case 177: case 178: case 179: case 180: case 181: case 182: case 183: case 184: case 185: case 186: case 187: case 188: case 189: case 190: case 191: case 192: case 193: case 194: case 195: case 196: case 197: case 198: case 199: case 200: case 201: case 202: case 203: case 204: case 205: case 206: case 207: case 208: case 209: case 210: case 211: case 212: case 213: case 214: case 215: case 216: case 217: case 218: case 219: case 220: case 221: case 222: case 223: case 224: case 225: case 226: case 227: case 228: case 229: case 230: case 231: case 232: case 233: case 234: case 235: case 236: case 237: case 238: case 239: case 240: case 241: case 242: case 243: case 244: case 245: case 246: case 247: case 248: case 249: case 250: case 251: case 252: case 253: case 254: case 255: if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(makeNimstrLit("\\x")); } else { result_24898 = makeNimstrLit("\\x");};
if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(nsuToHex(c_24900, 2)); } else { result_24898 = nsuToHex(c_24900, 2);};

break;
case 92: if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(makeNimstrLit("\\\\")); } else { result_24898 = makeNimstrLit("\\\\");};

break;
case 39: if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(makeNimstrLit("\\\'")); } else { result_24898 = makeNimstrLit("\\\'");};

break;
case 34: if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(makeNimstrLit("\\\"")); } else { result_24898 = makeNimstrLit("\\\"");};

break;
default: 
if (result_24898 != null) { addChar(result_24898, c_24900); } else { result_24898 = [c_24900, 0]; };
break;
}
i_24912 += 1;
}
} while(false);
} while(false);
if (result_24898 != null) { result_24898 = (result_24898.slice(0, -1)).concat(suffix_24897); } else { result_24898 = suffix_24897;};
return result_24898;
}
function HEX24_39650(self_39652) {
var result_39653 = null;
result_39653 = nsuEscape(self_39652.value_39134, makeNimstrLit("\""), makeNimstrLit("\""));
return result_39653;
}
function HEX24_39662(self_39664) {
var result_39665 = null;
result_39665 = makeNimstrLit("nil");
return result_39665;
}
function HEX24_39658(self_39660) {
var result_39661 = null;
result_39661 = makeNimstrLit("false");
return result_39661;
}
function HEX24_39654(self_39656) {
var result_39657 = null;
result_39657 = makeNimstrLit("true");
return result_39657;
}
function HEX24_39666(self_39668) {
var result_39669 = null;
result_39669 = makeNimstrLit("undef");
return result_39669;
}
function HEX24_39750(self_39752) {
var result_39753 = null;
result_39753 = (makeNimstrLit(".").slice(0,-1)).concat(self_39752.word_39095);
return result_39753;
}
function HEX24_39746(self_39748) {
var result_39749 = null;
result_39749 = self_39748.word_39095;
return result_39749;
}
function HEX24_39742(self_39744) {
var result_39745 = null;
result_39745 = self_39744.word_39095;
return result_39745;
}
function rawEcho() {
var node_12430 = null;
node_12430 = document.getElementsByTagName('body')[0];if ((node_12430 === null)) {
var e_12442 = null;
e_12442 = {m_type: NTI3428, parent: null, name: null, message: null, trace: null};
e_12442.message = makeNimstrLit("<body> element does not exist yet!");
raiseException(e_12442, "IOError");
}

    for (var i = 0; i < arguments.length; ++i) {
      var x = toJSStr(arguments[i]);
      node_12430.appendChild(document.createTextNode(x));
    }
    node_12430.appendChild(document.createElement("br"));
    }
function HEX24_39425(self_39427) {
var result_39428 = null;
rawEcho(makeNimstrLit("repr not available in js"));
return result_39428;
}
function HEX24_39604(self_39427) {
var result_39607 = null;
BeforeRet: do {
if (isObj(self_39427.m_type, NTI39111)) {
result_39607 = HEX24_39758(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI42600)) {
result_39607 = HEX24_42801(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39113)) {
result_39607 = HEX24_39762(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39109)) {
result_39607 = HEX24_39774(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39101)) {
result_39607 = HEX24_39770(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39115)) {
result_39607 = HEX24_39766(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39117)) {
result_39607 = HEX24_39778(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39157)) {
result_39607 = HEX24_39790(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39153)) {
result_39607 = HEX24_39786(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39119)) {
result_39607 = HEX24_39794(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39107)) {
result_39607 = HEX24_39754(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI42596)) {
result_39607 = HEX24_42642(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39155)) {
result_39607 = HEX24_39782(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI42591)) {
result_39607 = HEX24_42638(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39192)) {
result_39607 = HEX24_39608(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39130)) {
result_39607 = HEX24_39646(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39127)) {
result_39607 = HEX24_39642(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39159)) {
result_39607 = HEX24_39612(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39133)) {
result_39607 = HEX24_39650(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39144)) {
result_39607 = HEX24_39662(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39140)) {
result_39607 = HEX24_39658(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39138)) {
result_39607 = HEX24_39654(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39142)) {
result_39607 = HEX24_39666(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39105)) {
result_39607 = HEX24_39750(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39103)) {
result_39607 = HEX24_39746(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39094)) {
result_39607 = HEX24_39742(self_39427);
break BeforeRet;
}
else {
if (isObj(self_39427.m_type, NTI39091)) {
result_39607 = HEX24_39425(self_39427);
break BeforeRet;
}
}}}}}}}}}}}}}}}}}}}}}}}}}}
} while (false); 
return result_39607;
}
function form_39833(self_39835) {
var result_39836 = null;
result_39836 = self_39835.value_39134;
return result_39836;
}
function form_39824(self_39826) {
var result_39827 = null;
result_39827 = HEX24_39604(self_39826);
return result_39827;
}
function form_39829(self_39826) {
var result_39832 = null;
BeforeRet: do {
if (isObj(self_39826.m_type, NTI39133)) {
result_39832 = form_39833(self_39826);
break BeforeRet;
}
else {
if (isObj(self_39826.m_type, NTI39091)) {
result_39832 = form_39824(self_39826);
break BeforeRet;
}
}
} while (false); 
return result_39832;
}
function newcurly_40474(nodes_40477) {
var result_40478 = null;
result_40478 = {nodes_39150: nodes_40477, m_type: NTI39157, pos_39151: 0, tags_39092: null};
return result_40478;
}
function concat_40708(seqs_40714) {
var result_40716 = null;
var L_40717 = 0;
L1: do {
var seqitm_40743 = null;
var i_41015 = 0;
L2: do {
L3: while (true) {
if (!(i_41015 < (seqs_40714 != null ? seqs_40714.length : 0))) break L3;
seqitm_40743 = seqs_40714[i_41015];
L_40717 += (seqitm_40743 != null ? seqitm_40743.length : 0);
i_41015 += 1;
}
} while(false);
} while(false);
result_40716 = new Array(L_40717); for (var i=0;i<L_40717;++i) {result_40716[i]=null;}var i_40771 = 0;
L4: do {
var s_40779 = null;
var i_41025 = 0;
L5: do {
L6: while (true) {
if (!(i_41025 < (seqs_40714 != null ? seqs_40714.length : 0))) break L6;
s_40779 = seqs_40714[i_41025];
L7: do {
var itm_41002 = null;
var i_41020 = 0;
var L_41022 = (s_40779 != null ? s_40779.length : 0);
L8: do {
L9: while (true) {
if (!(i_41020 < L_41022)) break L9;
itm_41002 = s_40779[i_41020];
result_40716[i_40771] = itm_41002;
i_40771 += 1;
i_41020 += 1;
}
} while(false);
} while(false);
i_41025 += 1;
}
} while(false);
} while(false);
return result_40716;
}
function concat_41050(self_41052, nodes_41054) {
var result_41055 = null;
result_41055 = newcurly_40474(concat_40708([self_41052.nodes_39150, nodes_41054]));
return result_41055;
}
function newparen_40436(nodes_40439) {
var result_40440 = null;
result_40440 = {nodes_39150: nodes_40439, m_type: NTI39153, pos_39151: 0, tags_39092: null};
return result_40440;
}
function concat_41026(self_41028, nodes_41030) {
var result_41031 = null;
result_41031 = newparen_40436(concat_40708([self_41028.nodes_39150, nodes_41030]));
return result_41031;
}
function newblok_40398(nodes_40401) {
var result_40402 = null;
result_40402 = {nodes_39150: nodes_40401, m_type: NTI39155, pos_39151: 0, tags_39092: null};
return result_40402;
}
function concat_40693(self_40695, nodes_40697) {
var result_40698 = null;
result_40698 = newblok_40398(concat_40708([self_40695.nodes_39150, nodes_40697]));
return result_40698;
}
function concat_40682(self_40684, nodes_40686) {
var result_40687 = null;
raiseruntimeexception_39196((makeNimstrLit("Should not happen...").slice(0,-1)).concat(HEX24_39604(self_40684).slice(0,-1),makeNimstrLit(" ").slice(0,-1),HEX24_39670(nodes_40686)));
return result_40687;
}
function concat_40689(self_40684, nodes_40686) {
var result_40692 = null;
BeforeRet: do {
if (isObj(self_40684.m_type, NTI39157)) {
result_40692 = concat_41050(self_40684, nodes_40686);
break BeforeRet;
}
else {
if (isObj(self_40684.m_type, NTI39153)) {
result_40692 = concat_41026(self_40684, nodes_40686);
break BeforeRet;
}
else {
if (isObj(self_40684.m_type, NTI39155)) {
result_40692 = concat_40693(self_40684, nodes_40686);
break BeforeRet;
}
else {
if (isObj(self_40684.m_type, NTI39148)) {
result_40692 = concat_40682(self_40684, nodes_40686);
break BeforeRet;
}
}}}
} while (false); 
return result_40692;
}
function nsuStartsWith(s_23463, prefix_23464) {
var result_23465 = false;
BeforeRet: do {
var i_23466 = 0;
L1: do {
L2: while (true) {
if (!true) break L2;
if ((prefix_23464[i_23466] == 0)) {
result_23465 = true;
break BeforeRet;
}

if (!((s_23463[i_23466] == prefix_23464[i_23466]))) {
result_23465 = false;
break BeforeRet;
}

i_23466 += 1;
}
} while(false);
} while (false); 
return result_23465;
}
function npuParseHex(s_18253, number_18255, number_18255_Idx, start_18256, maxlen_18257) {
var Tmp1;
var result_18258 = 0;
var i_18259 = start_18256;
var founddigit_18260 = false;
if (((s_18253[i_18259] == 48) && ((s_18253[(i_18259 + 1)] == 120) || (s_18253[(i_18259 + 1)] == 88)))) {
i_18259 += 2;
}
else {
if ((s_18253[i_18259] == 35)) {
i_18259 += 1;
}
}
if ((maxlen_18257 == 0)) {
Tmp1 = (s_18253 != null ? s_18253.length-1 : 0);
}
else {
Tmp1 = (i_18259 + maxlen_18257);
}

var last_18279 = Tmp1;
L2: do {
L3: while (true) {
if (!(i_18259 < last_18279)) break L3;
switch (s_18253[i_18259]) {
case 95: 
break;
case 48: case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: number_18255[number_18255_Idx] = ((number_18255[number_18255_Idx] << 4) | (s_18253[i_18259] - 48));
founddigit_18260 = true;

break;
case 97: case 98: case 99: case 100: case 101: case 102: number_18255[number_18255_Idx] = ((number_18255[number_18255_Idx] << 4) | ((s_18253[i_18259] - 97) + 10));
founddigit_18260 = true;

break;
case 65: case 66: case 67: case 68: case 69: case 70: number_18255[number_18255_Idx] = ((number_18255[number_18255_Idx] << 4) | ((s_18253[i_18259] - 65) + 10));
founddigit_18260 = true;

break;
default: 
break L2;
break;
}
i_18259 += 1;
}
} while(false);
if (founddigit_18260) {
result_18258 = (i_18259 - start_18256);
}

return result_18258;
}
function nsuEndsWith(s_23479, suffix_23480) {
var result_23481 = false;
BeforeRet: do {
var i_23482 = 0;
var j_23483 = ((s_23479 != null ? s_23479.length-1 : 0) - (suffix_23480 != null ? suffix_23480.length-1 : 0));
L1: do {
L2: while (true) {
if (!((i_23482 + j_23483) < (s_23479 != null ? s_23479.length-1 : 0))) break L2;
if (!((s_23479[(i_23482 + j_23483)] == suffix_23480[i_23482]))) {
result_23481 = false;
break BeforeRet;
}

i_23482 += 1;
}
} while(false);
if ((suffix_23480[i_23482] == 0)) {
result_23481 = true;
break BeforeRet;
}

} while (false); 
return result_23481;
}
function nsuUnescape(s_24917, prefix_24918, suffix_24919) {
var result_24920 = null;
result_24920 = mnewString(0);
var i_24921 = (prefix_24918 != null ? prefix_24918.length-1 : 0);
if (!(nsuStartsWith(s_24917, prefix_24918))) {
var e_24925 = null;
e_24925 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null};
e_24925.message = (makeNimstrLit("String does not start with a prefix of: ").slice(0,-1)).concat(prefix_24918);
raiseException(e_24925, "ValueError");
}

L1: do {
L2: while (true) {
if (!true) break L2;
if ((i_24921 == ((s_24917 != null ? s_24917.length-1 : 0) - (suffix_24919 != null ? suffix_24919.length-1 : 0)))) {
break L1;
}

switch (s_24917[i_24921]) {
case 92: switch (s_24917[(i_24921 + 1)]) {
case 120: i_24921 += 2;
var c_24944 = [0];
i_24921 += npuParseHex(s_24917, c_24944, 0, i_24921, 2);
if (result_24920 != null) { addChar(result_24920, c_24944[0]); } else { result_24920 = [c_24944[0], 0]; };
i_24921 -= 2;

break;
case 92: if (result_24920 != null) { addChar(result_24920, 92); } else { result_24920 = [92, 0]; };

break;
case 39: if (result_24920 != null) { addChar(result_24920, 39); } else { result_24920 = [39, 0]; };

break;
case 34: if (result_24920 != null) { addChar(result_24920, 34); } else { result_24920 = [34, 0]; };

break;
default: 
if (result_24920 != null) { result_24920 = (result_24920.slice(0, -1)).concat((makeNimstrLit("\\").slice(0,-1)).concat([s_24917[(i_24921 + 1)], 0])); } else { result_24920 = (makeNimstrLit("\\").slice(0,-1)).concat([s_24917[(i_24921 + 1)], 0]);};
break;
}
i_24921 += 1;

break;
case 0: break L1;

break;
default: 
if (result_24920 != null) { addChar(result_24920, s_24917[i_24921]); } else { result_24920 = [s_24917[i_24921], 0]; };
break;
}
i_24921 += 1;
}
} while(false);
if (!(nsuEndsWith(s_24917, suffix_24919))) {
var e_24985 = null;
e_24985 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null};
e_24985.message = (makeNimstrLit("String does not end with a suffix of: ").slice(0,-1)).concat(suffix_24919);
raiseException(e_24985, "ValueError");
}

return result_24920;
}
function parsevalue_41630(self_41632, s_41633) {
var Tmp1;
var Tmp2;
var result_41634 = null;
if (!(1 < (s_41633 != null ? s_41633.length-1 : 0))) Tmp2 = false; else {Tmp2 = (s_41633[0] == 34); }if (!Tmp2) Tmp1 = false; else {Tmp1 = (s_41633[((s_41633 != null ? s_41633.length-1 : 0) - 1)] == 34); }if (Tmp1) {
result_41634 = newvalue_40522(nsuUnescape(s_41633, makeNimstrLit("\""), makeNimstrLit("\"")));
}

return result_41634;
}
function nsuIsDigitChar(c_21261) {
var result_21262 = false;
BeforeRet: do {
result_21262 = (SetConstr([48, 57])[c_21261] != undefined);
break BeforeRet;
} while (false); 
return result_21262;
}
function tentothepowerof_13182(b_13184) {
var result_13185 = 0.0;
var b_13186 = b_13184;
var a_13187 = 1.0000000000000000e+01;
result_13185 = 1.0000000000000000e+00;
L1: do {
L2: while (true) {
if (!true) break L2;
if (((b_13186 & 1) == 1)) {
result_13185 = (result_13185 * a_13187);
}

b_13186 = ((b_13186 >>> 0) >>> 1);
if ((b_13186 == 0)) {
break L1;
}

a_13187 = (a_13187 * a_13187);
}
} while(false);
return result_13185;
}
function nimParseBiggestFloat(s_13194, number_13196, number_13196_Idx, start_13197) {
var result_13198 = 0;
BeforeRet: do {
var esign_13199 = 1.0000000000000000e+00;
var sign_13200 = 1.0000000000000000e+00;
var i_13201 = start_13197;
var exponent_13202 = 0;
var flags_13203 = 0;
number_13196[number_13196_Idx] = 0.0;
if ((s_13194[i_13201] == 43)) {
i_13201 += 1;
}
else {
if ((s_13194[i_13201] == 45)) {
sign_13200 = -1.0000000000000000e+00;
i_13201 += 1;
}
}
if (((s_13194[i_13201] == 78) || (s_13194[i_13201] == 110))) {
if (((s_13194[(i_13201 + 1)] == 65) || (s_13194[(i_13201 + 1)] == 97))) {
if (((s_13194[(i_13201 + 2)] == 78) || (s_13194[(i_13201 + 2)] == 110))) {
if (!((SetConstr([97, 122], [65, 90], [48, 57], 95)[s_13194[(i_13201 + 3)]] != undefined))) {
number_13196[number_13196_Idx] = NaN;
result_13198 = ((i_13201 + 3) - start_13197);
break BeforeRet;
}

}

}

result_13198 = 0;
break BeforeRet;
}

if (((s_13194[i_13201] == 73) || (s_13194[i_13201] == 105))) {
if (((s_13194[(i_13201 + 1)] == 78) || (s_13194[(i_13201 + 1)] == 110))) {
if (((s_13194[(i_13201 + 2)] == 70) || (s_13194[(i_13201 + 2)] == 102))) {
if (!((SetConstr([97, 122], [65, 90], [48, 57], 95)[s_13194[(i_13201 + 3)]] != undefined))) {
number_13196[number_13196_Idx] = (Infinity * sign_13200);
result_13198 = ((i_13201 + 3) - start_13197);
break BeforeRet;
}

}

}

result_13198 = 0;
break BeforeRet;
}

L1: do {
L2: while (true) {
if (!(SetConstr([48, 57])[s_13194[i_13201]] != undefined)) break L2;
flags_13203 = (flags_13203 | 1);
number_13196[number_13196_Idx] = ((number_13196[number_13196_Idx] * 1.0000000000000000e+01) + (s_13194[i_13201] - 48));
i_13201 += 1;
L3: do {
L4: while (true) {
if (!(s_13194[i_13201] == 95)) break L4;
i_13201 += 1;
}
} while(false);
}
} while(false);
if ((s_13194[i_13201] == 46)) {
var hd_13292 = 1.0000000000000000e+00;
i_13201 += 1;
L5: do {
L6: while (true) {
if (!(SetConstr([48, 57])[s_13194[i_13201]] != undefined)) break L6;
flags_13203 = (flags_13203 | 2);
number_13196[number_13196_Idx] = ((number_13196[number_13196_Idx] * 1.0000000000000000e+01) + (s_13194[i_13201] - 48));
hd_13292 = (hd_13292 * 1.0000000000000000e+01);
i_13201 += 1;
L7: do {
L8: while (true) {
if (!(s_13194[i_13201] == 95)) break L8;
i_13201 += 1;
}
} while(false);
}
} while(false);
number_13196[number_13196_Idx] = (number_13196[number_13196_Idx] / hd_13292);
}

if ((flags_13203 == 0)) {
result_13198 = 0;
break BeforeRet;
}

if ((SetConstr(101, 69)[s_13194[i_13201]] != undefined)) {
i_13201 += 1;
if ((s_13194[i_13201] == 43)) {
i_13201 += 1;
}
else {
if ((s_13194[i_13201] == 45)) {
esign_13199 = -1.0000000000000000e+00;
i_13201 += 1;
}
}
if (!((SetConstr([48, 57])[s_13194[i_13201]] != undefined))) {
result_13198 = 0;
break BeforeRet;
}

L9: do {
L10: while (true) {
if (!(SetConstr([48, 57])[s_13194[i_13201]] != undefined)) break L10;
exponent_13202 = (((exponent_13202 * 10) + s_13194[i_13201]) - 48);
i_13201 += 1;
L11: do {
L12: while (true) {
if (!(s_13194[i_13201] == 95)) break L12;
i_13201 += 1;
}
} while(false);
}
} while(false);
}

var hd_13444 = tentothepowerof_13182(exponent_13202);
if ((0.0 < esign_13199)) {
number_13196[number_13196_Idx] = (number_13196[number_13196_Idx] * hd_13444);
}
else {
number_13196[number_13196_Idx] = (number_13196[number_13196_Idx] / hd_13444);
}

number_13196[number_13196_Idx] = (number_13196[number_13196_Idx] * sign_13200);
result_13198 = (i_13201 - start_13197);
} while (false); 
return result_13198;
}
function npuParseFloat(s_18865, number_18867, number_18867_Idx, start_18868) {
var result_18869 = 0;
var bf_18870 = [0.0];
result_18869 = nimParseBiggestFloat(s_18865, bf_18870, 0, start_18868);
if (!((result_18869 == 0))) {
number_18867[number_18867_Idx] = bf_18870[0];
}

return result_18869;
}
function nsuParseFloat(s_22689) {
var Tmp1;
var result_22690 = [0.0];
var L_22692 = npuParseFloat(s_22689, result_22690, 0, 0);
if (!((L_22692 == (s_22689 != null ? s_22689.length-1 : 0)))) Tmp1 = true; else {Tmp1 = (L_22692 == 0); }if (Tmp1) {
var e_22696 = null;
e_22696 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null};
e_22696.message = (makeNimstrLit("invalid float: ").slice(0,-1)).concat(s_22689);
raiseException(e_22696, "ValueError");
}

return result_22690[0];
}
function reraiseException() {
if ((lastJSError == null)) {
var e_12018 = null;
e_12018 = {m_type: NTI3460, parent: null, name: null, message: null, trace: null};
e_12018.message = makeNimstrLit("no exception to reraise");
raiseException(e_12018, "ReraiseError");
}
else {
if ((excHandler == 0)) {
var isnimexception_12201 = false;
isnimexception_12201 = lastJSError.m_type;if (isnimexception_12201) {
unhandledException(lastJSError);
}

}

throw lastJSError;}

}
function parsevalue_41625(self_41627, s_41628) {
var Tmp1;
var result_41629 = null;
BeforeRet: do {
if (!(0 < (s_41628 != null ? s_41628.length-1 : 0))) Tmp1 = false; else {Tmp1 = ((nsuIsDigitChar(s_41628[0]) || (s_41628[0] == 43)) || (s_41628[0] == 45)); }if (Tmp1) {
++excHandler;
try {
result_41629 = newvalue_40517(nsuParseFloat(s_41628));
break BeforeRet;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
if (lastJSError && (isObj(lastJSError.m_type, NTI3446))) {
result_41629 = null;
break BeforeRet;
}
else {
reraiseException();
}
lastJSError = prevJSError;
} finally {
}
}

} while (false); 
return result_41629;
}
function addInt(a_12456, b_12457) {
    var result = a_12456 + b_12457;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  }
function subInt(a_12461, b_12462) {
    var result = a_12461 - b_12462;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  }
function mulInt(a_12466, b_12467) {
    var result = a_12466 * b_12467;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  }
function rawparseint_18727(s_18729, b_18731, b_18731_Idx, start_18732) {
var result_18733 = 0;
var sign_18734 = -1;
var i_18735 = start_18732;
if ((s_18729[i_18735] == 43)) {
i_18735 = addInt(i_18735, 1);
}
else {
if ((s_18729[i_18735] == 45)) {
i_18735 = addInt(i_18735, 1);
sign_18734 = 1;
}
}
if ((SetConstr([48, 57])[s_18729[i_18735]] != undefined)) {
b_18731[b_18731_Idx] = 0;
L1: do {
L2: while (true) {
if (!(SetConstr([48, 57])[s_18729[i_18735]] != undefined)) break L2;
b_18731[b_18731_Idx] = subInt(mulInt(b_18731[b_18731_Idx], 10), subInt(s_18729[i_18735], 48));
i_18735 = addInt(i_18735, 1);
L3: do {
L4: while (true) {
if (!(s_18729[i_18735] == 95)) break L4;
i_18735 = addInt(i_18735, 1);
}
} while(false);
}
} while(false);
b_18731[b_18731_Idx] = mulInt(b_18731[b_18731_Idx], sign_18734);
result_18733 = subInt(i_18735, start_18732);
}

return result_18733;
}
function npuParseBiggestInt(s_18816, number_18818, number_18818_Idx, start_18819) {
var result_18820 = 0;
var res_18821 = [0];
result_18820 = rawparseint_18727(s_18816, res_18821, 0, start_18819);
number_18818[number_18818_Idx] = res_18821[0];
return result_18820;
}
function npuParseInt(s_18826, number_18828, number_18828_Idx, start_18829) {
var Tmp1;
var Tmp2;
var result_18830 = 0;
var res_18831 = [0];
result_18830 = npuParseBiggestInt(s_18826, res_18831, 0, start_18829);
if (!true) Tmp1 = false; else {if ((res_18831[0] < -2147483648)) Tmp2 = true; else {Tmp2 = (2147483647 < res_18831[0]); }Tmp1 = Tmp2; }if (Tmp1) {
var e_18841 = null;
e_18841 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_18841.message = makeNimstrLit("overflow");
raiseException(e_18841, "OverflowError");
}
else {
if (!((result_18830 == 0))) {
number_18828[number_18828_Idx] = res_18831[0];
}
}
return result_18830;
}
function nsuParseInt(s_22649) {
var Tmp1;
var result_22650 = [0];
var L_22652 = npuParseInt(s_22649, result_22650, 0, 0);
if (!((L_22652 == (s_22649 != null ? s_22649.length-1 : 0)))) Tmp1 = true; else {Tmp1 = (L_22652 == 0); }if (Tmp1) {
var e_22656 = null;
e_22656 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null};
e_22656.message = (makeNimstrLit("invalid integer: ").slice(0,-1)).concat(s_22649);
raiseException(e_22656, "ValueError");
}

return result_22650[0];
}
function parsevalue_41620(self_41622, s_41623) {
var Tmp1;
var result_41624 = null;
BeforeRet: do {
if (!(0 < (s_41623 != null ? s_41623.length-1 : 0))) Tmp1 = false; else {Tmp1 = ((nsuIsDigitChar(s_41623[0]) || (s_41623[0] == 43)) || (s_41623[0] == 45)); }if (Tmp1) {
++excHandler;
try {
result_41624 = newvalue_40512(nsuParseInt(s_41623));
break BeforeRet;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
if (lastJSError && (isObj(lastJSError.m_type, NTI3446))) {
result_41624 = null;
break BeforeRet;
}
else {
reraiseException();
}
lastJSError = prevJSError;
} finally {
}
}

} while (false); 
return result_41624;
}
function parsevalue_41610(self_41612, s_41613) {
var result_41614 = null;
return result_41614;
}
function parsevalue_41616(self_41612, s_41613) {
var result_41619 = null;
BeforeRet: do {
if (isObj(self_41612.m_type, NTI39089)) {
result_41619 = parsevalue_41630(self_41612, s_41613);
break BeforeRet;
}
else {
if (isObj(self_41612.m_type, NTI39087)) {
result_41619 = parsevalue_41625(self_41612, s_41613);
break BeforeRet;
}
else {
if (isObj(self_41612.m_type, NTI39085)) {
result_41619 = parsevalue_41620(self_41612, s_41613);
break BeforeRet;
}
else {
if (isObj(self_41612.m_type, NTI39082)) {
result_41619 = parsevalue_41610(self_41612, s_41613);
break BeforeRet;
}
}}}
} while (false); 
return result_41619;
}
function prefixlength_41666(self_41668) {
var result_41669 = 0;
result_41669 = 1;
return result_41669;
}
function prefixlength_41635(self_41637) {
var result_41638 = 0;
result_41638 = 0;
return result_41638;
}
function prefixlength_41640(self_41637) {
var result_41643 = 0;
BeforeRet: do {
if (isObj(self_41637.m_type, NTI39089)) {
result_41643 = prefixlength_41666(self_41637);
break BeforeRet;
}
else {
if (isObj(self_41637.m_type, NTI39082)) {
result_41643 = prefixlength_41635(self_41637);
break BeforeRet;
}
}
} while (false); 
return result_41643;
}
function tokenready_41676(self_41678, token_41679, ch_41680) {
var Tmp1;
var result_41681 = null;
BeforeRet: do {
if (!(ch_41680 == 34)) Tmp1 = false; else {Tmp1 = !((token_41679[((token_41679 != null ? token_41679.length-1 : 0) - 1)] == 92)); }if (Tmp1) {
result_41681 = (token_41679.slice(0,-1)).concat([ch_41680, 0]);
break BeforeRet;
}
else {
result_41681 = null;
break BeforeRet;
}

} while (false); 
return result_41681;
}
function tokenready_41644(self_41646, token_41647, ch_41648) {
var result_41649 = null;
return result_41649;
}
function tokenready_41651(self_41646, token_41647, ch_41648) {
var result_41654 = null;
BeforeRet: do {
if (isObj(self_41646.m_type, NTI39089)) {
result_41654 = tokenready_41676(self_41646, token_41647, ch_41648);
break BeforeRet;
}
else {
if (isObj(self_41646.m_type, NTI39082)) {
result_41654 = tokenready_41644(self_41646, token_41647, ch_41648);
break BeforeRet;
}
}
} while (false); 
return result_41654;
}
function tokenstart_41670(self_41672, token_41673, ch_41674) {
var result_41675 = false;
result_41675 = (ch_41674 == 34);
return result_41675;
}
function tokenstart_41655(self_41657, token_41658, ch_41659) {
var result_41660 = false;
result_41660 = false;
return result_41660;
}
function tokenstart_41662(self_41657, token_41658, ch_41659) {
var result_41665 = false;
BeforeRet: do {
if (isObj(self_41657.m_type, NTI39089)) {
result_41665 = tokenstart_41670(self_41657, token_41658, ch_41659);
break BeforeRet;
}
else {
if (isObj(self_41657.m_type, NTI39082)) {
result_41665 = tokenstart_41655(self_41657, token_41658, ch_41659);
break BeforeRet;
}
}
} while (false); 
return result_41665;
}
function caneval_44183(self_44185, ni_44186) {
var result_44187 = false;
result_44187 = true;
return result_44187;
}
function caneval_44178(self_44180, ni_44181) {
var result_44182 = false;
BeforeRet: do {
result_44182 = caneval_44160(self_44180.val_39194, ni_44181);
break BeforeRet;
} while (false); 
return result_44182;
}
function caneval_44164(self_44166, ni_44167) {
var result_44168 = false;
BeforeRet: do {
var binding_44169 = lookup_43524(ni_44167, self_44166);
if ((binding_44169 === null)) {
result_44168 = false;
break BeforeRet;
}
else {
result_44168 = caneval_44160(binding_44169.val_39194, ni_44167);
break BeforeRet;
}

} while (false); 
return result_44168;
}
function caneval_44188(self_44190, ni_44191) {
var result_44192 = false;
result_44192 = true;
return result_44192;
}
function caneval_44203(self_44205, ni_44206) {
var result_44207 = false;
result_44207 = true;
return result_44207;
}
function caneval_44198(self_44200, ni_44201) {
var result_44202 = false;
result_44202 = true;
return result_44202;
}
function caneval_44193(self_44195, ni_44196) {
var result_44197 = false;
result_44197 = true;
return result_44197;
}
function caneval_44208(self_44210, ni_44211) {
var result_44212 = false;
result_44212 = true;
return result_44212;
}
function caneval_44154(self_44156, ni_44157) {
var result_44158 = false;
result_44158 = false;
return result_44158;
}
function caneval_44160(self_44156, ni_44157) {
var result_44163 = false;
BeforeRet: do {
if (isObj(self_44156.m_type, NTI42596)) {
result_44163 = caneval_44183(self_44156, ni_44157);
break BeforeRet;
}
else {
if (isObj(self_44156.m_type, NTI39192)) {
result_44163 = caneval_44178(self_44156, ni_44157);
break BeforeRet;
}
else {
if (isObj(self_44156.m_type, NTI39103)) {
result_44163 = caneval_44164(self_44156, ni_44157);
break BeforeRet;
}
else {
if (isObj(self_44156.m_type, NTI42591)) {
result_44163 = caneval_44188(self_44156, ni_44157);
break BeforeRet;
}
else {
if (isObj(self_44156.m_type, NTI39153)) {
result_44163 = caneval_44203(self_44156, ni_44157);
break BeforeRet;
}
else {
if (isObj(self_44156.m_type, NTI39117)) {
result_44163 = caneval_44198(self_44156, ni_44157);
break BeforeRet;
}
else {
if (isObj(self_44156.m_type, NTI39109)) {
result_44163 = caneval_44193(self_44156, ni_44157);
break BeforeRet;
}
else {
if (isObj(self_44156.m_type, NTI39157)) {
result_44163 = caneval_44208(self_44156, ni_44157);
break BeforeRet;
}
else {
if (isObj(self_44156.m_type, NTI39091)) {
result_44163 = caneval_44154(self_44156, ni_44157);
break BeforeRet;
}
}}}}}}}}
} while (false); 
return result_44163;
}
function doreturn_43496(self_43498, ni_43499) {
ni_43499.currentactivation_42581 = self_43498.body_42606.parent_42598;
}
function doreturn_43480(self_43482, ni_43483) {
ni_43483.currentactivation_42581 = self_43482.parent_42604;
if (!((ni_43483.currentactivation_42581 === null))) {
ni_43483.currentactivation_42581.returned_42603 = true;
}

}
function doreturn_43494(self_43482, ni_43483) {
if (isObj(self_43482.m_type, NTI42611)) {
doreturn_43496(self_43482, ni_43483);
}
else {
if (isObj(self_43482.m_type, NTI42600)) {
doreturn_43480(self_43482, ni_43483);
}
}
}
function eval_44360(current_44362, ni_44363) {
var result_44364 = null;
BeforeRet: do {
current_44362.parent_42604 = ni_44363.currentactivation_42581;
ni_44363.currentactivation_42581 = current_44362;
L1: do {
L2: while (true) {
if (!!(atend_43463(current_44362))) break L2;
var next_44365 = next_43467(current_44362);
if (caneval_44160(next_44365, ni_44363)) {
current_44362.last_42601 = eval_42629(next_44365, ni_44363);
if (current_44362.returned_42603) {
doreturn_43494(ni_44363.currentactivation_42581, ni_44363);
result_44364 = current_44362.last_42601;
break BeforeRet;
}

}
else {
current_44362.last_42601 = next_44365;
}

}
} while(false);
if (isObj(current_44362.last_42601.m_type, NTI39192)) {
current_44362.last_42601 = current_44362.last_42601.val_39194;
}

ni_44363.currentactivation_42581 = ni_44363.currentactivation_42581.parent_42604;
result_44364 = current_44362.last_42601;
break BeforeRet;
} while (false); 
return result_44364;
}
function newactivation_43087(funk_43089) {
var result_43090 = null;
result_43090 = {body_42606: funk_43089, m_type: NTI42611, locals_42609: null, last_42601: null, infixarg_42602: null, returned_42603: false, parent_42604: null, pos_42605: 0, tags_39092: null};
return result_43090;
}
function eval_44369(self_44371, ni_44372) {
var result_44373 = null;
result_44373 = eval_44360(newactivation_43087(self_44371), ni_44372);
return result_44373;
}
function eval_44410(self_44412, ni_44413) {
var result_44414 = null;
result_44414 = self_44412;
return result_44414;
}
function newactivation_43102(body_43104) {
var result_43105 = null;
result_43105 = {body_42606: body_43104, m_type: NTI42615, locals_42609: null, last_42601: null, infixarg_42602: null, returned_42603: false, parent_42604: null, pos_42605: 0, tags_39092: null};
result_43105.locals_42609 = newmap_40093();
return result_43105;
}
function eval_44379(self_44381, ni_44382) {
var result_44383 = null;
BeforeRet: do {
var activation_44384 = newactivation_43102(self_44381);
eval_44360(activation_44384, ni_44382);
result_44383 = activation_44384.locals_42609;
break BeforeRet;
} while (false); 
return result_44383;
}
function newactivation_43097(body_43099) {
var result_43100 = null;
result_43100 = {body_42606: body_43099, m_type: NTI42613, last_42601: null, infixarg_42602: null, returned_42603: false, parent_42604: null, pos_42605: 0, tags_39092: null};
return result_43100;
}
function eval_44374(self_44376, ni_44377) {
var result_44378 = null;
result_44378 = eval_44360(newactivation_43097(self_44376), ni_44377);
return result_44378;
}
function eval_44415(self_44417, ni_44418) {
var result_44419 = null;
result_44419 = self_44417;
return result_44419;
}
function getordefault_39854(t_39860, key_39862) {
var result_39863 = null;
var hc_39865 = [0];
var index_39867 = rawget_39869(t_39860, key_39862, hc_39865, 0);
if ((0 <= index_39867)) {
result_39863 = t_39860.data_39181[index_39867].Field3;
}

return result_39863;
}
function getordefault_39843(t_39849, key_39851) {
var result_39852 = null;
result_39852 = getordefault_39854(t_39849, key_39851);
return result_39852;
}
function lookup_39837(self_39839, key_39840) {
var result_39841 = null;
result_39841 = getordefault_39843(self_39839.bindings_39190, key_39840);
return result_39841;
}
function lookup_43510(self_43512, key_43513) {
var result_43514 = null;
BeforeRet: do {
if (!((self_43512.locals_42609 === null))) {
result_43514 = lookup_39837(self_43512.locals_42609, key_43513);
break BeforeRet;
}

} while (false); 
return result_43514;
}
function lookup_43500(self_43502, key_43503) {
var result_43504 = null;
return result_43504;
}
function lookup_43506(self_43502, key_43503) {
var result_43509 = null;
BeforeRet: do {
if (isObj(self_43502.m_type, NTI42608)) {
result_43509 = lookup_43510(self_43502, key_43503);
break BeforeRet;
}
else {
if (isObj(self_43502.m_type, NTI42600)) {
result_43509 = lookup_43500(self_43502, key_43503);
break BeforeRet;
}
}
} while (false); 
return result_43509;
}
function lookuplocal_43546(ni_43548, key_43549) {
var result_43550 = null;
BeforeRet: do {
result_43550 = lookup_43506(ni_43548.currentactivation_42581, key_43549);
break BeforeRet;
} while (false); 
return result_43550;
}
function eval_44288(self_44290, ni_44291) {
var Tmp1;
var result_44292 = null;
var hit_44293 = lookuplocal_43546(ni_44291, self_44290);
if ((hit_44293 === null)) {
Tmp1 = ni_44291.undefval_42586;
}
else {
Tmp1 = eval_42629(hit_44293.val_39194, ni_44291);
}

result_44292 = Tmp1;
return result_44292;
}
function eval_44425(self_44427, ni_44428) {
var result_44429 = null;
result_44429 = self_44427.val_39194;
return result_44429;
}
function eval_44420(self_44422, ni_44423) {
var result_44424 = null;
result_44424 = self_44422;
return result_44424;
}
function haslocals_43142(self_43144) {
var result_43145 = false;
result_43145 = false;
return result_43145;
}
function haslocals_43133(self_43135) {
var result_43136 = false;
result_43136 = true;
return result_43136;
}
function haslocals_43138(self_43135) {
var result_43141 = false;
BeforeRet: do {
if (isObj(self_43135.m_type, NTI42613)) {
result_43141 = haslocals_43142(self_43135);
break BeforeRet;
}
else {
if (isObj(self_43135.m_type, NTI42600)) {
result_43141 = haslocals_43133(self_43135);
break BeforeRet;
}
}
} while (false); 
return result_43141;
}
function outer_43155(self_43157) {
var result_43158 = null;
result_43158 = self_43157.body_42606.parent_42598;
return result_43158;
}
function outer_43146(self_43148) {
var result_43149 = null;
result_43149 = self_43148.parent_42604;
return result_43149;
}
function outer_43151(self_43148) {
var result_43154 = null;
BeforeRet: do {
if (isObj(self_43148.m_type, NTI42611)) {
result_43154 = outer_43155(self_43148);
break BeforeRet;
}
else {
if (isObj(self_43148.m_type, NTI42600)) {
result_43154 = outer_43146(self_43148);
break BeforeRet;
}
}
} while (false); 
return result_43154;
}
function lookupparent_43551(ni_43553, key_43554) {
var result_43555 = null;
BeforeRet: do {
var inparent_43556 = false;
L1: do {
var activation_43557 = null;
var HEX3Atmp_43559 = null;
HEX3Atmp_43559 = ni_43553.currentactivation_42581;
var activation_43563 = HEX3Atmp_43559;
L2: do {
L3: while (true) {
if (!!((activation_43563 === null))) break L3;
L4: do {
L5: while (true) {
if (!!(haslocals_43138(activation_43563))) break L5;
activation_43563 = outer_43151(activation_43563);
}
} while(false);
activation_43557 = activation_43563;
if (inparent_43556) {
result_43555 = lookup_43506(activation_43557, key_43554);
break BeforeRet;
}
else {
inparent_43556 = true;
}

activation_43563 = outer_43151(activation_43563);
}
} while(false);
} while(false);
} while (false); 
return result_43555;
}
function eval_44302(self_44304, ni_44305) {
var Tmp1;
var result_44306 = null;
var hit_44307 = lookupparent_43551(ni_44305, self_44304);
if ((hit_44307 === null)) {
Tmp1 = ni_44305.undefval_42586;
}
else {
Tmp1 = eval_42629(hit_44307.val_39194, ni_44305);
}

result_44306 = Tmp1;
return result_44306;
}
function argparent_43630(ni_43632) {
var result_43633 = null;
BeforeRet: do {
L1: do {
var activation_43634 = null;
var HEX3Atmp_43636 = null;
HEX3Atmp_43636 = ni_43632.currentactivation_42581;
var activation_43641 = HEX3Atmp_43636;
L2: do {
L3: while (true) {
if (!!(haslocals_43138(activation_43641))) break L3;
activation_43641 = activation_43641.parent_42604;
}
} while(false);
activation_43641 = activation_43641.parent_42604;
L4: do {
L5: while (true) {
if (!!((activation_43641 === null))) break L5;
activation_43634 = activation_43641;
result_43633 = activation_43634;
break BeforeRet;
activation_43641 = activation_43641.parent_42604;
L6: do {
L7: while (true) {
if (!!(haslocals_43138(activation_43641))) break L7;
activation_43641 = activation_43641.parent_42604;
}
} while(false);
}
} while(false);
} while(false);
} while (false); 
return result_43633;
}
function infix_43626(self_43628) {
var result_43629 = false;
BeforeRet: do {
result_43629 = infix_43614(self_43628.val_39194);
break BeforeRet;
} while (false); 
return result_43629;
}
function infix_43622(self_43624) {
var result_43625 = false;
result_43625 = self_43624.infix_42593;
return result_43625;
}
function infix_43618(self_43620) {
var result_43621 = false;
result_43621 = self_43620.infix_42597;
return result_43621;
}
function infix_43609(self_43611) {
var result_43612 = false;
result_43612 = false;
return result_43612;
}
function infix_43614(self_43611) {
var result_43617 = false;
BeforeRet: do {
if (isObj(self_43611.m_type, NTI39192)) {
result_43617 = infix_43626(self_43611);
break BeforeRet;
}
else {
if (isObj(self_43611.m_type, NTI42591)) {
result_43617 = infix_43622(self_43611);
break BeforeRet;
}
else {
if (isObj(self_43611.m_type, NTI42596)) {
result_43617 = infix_43618(self_43611);
break BeforeRet;
}
else {
if (isObj(self_43611.m_type, NTI39091)) {
result_43617 = infix_43609(self_43611);
break BeforeRet;
}
}}}
} while (false); 
return result_43617;
}
function eval_44339(self_44341, ni_44342) {
var Tmp1;
var result_44343 = null;
BeforeRet: do {
var arg_44344 = null;
var previousactivation_44345 = argparent_43630(ni_44342);
if (!infix_43614(ni_44342.currentactivation_42581.body_42606)) Tmp1 = false; else {Tmp1 = (ni_44342.currentactivation_42581.infixarg_42602 === null); }if (Tmp1) {
arg_44344 = previousactivation_44345.last_42601;
ni_44342.currentactivation_42581.infixarg_42602 = arg_44344;
}
else {
arg_44344 = next_43467(previousactivation_44345);
}

setbinding_43594(ni_44342, self_44341, arg_44344);
result_44343 = arg_44344;
break BeforeRet;
} while (false); 
return result_44343;
}
function eval_44321(self_44323, ni_44324) {
var Tmp1;
var result_44325 = null;
BeforeRet: do {
var arg_44326 = null;
var previousactivation_44327 = argparent_43630(ni_44324);
if (!infix_43614(ni_44324.currentactivation_42581.body_42606)) Tmp1 = false; else {Tmp1 = (ni_44324.currentactivation_42581.infixarg_42602 === null); }if (Tmp1) {
arg_44326 = previousactivation_44327.last_42601;
ni_44324.currentactivation_42581.infixarg_42602 = arg_44326;
}
else {
arg_44326 = next_43467(previousactivation_44327);
}

var here_44336 = ni_44324.currentactivation_42581;
ni_44324.currentactivation_42581 = previousactivation_44327;
var ev_44337 = eval_42629(arg_44326, ni_44324);
ni_44324.currentactivation_42581 = here_44336;
setbinding_43594(ni_44324, self_44323, ev_44337);
result_44325 = ev_44337;
break BeforeRet;
} while (false); 
return result_44325;
}
function eval_44316(self_44318, ni_44319) {
var result_44320 = null;
result_44320 = newword_42251(null, self_44318.word_39095);
return result_44320;
}
function eval_44355(self_44357, ni_44358) {
var result_44359 = null;
BeforeRet: do {
result_44359 = self_44357.prok_42592(ni_44358);
break BeforeRet;
} while (false); 
return result_44359;
}
function eval_44274(self_44276, ni_44277) {
var Tmp1;
var result_44278 = null;
var hit_44279 = lookup_43524(ni_44277, self_44276);
if ((hit_44279 === null)) {
Tmp1 = ni_44277.undefval_42586;
}
else {
Tmp1 = eval_42629(hit_44279.val_39194, ni_44277);
}

result_44278 = Tmp1;
return result_44278;
}
function eval_44260(self_44262, ni_44263) {
var Tmp1;
var result_44264 = null;
var hit_44265 = lookupparent_43551(ni_44263, self_44262);
if ((hit_44265 === null)) {
Tmp1 = ni_44263.undefval_42586;
}
else {
Tmp1 = hit_44265.val_39194;
}

result_44264 = Tmp1;
return result_44264;
}
function eval_44246(self_44248, ni_44249) {
var Tmp1;
var result_44250 = null;
var hit_44251 = lookuplocal_43546(ni_44249, self_44248);
if ((hit_44251 === null)) {
Tmp1 = ni_44249.undefval_42586;
}
else {
Tmp1 = hit_44251.val_39194;
}

result_44250 = Tmp1;
return result_44250;
}
function eval_44232(self_44234, ni_44235) {
var Tmp1;
var result_44236 = null;
var hit_44237 = lookup_43524(ni_44235, self_44234);
if ((hit_44237 === null)) {
Tmp1 = ni_44235.undefval_42586;
}
else {
Tmp1 = hit_44237.val_39194;
}

result_44236 = Tmp1;
return result_44236;
}
function eval_44218(self_44220, ni_44221) {
var result_44222 = null;
BeforeRet: do {
var binding_44223 = lookup_43524(ni_44221, self_44220);
if ((binding_44223 === null)) {
raiseruntimeexception_39196((makeNimstrLit("Word not found: ").slice(0,-1)).concat(HEX24_39604(self_44220)));
}

result_44222 = eval_42629(binding_44223.val_39194, ni_44221);
break BeforeRet;
} while (false); 
return result_44222;
}
function eval_42624(self_42626, ni_42627) {
var result_44217 = null;
raiseruntimeexception_39196(makeNimstrLit("Should not happen"));
return result_44217;
}
function eval_42629(self_42626, ni_42627) {
var result_44217 = null;
BeforeRet: do {
if (isObj(self_42626.m_type, NTI42596)) {
result_44217 = eval_44369(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39155)) {
result_44217 = eval_44410(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39157)) {
result_44217 = eval_44379(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39153)) {
result_44217 = eval_44374(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39125)) {
result_44217 = eval_44415(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39105)) {
result_44217 = eval_44288(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39192)) {
result_44217 = eval_44425(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39159)) {
result_44217 = eval_44420(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39107)) {
result_44217 = eval_44302(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39117)) {
result_44217 = eval_44339(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39109)) {
result_44217 = eval_44321(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39101)) {
result_44217 = eval_44316(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI42591)) {
result_44217 = eval_44355(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39103)) {
result_44217 = eval_44274(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39115)) {
result_44217 = eval_44260(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39113)) {
result_44217 = eval_44246(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39111)) {
result_44217 = eval_44232(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39094)) {
result_44217 = eval_44218(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39091)) {
result_44217 = eval_42624(self_42626, ni_42627);
break BeforeRet;
}
else {
if (isObj(self_42626.m_type, NTI39091)) {
result_44217 = eval_42624(self_42626, ni_42627);
break BeforeRet;
}
}}}}}}}}}}}}}}}}}}}
} while (false); 
return result_44217;
}
function evaldo_44395(self_44397, ni_44398) {
var result_44399 = null;
result_44399 = eval_44360(newactivation_43097(self_44397), ni_44398);
return result_44399;
}
function newactivation_43092(body_43094) {
var result_43095 = null;
result_43095 = {body_42606: body_43094, m_type: NTI42608, locals_42609: null, last_42601: null, infixarg_42602: null, returned_42603: false, parent_42604: null, pos_42605: 0, tags_39092: null};
return result_43095;
}
function evaldo_44390(self_44392, ni_44393) {
var result_44394 = null;
result_44394 = eval_44360(newactivation_43092(self_44392), ni_44393);
return result_44394;
}
function evaldo_44400(self_44402, ni_44403) {
var result_44404 = null;
result_44404 = eval_44360(newactivation_43102(self_44402), ni_44403);
return result_44404;
}
function evaldo_42631(self_42633, ni_42634) {
var result_44389 = null;
raiseruntimeexception_39196(makeNimstrLit("Do only works for sequences"));
return result_44389;
}
function evaldo_42636(self_42633, ni_42634) {
var result_44389 = null;
BeforeRet: do {
if (isObj(self_42633.m_type, NTI39153)) {
result_44389 = evaldo_44395(self_42633, ni_42634);
break BeforeRet;
}
else {
if (isObj(self_42633.m_type, NTI39155)) {
result_44389 = evaldo_44390(self_42633, ni_42634);
break BeforeRet;
}
else {
if (isObj(self_42633.m_type, NTI39157)) {
result_44389 = evaldo_44400(self_42633, ni_42634);
break BeforeRet;
}
else {
if (isObj(self_42633.m_type, NTI39091)) {
result_44389 = evaldo_42631(self_42633, ni_42634);
break BeforeRet;
}
else {
if (isObj(self_42633.m_type, NTI39091)) {
result_44389 = evaldo_42631(self_42633, ni_42634);
break BeforeRet;
}
}}}}
} while (false); 
return result_44389;
}
function HEX2B_43211(a_43213, b_43214) {
var result_43215 = null;
result_43215 = newvalue_40517((a_43213.value_39131 + b_43214.value_39128));
return result_43215;
}
function HEX2B_43205(a_43207, b_43208) {
var result_43209 = null;
result_43209 = newvalue_40517((a_43207.value_39128 + b_43208.value_39131));
return result_43209;
}
function HEX2B_43200(a_43202, b_43203) {
var result_43204 = null;
result_43204 = newvalue_40512((a_43202.value_39128 + b_43203.value_39128));
return result_43204;
}
function HEX2B_43217(a_43219, b_43220) {
var result_43221 = null;
result_43221 = newvalue_40517((a_43219.value_39131 + b_43220.value_39131));
return result_43221;
}
function HEX2B_43190(a_43192, b_43193) {
var result_43194 = null;
raiseruntimeexception_39196((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43192).slice(0,-1),makeNimstrLit(" + ").slice(0,-1),HEX24_39604(b_43193)));
return result_43194;
}
function HEX2B_43196(a_43192, b_43193) {
var result_43199 = null;
BeforeRet: do {
if ((isObj(a_43192.m_type, NTI39130) & isObj(b_43193.m_type, NTI39127))) {
result_43199 = HEX2B_43211(a_43192, b_43193);
break BeforeRet;
}
else {
if ((isObj(a_43192.m_type, NTI39127) & isObj(b_43193.m_type, NTI39130))) {
result_43199 = HEX2B_43205(a_43192, b_43193);
break BeforeRet;
}
else {
if ((isObj(a_43192.m_type, NTI39127) & isObj(b_43193.m_type, NTI39127))) {
result_43199 = HEX2B_43200(a_43192, b_43193);
break BeforeRet;
}
else {
if ((isObj(a_43192.m_type, NTI39130) & isObj(b_43193.m_type, NTI39130))) {
result_43199 = HEX2B_43217(a_43192, b_43193);
break BeforeRet;
}
else {
if ((isObj(a_43192.m_type, NTI39091) & isObj(b_43193.m_type, NTI39091))) {
result_43199 = HEX2B_43190(a_43192, b_43193);
break BeforeRet;
}
}}}}
} while (false); 
return result_43199;
}
function HEX2D_43243(a_43245, b_43246) {
var result_43247 = null;
result_43247 = newvalue_40517((a_43245.value_39131 - b_43246.value_39128));
return result_43247;
}
function HEX2D_43237(a_43239, b_43240) {
var result_43241 = null;
result_43241 = newvalue_40517((a_43239.value_39128 - b_43240.value_39131));
return result_43241;
}
function HEX2D_43232(a_43234, b_43235) {
var result_43236 = null;
result_43236 = newvalue_40512((a_43234.value_39128 - b_43235.value_39128));
return result_43236;
}
function HEX2D_43249(a_43251, b_43252) {
var result_43253 = null;
result_43253 = newvalue_40517((a_43251.value_39131 - b_43252.value_39131));
return result_43253;
}
function HEX2D_43222(a_43224, b_43225) {
var result_43226 = null;
raiseruntimeexception_39196((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43224).slice(0,-1),makeNimstrLit(" - ").slice(0,-1),HEX24_39604(b_43225)));
return result_43226;
}
function HEX2D_43228(a_43224, b_43225) {
var result_43231 = null;
BeforeRet: do {
if ((isObj(a_43224.m_type, NTI39130) & isObj(b_43225.m_type, NTI39127))) {
result_43231 = HEX2D_43243(a_43224, b_43225);
break BeforeRet;
}
else {
if ((isObj(a_43224.m_type, NTI39127) & isObj(b_43225.m_type, NTI39130))) {
result_43231 = HEX2D_43237(a_43224, b_43225);
break BeforeRet;
}
else {
if ((isObj(a_43224.m_type, NTI39127) & isObj(b_43225.m_type, NTI39127))) {
result_43231 = HEX2D_43232(a_43224, b_43225);
break BeforeRet;
}
else {
if ((isObj(a_43224.m_type, NTI39130) & isObj(b_43225.m_type, NTI39130))) {
result_43231 = HEX2D_43249(a_43224, b_43225);
break BeforeRet;
}
else {
if ((isObj(a_43224.m_type, NTI39091) & isObj(b_43225.m_type, NTI39091))) {
result_43231 = HEX2D_43222(a_43224, b_43225);
break BeforeRet;
}
}}}}
} while (false); 
return result_43231;
}
function HEX2A_43275(a_43277, b_43278) {
var result_43279 = null;
result_43279 = newvalue_40517((a_43277.value_39131 * b_43278.value_39128));
return result_43279;
}
function HEX2A_43269(a_43271, b_43272) {
var result_43273 = null;
result_43273 = newvalue_40517((a_43271.value_39128 * b_43272.value_39131));
return result_43273;
}
function HEX2A_43264(a_43266, b_43267) {
var result_43268 = null;
result_43268 = newvalue_40512((a_43266.value_39128 * b_43267.value_39128));
return result_43268;
}
function HEX2A_43281(a_43283, b_43284) {
var result_43285 = null;
result_43285 = newvalue_40517((a_43283.value_39131 * b_43284.value_39131));
return result_43285;
}
function HEX2A_43254(a_43256, b_43257) {
var result_43258 = null;
raiseruntimeexception_39196((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43256).slice(0,-1),makeNimstrLit(" * ").slice(0,-1),HEX24_39604(b_43257)));
return result_43258;
}
function HEX2A_43260(a_43256, b_43257) {
var result_43263 = null;
BeforeRet: do {
if ((isObj(a_43256.m_type, NTI39130) & isObj(b_43257.m_type, NTI39127))) {
result_43263 = HEX2A_43275(a_43256, b_43257);
break BeforeRet;
}
else {
if ((isObj(a_43256.m_type, NTI39127) & isObj(b_43257.m_type, NTI39130))) {
result_43263 = HEX2A_43269(a_43256, b_43257);
break BeforeRet;
}
else {
if ((isObj(a_43256.m_type, NTI39127) & isObj(b_43257.m_type, NTI39127))) {
result_43263 = HEX2A_43264(a_43256, b_43257);
break BeforeRet;
}
else {
if ((isObj(a_43256.m_type, NTI39130) & isObj(b_43257.m_type, NTI39130))) {
result_43263 = HEX2A_43281(a_43256, b_43257);
break BeforeRet;
}
else {
if ((isObj(a_43256.m_type, NTI39091) & isObj(b_43257.m_type, NTI39091))) {
result_43263 = HEX2A_43254(a_43256, b_43257);
break BeforeRet;
}
}}}}
} while (false); 
return result_43263;
}
function HEX2F_43307(a_43309, b_43310) {
var result_43311 = null;
result_43311 = newvalue_40517((a_43309.value_39131 / b_43310.value_39128));
return result_43311;
}
function HEX2F_43301(a_43303, b_43304) {
var result_43305 = null;
result_43305 = newvalue_40517((a_43303.value_39128 / b_43304.value_39131));
return result_43305;
}
function HEX2F_13810(x_13812, y_13813) {
var result_13814 = 0.0;
result_13814 = (x_13812 / y_13813);
return result_13814;
}
function HEX2F_43296(a_43298, b_43299) {
var result_43300 = null;
result_43300 = newvalue_40517(HEX2F_13810(a_43298.value_39128, b_43299.value_39128));
return result_43300;
}
function HEX2F_43313(a_43315, b_43316) {
var result_43317 = null;
result_43317 = newvalue_40517((a_43315.value_39131 / b_43316.value_39131));
return result_43317;
}
function HEX2F_43286(a_43288, b_43289) {
var result_43290 = null;
raiseruntimeexception_39196((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43288).slice(0,-1),makeNimstrLit(" / ").slice(0,-1),HEX24_39604(b_43289)));
return result_43290;
}
function HEX2F_43292(a_43288, b_43289) {
var result_43295 = null;
BeforeRet: do {
if ((isObj(a_43288.m_type, NTI39130) & isObj(b_43289.m_type, NTI39127))) {
result_43295 = HEX2F_43307(a_43288, b_43289);
break BeforeRet;
}
else {
if ((isObj(a_43288.m_type, NTI39127) & isObj(b_43289.m_type, NTI39130))) {
result_43295 = HEX2F_43301(a_43288, b_43289);
break BeforeRet;
}
else {
if ((isObj(a_43288.m_type, NTI39127) & isObj(b_43289.m_type, NTI39127))) {
result_43295 = HEX2F_43296(a_43288, b_43289);
break BeforeRet;
}
else {
if ((isObj(a_43288.m_type, NTI39130) & isObj(b_43289.m_type, NTI39130))) {
result_43295 = HEX2F_43313(a_43288, b_43289);
break BeforeRet;
}
else {
if ((isObj(a_43288.m_type, NTI39091) & isObj(b_43289.m_type, NTI39091))) {
result_43295 = HEX2F_43286(a_43288, b_43289);
break BeforeRet;
}
}}}}
} while (false); 
return result_43295;
}
function HEX3C_43328(a_43330, b_43331) {
var result_43332 = null;
result_43332 = newvalue_40527((a_43330.value_39128 < b_43331.value_39128));
return result_43332;
}
function HEX3C_43339(a_43341, b_43342) {
var result_43343 = null;
result_43343 = newvalue_40527((a_43341.value_39131 < b_43342.value_39128));
return result_43343;
}
function HEX3C_43333(a_43335, b_43336) {
var result_43337 = null;
result_43337 = newvalue_40527((a_43335.value_39128 < b_43336.value_39131));
return result_43337;
}
function cmpStrings(a_12341, b_12342) {
    if (a_12341 == b_12342) return 0;
    if (!a_12341) return -1;
    if (!b_12342) return 1;
    for (var i = 0; i < a_12341.length-1; ++i) {
      var result = a_12341[i] - b_12342[i];
      if (result != 0) return result;
    }
    return 0;
  }
function HEX3C_43350(a_43352, b_43353) {
var result_43354 = null;
result_43354 = newvalue_40527((cmpStrings(a_43352.value_39134, b_43353.value_39134) < 0));
return result_43354;
}
function HEX3C_43345(a_43347, b_43348) {
var result_43349 = null;
result_43349 = newvalue_40527((a_43347.value_39131 < b_43348.value_39131));
return result_43349;
}
function HEX3C_43318(a_43320, b_43321) {
var result_43322 = null;
raiseruntimeexception_39196((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43320).slice(0,-1),makeNimstrLit(" < ").slice(0,-1),HEX24_39604(b_43321)));
return result_43322;
}
function HEX3C_43324(a_43320, b_43321) {
var result_43327 = null;
BeforeRet: do {
if ((isObj(a_43320.m_type, NTI39127) & isObj(b_43321.m_type, NTI39127))) {
result_43327 = HEX3C_43328(a_43320, b_43321);
break BeforeRet;
}
else {
if ((isObj(a_43320.m_type, NTI39130) & isObj(b_43321.m_type, NTI39127))) {
result_43327 = HEX3C_43339(a_43320, b_43321);
break BeforeRet;
}
else {
if ((isObj(a_43320.m_type, NTI39127) & isObj(b_43321.m_type, NTI39130))) {
result_43327 = HEX3C_43333(a_43320, b_43321);
break BeforeRet;
}
else {
if ((isObj(a_43320.m_type, NTI39133) & isObj(b_43321.m_type, NTI39133))) {
result_43327 = HEX3C_43350(a_43320, b_43321);
break BeforeRet;
}
else {
if ((isObj(a_43320.m_type, NTI39130) & isObj(b_43321.m_type, NTI39130))) {
result_43327 = HEX3C_43345(a_43320, b_43321);
break BeforeRet;
}
else {
if ((isObj(a_43320.m_type, NTI39091) & isObj(b_43321.m_type, NTI39091))) {
result_43327 = HEX3C_43318(a_43320, b_43321);
break BeforeRet;
}
}}}}}
} while (false); 
return result_43327;
}
function HEX3CHEX3D_43365(a_43367, b_43368) {
var result_43369 = null;
result_43369 = newvalue_40527((a_43367.value_39128 <= b_43368.value_39128));
return result_43369;
}
function HEX3CHEX3D_43376(a_43378, b_43379) {
var result_43380 = null;
result_43380 = newvalue_40527((a_43378.value_39131 <= b_43379.value_39128));
return result_43380;
}
function HEX3CHEX3D_43370(a_43372, b_43373) {
var result_43374 = null;
result_43374 = newvalue_40527((a_43372.value_39128 <= b_43373.value_39131));
return result_43374;
}
function HEX3CHEX3D_43387(a_43389, b_43390) {
var result_43391 = null;
result_43391 = newvalue_40527((cmpStrings(a_43389.value_39134, b_43390.value_39134) <= 0));
return result_43391;
}
function HEX3CHEX3D_43382(a_43384, b_43385) {
var result_43386 = null;
result_43386 = newvalue_40527((a_43384.value_39131 <= b_43385.value_39131));
return result_43386;
}
function HEX3CHEX3D_43355(a_43357, b_43358) {
var result_43359 = null;
raiseruntimeexception_39196((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43357).slice(0,-1),makeNimstrLit(" <= ").slice(0,-1),HEX24_39604(b_43358)));
return result_43359;
}
function HEX3CHEX3D_43361(a_43357, b_43358) {
var result_43364 = null;
BeforeRet: do {
if ((isObj(a_43357.m_type, NTI39127) & isObj(b_43358.m_type, NTI39127))) {
result_43364 = HEX3CHEX3D_43365(a_43357, b_43358);
break BeforeRet;
}
else {
if ((isObj(a_43357.m_type, NTI39130) & isObj(b_43358.m_type, NTI39127))) {
result_43364 = HEX3CHEX3D_43376(a_43357, b_43358);
break BeforeRet;
}
else {
if ((isObj(a_43357.m_type, NTI39127) & isObj(b_43358.m_type, NTI39130))) {
result_43364 = HEX3CHEX3D_43370(a_43357, b_43358);
break BeforeRet;
}
else {
if ((isObj(a_43357.m_type, NTI39133) & isObj(b_43358.m_type, NTI39133))) {
result_43364 = HEX3CHEX3D_43387(a_43357, b_43358);
break BeforeRet;
}
else {
if ((isObj(a_43357.m_type, NTI39130) & isObj(b_43358.m_type, NTI39130))) {
result_43364 = HEX3CHEX3D_43382(a_43357, b_43358);
break BeforeRet;
}
else {
if ((isObj(a_43357.m_type, NTI39091) & isObj(b_43358.m_type, NTI39091))) {
result_43364 = HEX3CHEX3D_43355(a_43357, b_43358);
break BeforeRet;
}
}}}}}
} while (false); 
return result_43364;
}
function eq_43407(a_43409, b_43410) {
var result_43411 = null;
result_43411 = newvalue_40527((a_43409.value_39128 == b_43410.value_39131));
return result_43411;
}
function eq_43402(a_43404, b_43405) {
var result_43406 = null;
result_43406 = newvalue_40527((a_43404.value_39128 == b_43405.value_39128));
return result_43406;
}
function eq_43413(a_43415, b_43416) {
var result_43417 = null;
result_43417 = newvalue_40527((a_43415.value_39131 == b_43416.value_39128));
return result_43417;
}
function eq_43429(a_43431, b_43432) {
var result_43433 = null;
result_43433 = newvalue_40527((value_39293(a_43431) == value_39293(b_43432)));
return result_43433;
}
function eq_43424(a_43426, b_43427) {
var result_43428 = null;
result_43428 = newvalue_40527(eqStrings(a_43426.value_39134, b_43427.value_39134));
return result_43428;
}
function eq_43419(a_43421, b_43422) {
var result_43423 = null;
result_43423 = newvalue_40527((a_43421.value_39131 == b_43422.value_39131));
return result_43423;
}
function eq_43392(a_43394, b_43395) {
var result_43396 = null;
raiseruntimeexception_39196((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43394).slice(0,-1),makeNimstrLit(" == ").slice(0,-1),HEX24_39604(b_43395)));
return result_43396;
}
function eq_43398(a_43394, b_43395) {
var result_43401 = null;
BeforeRet: do {
if ((isObj(a_43394.m_type, NTI39127) & isObj(b_43395.m_type, NTI39130))) {
result_43401 = eq_43407(a_43394, b_43395);
break BeforeRet;
}
else {
if ((isObj(a_43394.m_type, NTI39127) & isObj(b_43395.m_type, NTI39127))) {
result_43401 = eq_43402(a_43394, b_43395);
break BeforeRet;
}
else {
if ((isObj(a_43394.m_type, NTI39130) & isObj(b_43395.m_type, NTI39127))) {
result_43401 = eq_43413(a_43394, b_43395);
break BeforeRet;
}
else {
if ((isObj(a_43394.m_type, NTI39136) & isObj(b_43395.m_type, NTI39136))) {
result_43401 = eq_43429(a_43394, b_43395);
break BeforeRet;
}
else {
if ((isObj(a_43394.m_type, NTI39133) & isObj(b_43395.m_type, NTI39133))) {
result_43401 = eq_43424(a_43394, b_43395);
break BeforeRet;
}
else {
if ((isObj(a_43394.m_type, NTI39130) & isObj(b_43395.m_type, NTI39130))) {
result_43401 = eq_43419(a_43394, b_43395);
break BeforeRet;
}
else {
if ((isObj(a_43394.m_type, NTI39091) & isObj(b_43395.m_type, NTI39091))) {
result_43401 = eq_43392(a_43394, b_43395);
break BeforeRet;
}
}}}}}}
} while (false); 
return result_43401;
}
function HEX26_43449(a_43451, b_43452) {
var result_43453 = null;
BeforeRet: do {
add_40556(a_43451, b_43452.nodes_39150);
result_43453 = a_43451;
break BeforeRet;
} while (false); 
return result_43453;
}
function HEX26_43444(a_43446, b_43447) {
var result_43448 = null;
result_43448 = newvalue_40522((a_43446.value_39134.slice(0,-1)).concat(b_43447.value_39134));
return result_43448;
}
function HEX26_43434(a_43436, b_43437) {
var result_43438 = null;
raiseruntimeexception_39196((makeNimstrLit("Can not evaluate ").slice(0,-1)).concat(HEX24_39604(a_43436).slice(0,-1),makeNimstrLit(" & ").slice(0,-1),HEX24_39604(b_43437)));
return result_43438;
}
function HEX26_43440(a_43436, b_43437) {
var result_43443 = null;
BeforeRet: do {
if ((isObj(a_43436.m_type, NTI39148) & isObj(b_43437.m_type, NTI39148))) {
result_43443 = HEX26_43449(a_43436, b_43437);
break BeforeRet;
}
else {
if ((isObj(a_43436.m_type, NTI39133) & isObj(b_43437.m_type, NTI39133))) {
result_43443 = HEX26_43444(a_43436, b_43437);
break BeforeRet;
}
else {
if ((isObj(a_43436.m_type, NTI39091) & isObj(b_43437.m_type, NTI39091))) {
result_43443 = HEX26_43434(a_43436, b_43437);
break BeforeRet;
}
}}
} while (false); 
return result_43443;
}
function makebinding_43575(self_43577, key_43578, val_43579) {
var result_43580 = null;
result_43580 = makebinding_39886(getlocals_43121(self_43577), key_43578, val_43579);
return result_43580;
}
function makebinding_43564(self_43566, key_43567, val_43568) {
var result_43569 = null;
return result_43569;
}
function makebinding_43571(self_43566, key_43567, val_43568) {
var result_43574 = null;
BeforeRet: do {
if (isObj(self_43566.m_type, NTI42608)) {
result_43574 = makebinding_43575(self_43566, key_43567, val_43568);
break BeforeRet;
}
else {
if (isObj(self_43566.m_type, NTI42600)) {
result_43574 = makebinding_43564(self_43566, key_43567, val_43568);
break BeforeRet;
}
}
} while (false); 
return result_43574;
}
